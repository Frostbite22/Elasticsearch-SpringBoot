!function(a){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;b="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,b.CockpitPlugins=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){"use strict";b.exports=a("angular")},{angular:"angular"}],2:[function(a,b,c){"use strict";b.exports=a("moment")},{moment:"moment"}],3:[function(a,b,c){"use strict";b.exports=a("camunda-bpm-sdk-js/vendor/angular")},{"camunda-bpm-sdk-js/vendor/angular":1}],4:[function(a,b,c){"use strict";b.exports=a("camunda-bpm-sdk-js/vendor/moment")},{"camunda-bpm-sdk-js/vendor/moment":2}],5:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d='<button type="button" role="button" class="btn btn-sm btn-default call-btn activity-top-right-position">\n  <span class="glyphicon glyphicon glyphicon-link"></span>\n</button>\n';b.exports=function(a){return["$scope","$timeout","$location","$translate","search","control","processData","processDiagram","PluginProcessInstanceResource",function(b,e,f,g,h,i,j,k,l){function m(){var a=[];return s.forEach(function(b){var c=b.businessObject;c.$instanceOf("bpmn:CallActivity")&&a.push(c.id)}),a}function n(d){var e=c.copy(h());"history"===a?e.detailsTab=t:e.tab=t,h.updateSilently(e),b.processData.set("filter",{activityIds:[d[0].activityId],activityInstanceIds:d.map(function(a){return a.id})})}function o(d,g,h){var i=c.element('[data-element-id="'+g+'"]'),j=null,k=function(){arguments[0].apply(this,Array.prototype.slice.call(arguments,1));var a=b.$root.$$phase;"$apply"!==a&&"$digest"!==a&&b.$apply()},l=function(a){j=e(function(){d.hide()},a)},m=function(){return j&&e.cancel(j)},o=function(){d.show(),k(m)},p=function(b){var c="/process-instance/"+b.calledProcessInstanceId+"/"+a;f.url(c)},q=function(){return d.tooltip("hide"),h.length>1?k(n,h):k(p,h[0])};i.on("mouseover",o),i.on("mouseout",function(){l(50)}),d.on("mouseover",o),d.on("mouseout",function(){l(100)}),d.on("click",q),b.$on("$destroy",function(){d.off("mouseover mouseout click"),i.off("mouseover mouseout")})}function p(a,b){q[a]||(q[a]=c.element(d).hide(),q[a].tooltip({container:"body",title:g.instant("PLUGIN_ACTIVITY_INSTANCE_SHOW_CALLED_PROCESS_INSTANCES"),placement:"top",animation:!1}),r.add(a,{position:{top:0,right:0},show:{minZoom:-(1/0),maxZoom:+(1/0)},html:q[a]}),o(q[a],a,b))}var q={},r=i.getViewer().get("overlays"),s=i.getViewer().get("elementRegistry"),t="called-process-instances-tab",u=m(),v={},w=function(a){Object.keys(a).map(function(b){return a[b][0].calledProcessInstanceId&&p(b,a[b])})},x=function(a,b){return a.reduce(function(a,c){return b[c]&&b[c].length>0&&(a[c]=b[c]),a},{})};"history"===a?u.length&&j.observe("activityIdToInstancesMap",function(a){v=x(u,a),w(v)}):u.length&&j.observe(["activityIdToInstancesMap","processInstance"],function(a,b){v=x(u,a),l.processInstances({id:b.id},function(a){return a.forEach(function(a){var b=v[a.callActivityId];b&&b.length&&(b[0].calledProcessInstanceId=a.id)}),w(v)})})}]}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],6:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d='<!-- # CE - camunda-bpm-webapp/ui/cockpit/client/scripts/components/variables/variable-add-dialog.html -->\n<div class="modal-header">\n  <h3>{{ isProcessInstance ? \'VARIABLE_ADD_MODAL_TITLE_PROCESS\' : \'VARIABLE_ADD_MODAL_TITLE_CASE\' | translate }}</h3>\n</div>\n\n<div class="modal-body add-variable-dialog">\n  <div notifications-panel></div>\n\n  <form class="form-horizontal"\n        name="addVariableForm"\n        novalidate\n        ng-submit="save()"\n        ng-hide="status === \'SUCCESS\' || status === \'FAIL\'"\n        request-aware>\n    <fieldset>\n\n      <div class="form-group variable-name">\n        <label class="control-label col-xs-4"\n               for="variableName">{{ \'VARIABLE_ADD_VARIABLE_NAME\' | translate }}</label>\n        <div class="col-xs-8">\n          <input id="variableNameId"\n                 name="variableName"\n                 class="form-control"\n                 type="text"\n                 ng-model="newVariable.name"\n                 autofocus\n                 required />\n        </div>\n      </div>\n\n      <div class="form-group variable-type">\n        <label class="control-label col-xs-4"\n               for="variableType">{{ \'VARIABLE_ADD_VARIABLE_TYPE\' | translate }}</label>\n        <div class="col-xs-8">\n          <select id="variableTypeId"\n                  name="variableType"\n                  class="form-control"\n                  ng-options="variableType for variableType in variableTypes"\n                  ng-model="newVariable.type">\n          </select>\n        </div>\n      </div>\n\n      <div class="form-group variable-value">\n        <label class="control-label col-xs-4"\n               for="variableValue">{{ \'VARIABLE_ADD_VARIABLE_VALUE\' | translate }}</label>\n        <div class="col-xs-8">\n          <div variable="newVariable" form="addVariableForm"></div>\n\n          <p class="invalid"\n             ng-show="this.addVariableForm.editDateValue.$error.datePattern">\n            {{ \'VARIABLE_ADD_VARIABLE_SUPPORTED\' | translate }}\n          </p>\n\n          <p class="invalid"\n             ng-show="this.addVariableForm.editDateValue.$error.dateValue">\n            Invalid Date Value.\n          </p>\n\n          <p class="invalid"\n             ng-show="this.addVariableForm.editIntegerValue.$error.numeric || this.addVariableForm.editFloatValue.$error.numeric">\n            {{ \'VARIABLE_ADD_VARIABLE_ONLY\' | translate:\'{ type : newVariable.type }\' }}\n          </p>\n        </div>\n      </div>\n\n    </fieldset>\n  </form>\n\n  <div ng-show="status === \'SUCCESS\'">\n    {{ isProcessInstance ? \'VARIABLE_ADD_STATUS_SUCCESS_PROCESS\' : \'VARIABLE_ADD_STATUS_SUCCESS_CASE\' | translate:\'{ name: newVariable.name }\' }}\n  </div>\n\n  <div ng-show="status === \'FAIL\'">\n    {{ isProcessInstance ? \'VARIABLE_ADD_STATUS_FAIL_PROCESS\' : \'VARIABLE_ADD_STATUS_FAIL_CASE\' | translate:\'{ name: newVariable.name }\' }}\n  </div>\n\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-link"\n          ng-click="close()"\n          ng-disabled="status === \'PERFORM_SAVE\'"\n          ng-hide="status === \'SUCCESS\' || status === \'FAIL\'">{{ \'VARIABLE_ADD_CLOSE\' | translate }}</button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="save()"\n          ng-hide="status === \'SUCCESS\' || status === \'FAIL\'"\n          ng-disabled="!isValid()">{{ \'VARIABLE_ADD_ADD\' | translate }}</button>\n\n  <button class="btn btn-primary"\n          ng-click="close()"\n          ng-show="status === \'SUCCESS\' || status === \'FAIL\'">{{ \'VARIABLE_ADD_OK\' | translate }}</button>\n</div>\n<!-- / CE - camunda-bpm-webapp/ui/cockpit/client/scripts/components/variables/variable-add-dialog.html -->\n',e=["$http","$modalInstance","$scope","Notifications","Uri","instance","isProcessInstance","fixDate","$translate","camAPI",function(a,b,d,e,f,g,h,i,j,k){d.isProcessInstance=h,d.variableTypes=["String","Boolean","Short","Integer","Long","Double","Date","Null","Object","Json","Xml"];var l=d.newVariable={name:null,type:"String",value:null},m="PERFORM_SAVE",n="SUCCESS",o="FAIL",p=k.resource("process-instance"),q=k.resource("case-instance");d.$on("$routeChangeStart",function(){b.close(d.status)}),d.close=function(){b.close(d.status)};var r=d.isValid=function(){var a=c.element('[name="addVariableForm"]').scope();return!(!a||!a.addVariableForm)&&a.addVariableForm.$valid};d.save=function(){if(r()){d.status=m;var a=c.extend({},l);"Date"===a.type&&(a.value=i(a.value));var b=h?p:q;b.setVariable(g.id,a).then(function(){d.status=n,e.addMessage({status:j.instant("VARIABLE_ADD_MESSAGE_STATUS_FINISHED"),message:j.instant("VARIABLE_ADD_MESSAGE_MESSAGE_ADD",{name:a.name}),exclusive:!0})})["catch"](function(a){d.status=o,e.addError({status:j.instant("VARIABLE_ADD_MESSAGE_STATUS_FINISHED"),message:j.instant("VARIABLE_ADD_MESSAGE_MESSAGE_ERROR",{message:a.message}),exclusive:!0})})}}}];b.exports={template:d,controller:e}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],7:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d='<!-- # CE - camunda-bpm-webapp/ui/cockpit/scripts/components/variables/variable-inspect-modal.html -->\n<div class="modal-header">\n  <h3>{{ \'VARIABLE_INSPECT_MODAL_TITLE\' | translate: \'{ name: variable.name }\' }}</h3>\n</div>\n\n\n<div class="modal-body variable-inspect">\n\n  <div notifications-panel></div>\n\n  <div ng-show="status === \'beforeChange\' || status === \'confirmChange\'">\n\n    <div ng-if="!isJsonOrXml" class="form-group">\n      <label>{{ \'VARIABLE_INSPECT_OBJECT_TYPE_NAME\' | translate }}</label>\n      <code class="form-control-static"\n            cam-widget-clipboard="variable.valueInfo.objectTypeName">{{ variable.valueInfo.objectTypeName }}</code>\n    </div>\n\n    <div ng-if="!isJsonOrXml" class="form-group">\n      <label>{{ \'VARIABLE_INSPECT_SERIALIZATION_DATA\' | translate }}</label>\n      <code class="form-control-static"\n            cam-widget-clipboard="variable.valueInfo.serializationDataFormat">{{ variable.valueInfo.serializationDataFormat }}</code>\n    </div>\n\n    <div ng-if="!isJsonOrXml" class="form-group">\n\n      <ul class="nav nav-tabs">\n        <li ng-class="{ active: selectedTab === \'serialized\' }">\n          <a href ng-click="selectTab(\'serialized\')">{{ \'VARIABLE_INSPECT_SERIALIZED\' | translate }}</a>\n        </li>\n        <li ng-class="{ active: selectedTab === \'deserialized\' }">\n          <a href ng-click="selectTab(\'deserialized\')">{{ \'VARIABLE_INSPECT_DESERIALIZED\' | translate }}</a>\n        </li>\n      </ul>\n\n      <textarea ng-if="selectedTab === \'serialized\'"\n                name="currentValue"\n                ng-readonly="readonly"\n                ng-model="currentValue"\n                ng-keyup="typeIn(this, \'serialized\')"\n                rows="10"\n                class="form-control">\n      </textarea>\n\n      <div ng-if="selectedTab === \'deserialized\'">\n        <div class="alert alert-danger"\n             ng-show="deserializationError">\n          <strong>{{ \'VARIABLE_INSPECT_DESERIALIZED_ERROR\' | translate }}</strong>\n          {{deserializationError}}\n        </div>\n\n        <div ng-show="!deserializationError">\n          <textarea name="currentDeserializedValue"\n                    ng-readonly="readonly"\n                    ng-model="currentDeserializedValue"\n                    ng-keyup="typeIn(this, \'deserialized\')"\n                    rows="10"\n                    class="form-control">\n          </textarea>\n        </div>\n      </div>\n\n    </div>\n\n    <div ng-if="isJsonOrXml"\n         class="form-group">\n        <form name="jsonXmlForm">\n          <label for="value"\n                 cam-widget-clipboard="variable.value"\n                 no-tooltip\n                 ng-class="{hovered: hovered === \'var-value\'}">\n            {{ \'CAM_WIDGET_STRING_DIALOG_LABEL_VALUE\' | translate }}\n          </label>\n          <div variable="variable"\n               readonly="readonly"\n               form="jsonXmlForm">\n          </div>\n        </form>\n\n    </div>\n\n  </div>\n\n  <div class="alert alert-warning"\n       ng-show="status === \'confirmChange\'">\n    <span class="glyphicon glyphicon-alert"></span>\n    <strong>{{ \'VARIABLE_INSPECT_WARNING\' | translate }}</strong>\n    {{ \'VARIABLE_INSPECT_WARNING_MESSAGE\' | translate }}\n  </div>\n\n</div>\n\n\n<div class="modal-footer">\n  <button class="btn btn-default"\n          ng-click="$dismiss()"\n          ng-hide="status === \'changeSuccess\'">\n    {{ \'VARIABLE_INSPECT_CLOSE\' | translate }}\n  </button>\n\n  <![if gt IE 9]>\n    <button class="btn btn-primary"\n            ng-click="$close()"\n            ng-show="!readlonly && status === \'changeSuccess\'">\n      {{ \'VARIABLE_INSPECT_OK\' | translate }}\n    </button>\n\n    <button class="btn btn-primary"\n            ng-click="change()"\n            ng-disabled="isChangeDisabled()"\n            ng-hide="readonly || status !== \'beforeChange\'">\n      {{ \'VARIABLE_INSPECT_CHANGE\' | translate }}\n    </button>\n\n    <button class="btn btn-warning"\n            ng-click="change()"\n            ng-hide="readonly || status !== \'confirmChange\'">\n      {{ \'VARIABLE_INSPECT_CONFIRM_CHANGE\' | translate }}\n    </button>\n  <![endif]>\n</div>\n<!-- / CE - camunda-bpm-webapp/ui/cockpit/scripts/components/variables/variable-inspect-modal.html -->\n',e=["$http","$modalInstance","$scope","Notifications","Uri","basePath","history","readonly","variable","$translate",function(a,b,d,e,f,g,h,i,j,k){function l(){return c.element('[name="jsonXmlForm"]').scope().jsonXmlForm.$valid}function m(a){return"serialized"===a}function n(b,c){var e={type:b.type,value:c,valueInfo:b.valueInfo};d.isJsonOrXml||(e.valueInfo=b.valueInfo),a({method:"PUT",url:f.appUri(g),data:e}).success(function(){d.status=u,r(b)}).error(function(){d.status=s,q(b)})}function o(a,b){function c(b){d.$apply(function(){204===b.status?(d.status=u,r(a)):(d.status=s,q(a))})}var e=new FormData;e.append("data",new Blob([b],{type:"application/json"})),e.append("type",a.valueInfo.objectTypeName);var h=new XMLHttpRequest;h.addEventListener("load",function(){c(h)},!1),h.open("POST",f.appUri(g+"/data")),h.send(e)}function p(){a({method:"GET",url:f.appUri("engine://engine/:engine/"+(h?"history/":"")+"variable-instance/"+j.id)}).success(function(a){a.errorMessage?d.deserializationError=a.errorMessage:(v=JSON.stringify(a.value),d.currentDeserializedValue=c.copy(v))}).error(function(a){d.deserializationError=a.message})}function q(a){e.addError({status:k.instant("VARIABLE_INSPECT_VARIABLE"),message:k.instant("VARIABLE_INSPECT_MESSAGE_ERR_2",{name:a.name}),exclusive:!0})}function r(a){e.addMessage({status:k.instant("VARIABLE_INSPECT_VARIABLE"),message:k.instant("VARIABLE_INSPECT_MESSAGE_ADD",{name:a.name})})}var s="beforeChange",t="confirmChange",u="changeSuccess";d.selectedTab="serialized",d.status=s,d.variable=c.copy(j),d.isJsonOrXml=j.type&&("json"===j.type.toLowerCase()||"xml"===j.type.toLowerCase()),d.readonly=i,d.currentValue=c.copy(j.value);var v;d.isChangeDisabled=function(){return(d.isJsonOrXml?!l():"beforeChange"!==d.status)||!w()},d.$on("$routeChangeStart",function(){b.dismiss()}),d.selectTab=function(a){d.selectedTab=a,d.currentValue=c.copy(d.variable.value),d.currentDeserializedValue=c.copy(v),d.status=s},d.typeIn=function(a,b){m(b)?d.currentValue=a.currentValue:d.currentDeserializedValue=a.currentDeserializedValue,d.status=w(b)?t:s};var w=d.hasChanged=function(a){return d.isJsonOrXml||m(a)?d.variable.value!==d.currentValue:v!=d.currentDeserializedValue};d.change=function(){var a=!m(d.selectedTab),b=a?d.currentDeserializedValue:d.currentValue;if(d.isJsonOrXml&&(b=d.variable.value),"application/json"===j.valueInfo.serializationDataFormat||a)try{JSON.parse(b)}catch(c){return d.status=s,void e.addError({status:k.instant("VARIABLE_INSPECT_VARIABLE"),message:k.instant("VARIABLE_INSPECT_MESSAGE_ERR_1",{exception:c.message}),exclusive:!0})}a?o(d.variable,b):n(d.variable,b)},d.isJsonOrXml||p()}];b.exports={template:d,controller:e}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],8:[function(a,b,c){"use strict";var d='<!-- # CE - camunda-bpm-webapp/ui/cockpit/scripts/components/variables/variable-upload-modal.html -->\n<div class="modal-header">\n  <h3>{{ \'VARIABLE_UPLOAD_MODAL_TITLE\' | translate }}</h3>\n</div>\n\n<!--[if lt IE 10]>\n\nThis feature is unsupported in your Browser.\n\n<![endif]-->\n\n<![if gt IE 9]>\n\n<div class="modal-body variable-upload">\n\n  <div notifications-panel></div>\n\n  <div ng-show="status === \'beforeUpload\'">\n\n    <p>{{ \'VARIABLE_UPLOAD_SELECT_FILE\' | translate }}:</p>\n\n    <p>\n      <input name="data"\n             type="file"\n             size="50"\n             maxlength="100000"\n             accept="*/*"\n             onchange="angular.element(this).scope().setFile(this)" />\n    </p>\n\n  </div>\n\n  <div ng-show="status === \'performUpload\'">\n    {{ \'VARIABLE_UPLOAD_PROGRESS\' | translate:\'{progress: progress}\' }}\n  </div>\n\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-default"\n          ng-click="$dismiss()"\n          ng-hide="status === \'uploadSuccess\' || status === \'uploadFailed\'">\n    {{ \'VARIABLE_UPLOAD_CLOSE\' | translate }}\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="$close()"\n          ng-show="status === \'uploadSuccess\' || status === \'uploadFailed\'">\n    {{ \'VARIABLE_UPLOAD_OK\' | translate }}\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="upload()"\n          ng-disabled="status !== \'beforeUpload\'"\n          ng-hide="status === \'uploadSuccess\' || status === \'uploadFailed\'">\n    {{ \'VARIABLE_UPLOAD_UPLOAD\' | translate }}\n  </button>\n</div>\n\n<![endif]>\n\n<!-- / CE - camunda-bpm-webapp/ui/cockpit/scripts/components/variables/variable-upload-modal.html -->\n',e=["$modalInstance","$scope","Notifications","Uri","basePath","variable","$translate","$browser",function(a,b,c,d,e,f,g,h){var i="beforeUpload",j="performUpload",k="uploadSuccess",l="uploadFailed";b.status=i,b.variable=f;var m;b.$on("$routeChangeStart",function(){a.dismiss()}),b.upload=function(){function a(a){b.$apply(function(){b.status=j,a.lengthComputable&&(b.progress=Math.round(100*a.loaded/a.total))})}function i(a){b.$apply(function(){204===a.status?(b.status=k,c.addMessage({status:g.instant("VARIABLE_UPLOAD_FILE"),message:g.instant("VARIABLE_UPLOAD_MESSAGE_ADD")})):(b.status=l,c.addError({status:g.instant("VARIABLE_UPLOAD_FILE"),message:g.instant("VARIABLE_UPLOAD_MESSAGE_ERR"),exclusive:!0}))})}function n(){b.$apply(function(){b.status=l,c.addError({status:g.instant("VARIABLE_UPLOAD_FILE"),message:g.instant("VARIABLE_UPLOAD_MESSAGE_ERR"),exclusive:!0})})}var o=new FormData;o.append("data",m),o.append("valueType",f.type);var p=new XMLHttpRequest;p.upload.addEventListener("progress",a,!1),p.addEventListener("load",function(){i(p)},!1),p.addEventListener("error",n,!1),p.addEventListener("abort",n,!1),p.open("POST",d.appUri(e+"/data"));var q=h.cookies()["XSRF-TOKEN"];q&&p.setRequestHeader("X-XSRF-TOKEN",q),p.send(o)},b.setFile=function(a){m=a.files[0]}}];b.exports={template:d,controller:e}},{}],9:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d=["$scope","processData","ProcessDefinitionResource",function(a,b,d){b.provide("processDefinitionsWithRootIncidents",function(){return d.queryStatistics({rootIncidents:!0}).$promise}),b.provide("processDefinitions",function(){return d.queryStatistics({incidents:!0}).$promise}),b.provide("processDefinitionStatistics",["processDefinitions",function(a){return e(a)}]),b.provide("processDefinitionWithRootIncidentsStatistics",["processDefinitionsWithRootIncidents",function(a){return e(a)}]);var e=function(a){var b=[],d=[];return c.forEach(a,function(a){var e=b[a.definition.key];e||(b[a.definition.key]=[]);var f=b[a.definition.key][a.definition.tenantId];f?(a.definition.version>f.definition.version&&(f.definition=a.definition,f.id=a.id,f.definition.name=f.definition.name||f.definition.key),f.instances+=a.instances,f.failedJobs+=a.failedJobs,c.forEach(a.incidents,function(a){for(var b=a.incidentType,c=a.incidentCount,d=!0,e=0;e<f.incidents.length;e++){var g=f.incidents[e];g.incidentType==b&&(g.incidentCount=c+g.incidentCount,d=!1)}d&&f.incidents.push(a)})):(f=c.copy(a),f.definition.name||(f.definition.name=f.definition.key),b[f.definition.key][a.definition.tenantId]=f,d.push(f))}),d}}],e=function(a){a.registerData("cockpit.dashboard.data",{id:"process-definition-statistics-data",controller:d})};e.$inject=["DataProvider"],b.exports=e}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],10:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./dashboard/processDefinitionStatisticsData"),f=a("./processDefinition/activityInstanceStatisticsData"),g=d.module("cockpit.plugin.base.data",[]);g.config(e),g.config(f),b.exports=g}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./dashboard/processDefinitionStatisticsData":9,"./processDefinition/activityInstanceStatisticsData":11}],11:[function(a,b,c){"use strict";var d=["$scope","processData","ProcessDefinitionResource",function(a,b,c){b.provide("activityInstanceStatistics",["processDefinition",function(a){return c.queryActivityStatistics({id:a.id,incidents:!0}).$promise}])}],e=function(a){a.registerData("cockpit.processDefinition.data",{id:"activity-instance-statistics-data",controller:d})};e.$inject=["DataProvider"],b.exports=e},{}],12:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./views/main"),f=a("./resources/main"),g=a("./data/main");b.exports=d.module("cockpit.plugin.base",[e.name,f.name,g.name])}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./data/main":10,"./resources/main":13,"./views/main":23}],13:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./processDefinition"),f=a("./processInstance"),g=d.module("cockpit.plugin.base.resources",[]);g.factory("PluginProcessDefinitionResource",e),g.factory("PluginProcessInstanceResource",f),b.exports=g}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./processDefinition":14,"./processInstance":15}],14:[function(a,b,c){"use strict";b.exports=["$resource","Uri",function(a,b){return a(b.appUri("plugin://base/:engine/process-definition/:id/:action"),{id:"@id"},{getCalledProcessDefinitions:{method:"POST",isArray:!0,params:{action:"called-process-definitions"}}})}]},{}],15:[function(a,b,c){"use strict";b.exports=["$resource","Uri",function(a,b){return a(b.appUri("plugin://base/:engine/process-instance/:id/:action"),{id:"@id"},{query:{method:"POST",isArray:!0},"delete":{url:b.appUri("engine://engine/:engine/process-instance/:id"),method:"DELETE"},count:{method:"POST",isArray:!1,params:{id:"count"}},processInstances:{method:"POST",isArray:!0,params:{action:"called-process-instances"}},getCalledProcessInstances:{method:"POST",isArray:!0,params:{action:"called-process-instances"}}})}]},{}],16:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d='<div class="activity-bottom-left-position instances-overlay">\n  <span class="badge instance-count"></span>\n  <span class="badge badge-important instance-incidents"></span>\n</div>\n';b.exports=function(a,b,e,f,g,h,i){function j(b,e){var f=c.element(d),g=k.bind(null,b,e),h={html:f,instancesNode:f.find(".instance-count"),incidentsNode:f.find(".instance-incidents")};return f.on("click",g),a.$on("$destroy",function(){f.off("click",g)}),h}function k(b,d,f){var g=c.copy(q),h=f.ctrlKey,i=b.id,j=c.copy(g.activityIds)||[],k=j.indexOf(i),l=k!==-1,m=d.multiInstance;i?h?l?(j.splice(k,1),m&&j.splice(j.indexOf(i+"#multiInstanceBody"),1)):(j.push(i),m&&j.push(i+"#multiInstanceBody")):(j=[i],m&&j.push(i+"#multiInstanceBody")):j=null,g.activityIds=j,a.$apply(function(){e.set("filter",g)})}var l=b.getViewer?b.getViewer():b,m=l.get("overlays"),n=l.get("elementRegistry"),o=g.startLoading(),p={};i.observe(function(a){o(),n.forEach(function(b){var c,d=f.bpmnElements[b.businessObject.id],e=i.getData.apply(null,[d].concat(a));i.isActive(e)&&(p[d.id]||(c=j(d,e),m.add(d.id,{position:{bottom:0,left:0},show:{minZoom:-(1/0),maxZoom:+(1/0)},html:c.html}),p[d.id]=c),d.isSelectable=!0),p[d.id]&&i.updateOverlayNodes(p[d.id],e)}),i.toggleIsLoading&&i.toggleIsLoading(),h.$broadcast("cockpit.plugin.base.views:diagram-plugins:instance-plugin-loaded")});var q=e.observe("filter",function(a){q=a})}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],17:[function(a,b,c){"use strict";b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.navigation",{id:"batch",label:"COCKPIT_BATCHES",pagePath:"#/batch",template:"<!-- nothing to show, but needed -->",controller:function(){},checkActive:function(a){var b="#/batch",c=(a||"").split("?");return c.length&&c[0].slice(0-b.length)===b},priority:-5})}]},{}],18:[function(a,b,c){"use strict";b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.navigation",{id:"decisions",label:"COCKPIT_DECISIONS",pagePath:"#/decisions",checkActive:function(a){return a.indexOf("#/decision")>-1},template:"<!-- nothing to show, but needed -->",controller:function(){},priority:90})}]},{}],19:[function(a,b,c){"use strict";b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.navigation",{id:"deployments",label:"COCKPIT_DEPLOYMENTS",pagePath:"#/repository",template:"<!-- nothing to show, but needed -->",controller:function(){},priority:-5})}]},{}],20:[function(a,b,c){"use strict";b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.navigation",{id:"proceses",label:"COCKPIT_PROCESSES",pagePath:"#/processes",checkActive:function(a){return a.indexOf("#/process")>-1||a.indexOf("#/migration")>-1},template:"<!-- nothing to show, but needed -->",controller:function(){},priority:100})}]},{}],21:[function(a,b,c){"use strict";b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.navigation",{id:"reports",label:"COCKPIT_REPORTS",pagePath:"#/reports",template:"<!-- nothing to show, but needed -->",controller:function(){},access:["Views",function(a){return function(b){var c=a.getProviders({component:"cockpit.report"});b(null,!!c.length)}}],priority:-4})}]},{}],22:[function(a,b,c){"use strict";b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.navigation",{id:"tasks",label:"COCKPIT_HUMAN_TASKS",template:"<!-- nothing to show, but needed -->",pagePath:"#/tasks",checkActive:function(a){return a.indexOf("#/tasks")>-1},controller:function(){},priority:20})}]},{}],23:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e="undefined"!=typeof window?window["cam-common"]:"undefined"!=typeof c?c["cam-common"]:null,f=a("./processInstance/diagramPlugins"),g=a("./processDefinition/diagramPlugins"),h=a("./dashboard/deployments"),i=a("./dashboard/reports"),j=a("./dashboard/batches"),k=a("./dashboard/processes"),l=a("./dashboard/decisions"),m=a("./dashboard/tasks"),n=a("./processesDashboard/process-definitions"),o=a("./processDefinition/processInstanceTable"),p=a("./processDefinition/calledProcessDefinitionTable"),q=a("./processDefinition/updateSuspensionStateAction"),r=a("./processDefinition/updateSuspensionStateDialog"),s=a("./processDefinition/pdIncidentsTab"),t=a("./processInstance/variableInstancesTab"),u=a("./processInstance/incidentsTab"),v=a("./processInstance/calledProcessInstanceTable"),w=a("./processInstance/userTasksTable"),x=a("./processInstance/jobRetryBulkAction"),y=a("./processInstance/jobRetryBulkDialog"),z=a("./processInstance/jobRetryDialog"),A=a("./processInstance/externalTaskRetryDialog"),B=a("./processInstance/cancelProcessInstanceAction"),C=a("./processInstance/cancelProcessInstanceDialog"),D=a("./processInstance/addVariableAction"),E=a("./processInstance/updateSuspensionStateAction"),F=a("./processInstance/updateSuspensionStateDialog"),G=a("./processInstance/incidentJobRetryAction"),H=a("./processInstance/incident-externalTask-retry-action"),I=d.module("cockpit.plugin.base.views",[e.name,f.name,g.name]);I.config(h),I.config(i),I.config(j),I.config(k),I.config(l),I.config(m),I.config(n),I.config(o),I.config(p),I.config(q),I.controller("UpdateProcessDefinitionSuspensionStateController",r),I.config(s),t(I),I.config(u),v(I),w(I),x(I),I.controller("JobRetriesController",y),I.controller("JobRetryController",z),I.controller("ExternalTaskRetryController",A),B(I),I.controller("CancelProcessInstanceController",C),I.config(D),I.config(E),I.controller("UpdateProcessInstanceSuspensionStateController",F),I.config(G),I.config(H),b.exports=I}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./dashboard/batches":17,"./dashboard/decisions":18,"./dashboard/deployments":19,"./dashboard/processes":20,"./dashboard/reports":21,"./dashboard/tasks":22,"./processDefinition/calledProcessDefinitionTable":24,"./processDefinition/diagramPlugins":25,"./processDefinition/pdIncidentsTab":27,"./processDefinition/processInstanceTable":28,"./processDefinition/updateSuspensionStateAction":29,"./processDefinition/updateSuspensionStateDialog":30,"./processInstance/addVariableAction":31,"./processInstance/calledProcessInstanceTable":32,"./processInstance/cancelProcessInstanceAction":33,"./processInstance/cancelProcessInstanceDialog":34,"./processInstance/diagramPlugins":36,"./processInstance/externalTaskRetryDialog":38,"./processInstance/incident-externalTask-retry-action":39,"./processInstance/incidentJobRetryAction":40,"./processInstance/incidentsTab":41,"./processInstance/jobRetryBulkAction":42,"./processInstance/jobRetryBulkDialog":43,"./processInstance/jobRetryDialog":44,"./processInstance/updateSuspensionStateAction":45,"./processInstance/updateSuspensionStateDialog":46,"./processInstance/userTasksTable":47,"./processInstance/variableInstancesTab":48,"./processesDashboard/process-definitions":49}],24:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("../../../../../../common/scripts/util/search-widget-utils"),f='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/called-process-definition-table.html -->\n<div cam-widget-loader\n     loading-state="{{ loadingState }}"\n     text-empty="{{\'PLUGIN_CALLED_PROCESS_EMPTY\' | translate}}">\n  <table class="called-process-definition cam-table">\n    <thead sortable-table-head\n           head-columns="headColumns"\n           on-sort-change="onSortChange(sortObj)"\n           default-sort="sortObj">\n    </thead>\n    <tbody>\n      <tr ng-repeat="calledProcessDefinition in calledProcessDefinitions | orderBy:sortObj.sortBy:sortObj.sortReverse">\n        <td class="process-definition"\n            cam-widget-clipboard="calledProcessDefinition.id">\n          <a ng-href="#/process-definition/{{ calledProcessDefinition.id }}/runtime?parentProcessDefinitionId={{ processDefinition.id }}">\n            {{ calledProcessDefinition.label }}\n          </a>\n        </td>\n\n        <td class="activity">\n          <span ng-show="calledProcessDefinition.calledFromActivities.length === 1"\n                cam-widget-clipboard="calledProcessDefinition.calledFromActivities[0].id">\n            <a ng-href="#/process-definition/{{ processDefinition.id }}/runtime?{{ getSearchQueryForSearchType(calledProcessDefinition.calledFromActivities[0].id) }}&amp;detailsTab=call-process-definitions-table">\n              {{ calledProcessDefinition.calledFromActivities[0].name }}\n            </a>\n          </span>\n\n          <ul ng-show="calledProcessDefinition.calledFromActivities.length > 1">\n            <li ng-repeat="activity in calledProcessDefinition.calledFromActivities"\n                cam-widget-clipboard="activity.id">\n              <a ng-href="#/process-definition/{{ processDefinition.id }}/runtime?{{ getSearchQueryForSearchType(activity.id) }}&amp;detailsTab=call-process-definitions-table">\n                {{ activity.name }}\n              </a>\n            </li>\n          <ul>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/called-process-definition-table.html -->\n';
b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.processDefinition.runtime.tab",{id:"call-process-definitions-table",label:"PLUGIN_CALLED_PROCESS_DEFINITIONS_LABEL",template:f,controller:["$scope","$location","$q","PluginProcessDefinitionResource","$translate","localConf",function(a,b,c,f,g,h){function i(a){h.set("sortCalledProcessDefTab",a)}function j(a){return h.get("sortCalledProcessDefTab",a)}function k(a,b){var c=[];return d.forEach(a,function(a){var e=a.calledFromActivityIds,f=[];d.forEach(e,function(a){var c=b[a],d={id:a,name:c&&c.name||a};f.push(d)}),c.push(d.extend({},a,{calledFromActivities:f}))}),c}var l,m=a.processData.newChild(a);a.headColumns=[{"class":"process-definition",request:"label",sortable:!0,content:g.instant("PLUGIN_CALLED_PROCESS")},{"class":"activity",request:"name",sortable:!0,content:g.instant("PLUGIN_ACTIVITY")}],a.sortObj=j({sortBy:"key",sortOrder:"asc",sortReverse:!1}),a.onSortChange=function(b){b=b||a.sortObj,b.sortReverse="asc"!==b.sortOrder,i(b),a.sortObj=b},a.getSearchQueryForSearchType=e.getSearchQueryForSearchType.bind(null,"activityIdIn"),m.provide("calledProcessDefinitions",["processDefinition","filter",function(b,c){return l=d.copy(c),delete l.page,delete l.scrollToBpmnElement,l.superProcessDefinitionId=l.parentProcessDefinitionId,l.parentProcessDefinitionId=a.processDefinition.id,l.activityIdIn=l.activityIds,delete l.activityIds,a.loadingState="LOADING",f.getCalledProcessDefinitions({id:b.id},l).$promise}]),m.observe(["calledProcessDefinitions","bpmnElements"],function(b,c){a.calledProcessDefinitions=k(b,c).map(function(a){return d.extend({},a,{label:a.name||a.key})}),a.loadingState=a.calledProcessDefinitions.length?"LOADED":"EMPTY"})}],priority:5})}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../../../../../../common/scripts/util/search-widget-utils":86}],25:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e="undefined"!=typeof window?window["cam-common"]:"undefined"!=typeof c?c["cam-common"]:null,f=a("./instanceCount"),g=d.module("cockpit.plugin.base.views.definition.diagram-plugins",[e.name]);g.config(f),b.exports=g}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./instanceCount":26}],26:[function(a,b,c){"use strict";var d=a("../../common/diagramPlugins/instanceCount"),e='<a\n  class="overlay-link"\n  ng-click="toggleOverlay()"\n  ng-disabled="isLoading"\n  tooltip="Toggle Activity Instance Statistics"\n  tooltip-placement="bottom">\n  Activity Instance Statistics:\n  <span ng-if="toggle && !isLoading">on <input type="radio" checked="" class="toggle" ></span>\n  <span ng-if="!toggle && !isLoading">off <input type="radio" class="toggle"> </span>\n  <span ng-if="isLoading">loading...</span>\n</a>\n';b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.processDefinition.diagram.action",{id:"activity-instance-statistics-overlay",template:e,controller:["$scope","Loaders","get","$filter","$rootScope","$translate","configuration",function(a,b,c,e,f,g,h){function i(){a.isLoading=!a.isLoading}function j(){a.isLoading=!0;var c={observe:l,getData:n,updateOverlayNodes:p,isActive:m,toggleIsLoading:i};d(a,a.viewer,a.processData,a.processDiagram,b,f,c)}function k(){Array.from(document.getElementsByClassName("djs-overlay")).forEach(function(a){a.remove()})}function l(b){a.processData.observe(["activityInstanceStatistics"],function(a){b([a])})}function m(a){return a.instances||a.incidents}function n(a,b){var d=o(b,a.id),e=o(b,a.id+"#multiInstanceBody"),f=c(d,["incidents"],[]),g=c(e,["incidents"],[]),h=f.concat(g),i=q(h);return{instances:c(d,["instances"],0)+c(e,["instances"],0),incidents:i}}function o(a,b){return a.filter(function(a){return a.id===b})[0]}function p(a,b){a.instancesNode.text(e("abbreviateNumber")(b.instances)),a.incidentsNode.text(e("abbreviateNumber")(b.incidents)),b.instances<=0?a.instancesNode.hide():(a.instancesNode.show(),a.instancesNode.tooltip({container:"body",title:g.instant("PLUGIN_ACTIVITY_INSTANCE_RUNNING_ACTIVITY_INSTANCES"),placement:"top",animation:!1})),b.incidents?(a.incidentsNode.show(),a.incidentsNode.tooltip({container:"body",title:g.instant("PLUGIN_ACTIVITY_INSTANCE_OPEN_INCIDENTS"),placement:"top",animation:!1})):a.incidentsNode.hide()}a.toggle=h.getRuntimeActivityInstanceMetrics(),a.isLoading=!1,a.toggleOverlay=function(){a.toggle=!a.toggle,a.toggle?j():k()},a.processData.observe("processDiagram",function(b){a.processDiagram=b,j()});var q=function(a){return a?a.reduce(function(a,b){return a+b.incidentCount},0):0}}]})}]},{"../../common/diagramPlugins/instanceCount":16}],27:[function(a,b,c){"use strict";var d='<incidents-tab\n  process-data="processData"\n  process-definition="processDefinition"/>\n',e=function(a){a.registerDefaultView("cockpit.processDefinition.runtime.tab",{id:"pd-incidents-tab",label:"PLUGIN_INCIDENTS_LABEL",template:d,priority:9,controller:function(){}})};e.$inject=["ViewsProvider"],b.exports=e},{}],28:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/process-instance-table.html -->\n<div cam-searchable-area\n     config="searchConfig"\n     array-types="[\'activityIdIn\']"\n     variable-types="[\'variables\']"\n     on-search-change="onSearchChange(query, pages)"\n     loading-state="loadingState"\n     text-empty="{{\'PLUGIN_PROCESS_INSTANCE_NO_PROCESS\' | translate}}"\n     storage-group="\'PDI\'">\n\n  <table class="process-instances cam-table">\n\n    <thead sortable-table-head\n           head-columns="headColumns"\n           on-sort-change="onSortChange(query, pages, sortObj)"\n           default-sort="sortObj">\n    </thead>\n\n    <tbody>\n      <tr ng-repeat="processInstance in processInstances">\n        <td class="state">\n          <a state-circle\n             incidents="processInstance.incidents"\n             ng-href="{{ getProcessInstanceUrl(processInstance, { tab: \'incidents-tab\' }) }}"></a>\n          <span class="badge badge-warning badge-suspended"\n                ng-show="processInstance.suspended"\n                tooltip="{{\'PLUGIN_PROCESS_INSTANCE_SUSPENDED\' | translate}}"\n                tooltip-placement="left">\n            <span class="glyphicon glyphicon-pause white"></span>\n          </span>\n        </td>\n\n        <td class="instance-id"\n            cam-widget-clipboard="processInstance.id">\n          <a ng-href="{{ getProcessInstanceUrl(processInstance) }}"\n             title="{{ processInstance.id }}">\n            {{ processInstance.id }}\n          </a>\n        </td>\n\n        <td class="start-time"\n            cam-widget-clipboard="processInstance.startTime">\n          {{ processInstance.startTime | camDate }}\n        </td>\n\n        <td class="business-key"\n            ng-if="processInstance.businessKey"\n            cam-widget-clipboard="processInstance.businessKey">\n          {{ processInstance.businessKey }}\n        </td>\n        <td class="business-key"\n            ng-if="!processInstance.businessKey"></td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/process-instance-table.html -->\n',e=JSON.parse('{\n  "types": [\n    {\n      "id": {\n        "key": "businessKey",\n        "value": "PROCESS_INSTANCE_ID_BUSINESS_KEY"\n      },\n      "default": true,\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "activityIdIn",\n        "value": "PROCESS_INSTANCE_ID_ACTIVITY_ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "startedDate",\n        "value": "PROCESS_INSTANCE_ID_START_DATE"\n      },\n      "operators": [\n        {\n          "key": "Before",\n          "value": "PROCESS_INSTANCE_OPERATOR_BEFORE"\n        },\n        {\n          "key": "After",\n          "value": "PROCESS_INSTANCE_OPERATOR_AFTER"\n        }\n      ],\n      "allowDates": true,\n      "enforceDates": true\n    },\n    {\n      "id": {\n        "key": "variables",\n        "value": "PROCESS_INSTANCE_ID_VARIABLE"\n      },\n      "extended": true,\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        },\n        {\n          "key": "neq",\n          "value": "!="\n        },\n        {\n          "key": "gt",\n          "value": ">"\n        },\n        {\n          "key": "gteq",\n          "value": ">="\n        },\n        {\n          "key": "lt",\n          "value": "<"\n        },\n        {\n          "key": "lteq",\n          "value": "<="\n        },\n        {\n          "key": "like",\n          "value": "PROCESS_INSTANCE_OPERATOR_LIKE"\n        }\n      ]\n    }\n  ],\n  "operators": {\n    "undefined":  [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      },\n      {\n        "key": "gt",\n        "value": ">"\n      },\n      {\n        "key": "gteq",\n        "value": ">="\n      },\n      {\n        "key": "lt",\n        "value": "<"\n      },\n      {\n        "key": "lteq",\n        "value": "<="\n      },\n      {\n        "key": "like",\n        "value": "PROCESS_INSTANCE_OPERATOR_LIKE"\n      }\n    ],\n    "string":     [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      },\n      {\n        "key": "gt",\n        "value": ">"\n      },\n      {\n        "key": "gteq",\n        "value": ">="\n      },\n      {\n        "key": "lt",\n        "value": "<"\n      },\n      {\n        "key": "lteq",\n        "value": "<="\n      },\n      {\n        "key": "like",\n        "value": "PROCESS_INSTANCE_OPERATOR_LIKE"\n      }\n    ],\n    "number":     [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      },\n      {\n        "key": "gt",\n        "value": ">"\n      },\n      {\n        "key": "gteq",\n        "value": ">="\n      },\n      {\n        "key": "lt",\n        "value": "<"\n      },\n      {\n        "key": "lteq",\n        "value": "<="\n      }\n    ],\n    "boolean":    [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      }\n    ],\n    "object":     [{\n      "key": "eq",\n      "value": "="\n    },\n      {\n        "key": "neq",\n        "value": "!="\n      }],\n    "date":     [{\n      "key": "lteq",\n      "value": "PROCESS_INSTANCE_OPERATOR_BEFORE"\n    },\n      {\n        "key": "gteq",\n        "value": "PROCESS_INSTANCE_OPERATOR_AFTER"\n      }]\n  },\n  "tooltips": {\n    "inputPlaceholder": "PROCESS_INSTANCE_ADD_CRITERIA",\n    "invalid": "PROCESS_INSTANCE_INVALID",\n    "deleteSearch": "PROCESS_INSTANCE_DELETE_SEARCH",\n    "type": "PROCESS_INSTANCE_TYPE",\n    "name": "PROCESS_INSTANCE_NAME",\n    "operator": "PROCESS_INSTANCE_OPERATOR",\n    "value": "PROCESS_INSTANCE_VALUE"\n  }\n}\n');b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.processDefinition.runtime.tab",{id:"process-instances-table",label:"PLUGIN_PROCESS_INSTANCES_LABEL",template:d,controller:["$scope","$location","search","routeUtil","PluginProcessInstanceResource","$translate","localConf",function(a,b,d,f,g,h,i){function j(b,d,e){a.pagesObj=d||a.pagesObj,a.queryObj=b||a.queryObj,e=e||a.sortObj,k(e);var f=a.pagesObj.current,h=a.queryObj,i=a.pagesObj.size,j=(f-1)*i,l={processDefinitionId:m.id},n={firstResult:j,maxResults:i,sortBy:e.sortBy,sortOrder:e.sortOrder},o=c.extend({},h,l),p=c.extend({},h,n,l);return a.processInstances=null,a.loadingState="LOADING",g.count(o).$promise.then(function(b){var c=b.count;return g.query(n,p).$promise.then(function(b){return a.processInstances=b,a.loadingState=b.length?"LOADED":"EMPTY",c})})}function k(a){i.set("sortProcInst",a)}function l(a){return i.get("sortProcInst",a)}var m=a.processDefinition;a.onSearchChange=j,a.onSortChange=j,a.headColumns=[{"class":"state",request:"state",sortable:!1,content:h.instant("PLUGIN_PROCESS_INSTANCE_STATE")},{"class":"instance-id",request:"instanceId",sortable:!1,content:h.instant("PLUGIN_PROCESS_INSTANCE_ID")},{"class":"start-time",request:"startTime",sortable:!0,content:h.instant("PLUGIN_PROCESS_INSTANCE_START_TIME")},{"class":"business-key",request:"businessKey",sortable:!1,content:h.instant("PLUGIN_PROCESS_INSTANCE_BUSINESS_KEY")}];var n={sortBy:"startTime",sortOrder:"desc"};a.sortObj=l(n),a.searchConfig=c.copy(e),c.forEach(e.tooltips,function(b,c){a.searchConfig.tooltips[c]=h.instant(b)}),a.searchConfig.types.map(function(a){return a.id.value=h.instant(a.id.value),a.operators&&(a.operators=a.operators.map(function(a){return a.value=h.instant(a.value),a})),a}),a.getProcessInstanceUrl=function(a,d){var e="#/process-instance/"+a.id,g=c.extend({},b.search()||{},d||{}),h=["viewbox"];for(var i in d)h.push(i);return f.redirectTo(e,g,h)}}],priority:10})}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],29:[function(a,b,c){(function(a){"use strict";var c='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/update-suspension-state-action.html -->\n<a class="btn btn-default btn-toolbar btn-suspend-action"\n   href\n   ng-click="openDialog()"\n   tooltip="{{\'PLUGIN_SUSPENSION_SUSPEND_PROCESS\' | translate}}"\n   tooltip-placement="left"\n   ng-show="!processDefinition.suspended">\n  <span class="glyphicon glyphicon-pause"></span>\n</a>\n\n<a class="btn btn-default btn-toolbar"\n   href\n   ng-click="openDialog()"\n   tooltip="{{\'PLUGIN_SUSPENSION_ACTIVATE_PROCESS\' | translate}}"\n   tooltip-placement="left"\n   ng-hide="!processDefinition.suspended">\n  <span class="glyphicon glyphicon-play"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/update-suspension-state-action.html -->\n',d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/update-suspension-state-dialog.html -->\n<div class="modal-header">\n  <h3>{{ processDefinition.suspended ? \'PLUGIN_SUSPENSION_ACTIVATE_PROCESS\' : \'PLUGIN_SUSPENSION_SUSPEND_PROCESS\' | translate }}</h3>\n</div>\n\n<div class="process-definition update-suspension-state modal-body">\n  <div notifications-panel></div>\n\n  <div ng-hide="status === \'SUCCESS\' || status === \'FAIL\'">\n\n    <p ng-show="processDefinition.suspended">\n      <!-- activation -->\n      {{\'PLUGIN_SUSPENSION_MESSAGE_1\' | translate}}\n    </p>\n\n    <p ng-hide="processDefinition.suspended">\n      <!-- suspension -->\n      {{\'PLUGIN_SUSPENSION_MESSAGE_2\' | translate}}\n    </p>\n\n    <form class="form-horizontal"\n          name="updateSuspensionStateForm"\n          novalidate\n          request-aware\n          ng-submit="updateSuspensionState()">\n      <fieldset>\n        <div class="form-group">\n          <label class="control-label col-xs-4"\n                 for="includeInstancesValue">{{\'PLUGIN_SUSPENSION_INCLUDE_INSTANCES\' | translate}}\n            <!-- activation -->\n            <span tooltip="{{\'PLUGIN_SUSPENSION_INCLUDING_MESSAGE_1\' | translate}}"\n                  tooltip-placement="right"\n                  ng-show="processDefinition.suspended">\n              <span class="glyphicon glyphicon-question-sign"></span>\n            </span>\n\n            <!-- suspension -->\n            <span tooltip="{{\'PLUGIN_SUSPENSION_INCLUDING_MESSAGE_2\' | translate}}"\n                  tooltip-placement="right"\n                  ng-hide="processDefinition.suspended">\n              <span class="glyphicon glyphicon-question-sign"></span>\n            </span>\n          </label>\n\n          <div class="col-xs-8">\n            <label class="checkbox">\n              <input id="includeInstancesValueId"\n                     name="includeInstancesValue"\n                     type="checkbox"\n                     ng-model="data.includeInstances">\n            </label>\n          </div>\n        </div>\n\n        <div class="form-group">\n          <label class="control-label col-xs-4" for="executeImmediately">{{\'PLUGIN_SUSPENSION_EXECUTE\' | translate}}\n            <span tooltip="{{\'PLUGIN_SUSPENSION_DECIDE_ACTIVATION\' | translate}}"\n                  tooltip-placement="right"\n                  ng-show="processDefinition.suspended">\n              <span class="glyphicon glyphicon-question-sign"></span>\n            </span>\n            <span tooltip="{{\'PLUGIN_SUSPENSION_DECIDE_SUSPENSION\' | translate}}"\n                  tooltip-placement="right"\n                  ng-hide="processDefinition.suspended">\n              <span class="glyphicon glyphicon-question-sign"></span>\n            </span>\n          </label>\n\n          <div class="col-xs-8">\n            <label class="radio">\n              <input ng-model="data.executeImmediately"\n                     ng-value="true"\n                     type="radio"\n                     name="execute">\n              {{\'PLUGIN_SUSPENSION_IMMEDIATELY\' | translate}}\n            </label>\n\n            <label class="radio">\n              <input ng-model="data.executeImmediately"\n                     ng-value="false"\n                     type="radio"\n                     name="execute">\n              {{\'PLUGIN_SUSPENSION_DELAYED\' | translate}}\n            </label>\n          </div>\n        </div>\n        <div class="form-group"\n             ng-show="!data.executeImmediately">\n          <label class="control-label col-xs-4"\n                 for="executionDateValue">\n            {{\'PLUGIN_SUSPENSION_SCHEDULE_AT\' | translate}}\n          </label>\n\n          <div class="col-xs-8">\n            <input date\n                   name="executionDateValue"\n                   ng-model="data.executionDate"\n                   class="form-control"\n                   type="text"\n                   required />\n\n            <p class="invalid"\n               ng-show="this.updateSuspensionStateForm.executionDateValue.$error.datePattern">\n              {{\'PLUGIN_SUSPENSION_VALID_PATTERN\' | translate}}\n            </p>\n            <p class="invalid"\n               ng-show="this.updateSuspensionStateForm.executionDateValue.$error.dateValue">\n              Invalid Date Value.\n            </p>\n          </div>\n        </div><!-- /.form-group -->\n\n      </fieldset>\n    </form>\n\n    <p>\n      {{ processDefinition.suspended ? \'PLUGIN_SUSPENSION_WANT_TO_ACTIVATE\' : \'PLUGIN_SUSPENSION_WANT_TO_SUSPEND\' | translate }}\n    </p>\n\n  </div>\n\n  <div ng-show="status === \'SUCCESS\'">\n    <p ng-show="processDefinition.suspended && data.executeImmediately">\n      {{\'PLUGIN_SUSPENSION_STATE_ACTIVE\' | translate}}\n    </p>\n    <p ng-show="processDefinition.suspended && !data.executeImmediately">\n      {{\'PLUGIN_SUSPENSION_ACTIVATION_SCHEDULED_TO\' | translate:\'{date: (data.executionDate | camDate) }\'}}\n    </p>\n    <p ng-show="!processDefinition.suspended && data.executeImmediately">\n      {{\'PLUGIN_SUSPENSION_STATE_SUSPENDED\' | translate}}\n    </p>\n    <p ng-show="!processDefinition.suspended && !data.executeImmediately">\n      {{\'PLUGIN_SUSPENSION_SUSPENSION_SCHEDULED_TO\' | translate:\'{date: (data.executionDate | camDate) }\'}}\n    </p>\n  </div>\n\n  <div ng-show="status === \'FAIL\'">\n    <p ng-show="processDefinition.suspended && data.executeImmediately">\n      {{\'PLUGIN_SUSPENSION_STATE_NOT_ACTIVATED\' | translate}}.\n    </p>\n    <p ng-show="processDefinition.suspended && !data.executeImmediately">\n      {{\'PLUGIN_SUSPENSION_ACTIVATION_NOT_SCHEDULED_TO\' | translate:\'{date: (data.executionDate | camDate) }\'}}\n    </p>\n    <p ng-show="!processDefinition.suspended && data.executeImmediately">\n      {{\'PLUGIN_SUSPENSION_STATE_NOT_SUSPENDED\' | translate}}\n    </p>\n    <p ng-show="!processDefinition.suspended && !data.executeImmediately">\n      {{\'PLUGIN_SUSPENSION_SUSPENSION_NOT_SCHEDULED_TO\' | translate:\'{date: (data.executionDate | camDate) }\'}}\n    </p>\n  </div>\n\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-link"\n          ng-click="close(status)"\n          ng-disabled="status === \'PERFORM_UDPATE\'"\n          ng-hide="status === \'SUCCESS\' || status === \'FAIL\'">\n    {{\'PLUGIN_SUSPENSION_CLOSE\' | translate}}\n  </button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="updateSuspensionState()"\n          ng-hide="status === \'SUCCESS\' || status === \'FAIL\'"\n          ng-disabled="!isValid() || status === \'PERFORM_UDPATE\'">\n    {{ processDefinition.suspended ? \'PLUGIN_SUSPENSION_ACTIVATE\' : \'PLUGIN_SUSPENSION_SUSPEND\' | translate }}\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="close(status)"\n          ng-show="status === \'SUCCESS\' || status === \'FAIL\'">\n    {{\'PLUGIN_SUSPENSION_OK\' | translate}}\n  </button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/update-suspension-state-dialog.html -->\n',e="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null;b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.processDefinition.runtime.action",{id:"update-suspension-state-action",label:"PLUGIN_UPDATE_SUSPENSION_STATE",template:c,controller:["$scope","$rootScope","$modal",function(a,b,c){a.openDialog=function(){var f=c.open({resolve:{processData:function(){return a.processData},processDefinition:function(){return a.processDefinition}},controller:"UpdateProcessDefinitionSuspensionStateController",template:d});f.result.then(function(c){"SUCCESS"===c.status&&(c.executeImmediately&&(a.processDefinition.suspended=c.suspended,b.$broadcast("$processDefinition.suspensionState.changed",a.processDefinition)),a.processData.set("filter",e.extend({},a.filter)))})}}],priority:50})}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],30:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null;b.exports=["$scope","$http","$filter","Uri","Notifications","$modalInstance","processDefinition","fixDate","$translate",function(a,b,d,e,f,g,h,i,j){var k="BEFORE_UPDATE",l="PERFORM_UDPATE",m="SUCCESS",n="FAIL",o=d("date"),p="yyyy-MM-dd'T'HH:mm:ss";a.processDefinition=h,a.status=k,a.data={includeInstances:!0,executeImmediately:!0,executionDate:o(Date.now(),p)},a.$on("$routeChangeStart",function(){g.close(a.status)}),a.updateSuspensionState=function(){a.status=l;var c={};c.suspended=!h.suspended,c.includeProcessInstances=a.data.includeInstances,c.executionDate=a.data.executeImmediately?null:i(a.data.executionDate),b.put(e.appUri("engine://engine/:engine/process-definition/"+h.id+"/suspended/"),c).success(function(){a.status=m,a.data.executeImmediately?f.addMessage({status:j.instant("PLUGIN_UPDATE_SUSPENSION_STATE_STATUS_FINISHED"),message:j.instant("PLUGIN_UPDATE_SUSPENSION_STATE_MESSAGE_1"),exclusive:!0}):f.addMessage({status:j.instant("PLUGIN_UPDATE_SUSPENSION_STATE_STATUS_FINISHED"),message:j.instant("PLUGIN_UPDATE_SUSPENSION_STATE_MESSAGE_2"),exclusive:!0})}).error(function(b){a.status=n;var c;c=a.data.executeImmediately?j.instant("PLUGIN_UPDATE_SUSPENSION_STATE_MESSAGE_3",{message:b.message}):j.instant("PLUGIN_UPDATE_SUSPENSION_STATE_MESSAGE_4",{message:b.message}),f.addError({status:j.instant("PLUGIN_UPDATE_SUSPENSION_STATE_STATUS_FINISHED"),message:c,exclusive:!0})})},a.isValid=function(){var a=c.element('[name="updateSuspensionStateForm"]').scope();return!(!a||!a.updateSuspensionStateForm)&&a.updateSuspensionStateForm.$valid},a.close=function(b){var c={};c.status=b,c.suspended=!h.suspended,c.executeImmediately=a.data.executeImmediately,c.executionDate=a.data.executionDate,g.close(c)}}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],31:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/add-variable-action.html -->\n<a class="btn btn-default btn-toolbar"\n   href\n   ng-click="openDialog()"\n   tooltip="{{ \'PLUGIN_ADD_VARIABLE_NEW_VARIABLE\' | translate }}"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-plus"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/add-variable-action.html -->\n',f=a("../../../../../client/scripts/components/variables/variable-add-dialog"),g=function(a){a.registerDefaultView("cockpit.processInstance.runtime.action",{id:"add-variable-action",label:"Add Variable Action",template:e,controller:["$scope","$modal","$rootScope",function(a,b,c){a.openDialog=function(){var e=b.open({scope:a,resolve:{instance:function(){return a.processInstance},isProcessInstance:function(){return!0}},controller:f.controller,template:f.template});e.result.then(function(b){"SUCCESS"===b&&(a.processData.set("filter",d.extend({},a.filter)),c.$broadcast("cam-common:cam-searchable:query-force-change"))})}}],priority:10})};g.$inject=["ViewsProvider"],b.exports=g}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../../../../../client/scripts/components/variables/variable-add-dialog":6}],32:[function(a,b,c){(function(c){"use strict";var d=a("../../../../../../common/scripts/util/search-widget-utils"),e="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,f='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/called-process-instance-table.html -->\n<div cam-widget-loader\n     loading-state="{{ loadingState }}"\n     text-empty="{{ \'PLUGIN_CALLED_PROCESS_NO_PROCESS_INSTANCES\' | translate }}">\n  <table class="called-process-instance cam-table">\n\n    <thead sortable-table-head\n           head-columns="headColumns"\n           on-sort-change="onSortChange(sortObj)"\n           default-sort="sortObj">\n    </thead>\n\n    <tbody>\n      <tr ng-repeat="calledProcessInstance in calledProcessInstances | orderBy:sortObj.sortBy:sortObj.sortReverse">\n        <td class="state">\n          <div ng-if="calledProcessInstance.incidents.length > -1" state-circle incidents="calledProcessInstance.incidents"></div>\n          <div ng-if="calledProcessInstance.incidents == undefined">\n            <span class="glyphicon glyphicon-refresh animate-spin"></span>\n          </div>\n        </td>\n        <td class="called-process-instance"\n            cam-widget-clipboard="calledProcessInstance.id">\n          <a href="#/process-instance/{{ calledProcessInstance.id }}/runtime">\n            {{ calledProcessInstance.id }}\n          </a>\n        </td>\n\n        <td class="process-definition"\n            cam-widget-clipboard="calledProcessInstance.processDefinitionId">\n          <a href="#/process-definition/{{ calledProcessInstance.processDefinitionId }}/runtime?parentProcessDefinitionId={{ processInstance.definitionId }}">\n            {{ calledProcessInstance.processDefinitionLabel}}\n          </a>\n        </td>\n\n        <td class="activity">\n          <span ng-if="!!calledProcessInstance.instance"\n                cam-widget-clipboard="calledProcessInstance.instance.id">\n            <a ng-href="#/process-instance/{{ processInstance.id }}/runtime?tab=called-process-instances-tab&{{ getSearchQueryForSearchType(calledProcessInstance.instance.id) }}">\n              {{ calledProcessInstance.instance.name }}\n            </a>\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/called-process-instance-table.html -->\n';b.exports=function(a){a.controller("CalledProcessInstanceController",["$scope","PluginProcessInstanceResource","$translate","localConf",function(a,b,c,f){function g(a){f.set("sortCalledProcessInstTab",a)}function h(a){return f.get("sortCalledProcessInstTab",a)}function i(c,d){k=e.copy(c),delete k.page,delete k.activityIds,delete k.scrollToBpmnElement,k.activityInstanceIdIn=k.activityInstanceIds,delete k.activityInstanceIds,a.calledProcessInstances=null,a.loadingState="LOADING",b.processInstances({id:a.processInstance.id},k).$promise.then(function(b){e.forEach(b,function(a){var b=d[a.callActivityInstanceId];a.instance=b,a.processDefinitionLabel=a.processDefinitionName||a.processDefinitionKey}),a.loadingState=b.length?"LOADED":"EMPTY",a.calledProcessInstances=b})}var j=a.processData.newChild(a);a.headColumns=[{"class":"state",request:"incidents",sortable:!0,content:"State"},{"class":"called-process-instance",request:"id",sortable:!0,content:c.instant("PLUGIN_CALLED_PROCESS_PROCESS_INSTANCE")},{"class":"process-definition",request:"processDefinitionLabel",sortable:!0,content:c.instant("PLUGIN_CALLED_PROCESS_PROCESS_DEFINITION")},{"class":"activity",request:"instance.name",sortable:!0,content:c.instant("PLUGIN_CALLED_PROCESS_ACTIVITY")}],a.sortObj=h({sortBy:"processDefinitionLabel",sortOrder:"asc",sortReverse:!1}),a.onSortChange=function(b){b=b||a.sortObj,b.sortReverse="asc"!==b.sortOrder,g(b),a.sortObj=b};var k=null;a.getSearchQueryForSearchType=d.getSearchQueryForSearchType.bind(null,"activityInstanceIdIn"),j.observe(["filter","instanceIdToInstanceMap"],function(a,b){i(a,b)})}]);var b=function(a){a.registerDefaultView("cockpit.processInstance.runtime.tab",{id:"called-process-instances-tab",label:"PLUGIN_CALLED_PROCESS_INSTANCE_LABEL",template:f,controller:"CalledProcessInstanceController",priority:10})};b.$inject=["ViewsProvider"],a.config(b)}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../../../../../../common/scripts/util/search-widget-utils":86}],33:[function(a,b,c){"use strict";var d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/cancel-process-instance-dialog.html -->\n<div class="modal-header">\n  <h3>{{ \'PLUGIN_CANCEL_PROCESS_DELETE_PROCESS_INSTANCE\' | translate }}</h3>\n</div>\n\n<div class="cancel-process-instance modal-body">\n  <div notifications-panel></div>\n\n  <div ng-hide="status === \'cancellationSuccess\' || status === \'cancellationFailed\' || status === \'beforeCancellation\' || status === \'loadingFailed\'">\n    <span class="glyphicon glyphicon-loading"></span>\n    {{ \'PLUGIN_CANCEL_PROCESS_LOADING_INFORMATION\' | translate }}\n  </div>\n\n  <p ng-show="status === \'loadingFailed\'">\n    {{ \'PLUGIN_CANCEL_PROCESS_LOADING_FAILED\' | translate }}\n  </p>\n\n  <div ng-show="status === \'beforeCancellation\'">\n    <div ng-show="subProcessInstances.length > 0">\n      <p>\n        {{ \'PLUGIN_CANCEL_PROCESS_BEFORE_DELETION\' | translate }}\n      </p>\n\n      <table class="table cam-table">\n        <thead>\n          <tr>\n            <th class="instance-id uuid">{{ \'PLUGIN_CANCEL_PROCESS_ID\' | translate }}</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr ng-repeat="subProcessInstance in subProcessInstances">\n            <td class="instance-id uuid">\n              <a target="_blank"\n                 ng-href="#/process-instance/{{ subProcessInstance.id }}">\n                {{ subProcessInstance.id }}\n              </a>\n            </td>\n          </tr>\n\n          <tr>\n            <td ng-hide="subProcessInstances.length === subProcessInstancesCount">\n              {{ \'PLUGIN_CANCEL_PROCESS_OTHER_PROCESS_INSTANCES\' | translate:\'{count: subProcessInstancesCount - subProcessInstances.length}\' }}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <form class="form-horizontal"\n          name="cancelProcessInstanceForm"\n          novalidate\n          request-aware>\n      <div  ng-hide="hideSkipCustomListeners"\n            class="form-group skip-custom-listener">\n\n        <label class="control-label col-xs-5"\n               for="skipCustomListeners">\n          {{ \'PLUGIN_CANCEL_PROCESS_SKIP_CUSTOM_LISTENERS\' | translate }}\n          <span class="glyphicon glyphicon-question-sign"\n                tooltip="{{ \'PLUGIN_CANCEL_PROCESS_TOOLTIP_VALUE_ENABLED\' | translate }}"\n                tooltip-placement="right">\n          </span>\n        </label>\n\n        <div class="col-xs-7">\n          <label class="checkbox">\n            <input name="skipCustomListeners"\n                   type="checkbox"\n                   ng-model="options.skipCustomListeners">\n          </label>\n        </div>\n\n      </div>\n\n      <div class="form-group skip-custom-listener">\n\n        <label class="control-label col-xs-5"\n               for="skipIoMappings">\n          {{ \'PLUGIN_CANCEL_PROCESS_SKIP_IO_MAPPINGS\' | translate }}\n          <span class="glyphicon glyphicon-question-sign"\n                tooltip="{{ \'PLUGIN_CANCEL_PROCESS_TOOLTIP_VALUE_ENABLED_IO\' | translate }}"\n                tooltip-placement="right">\n          </span>\n        </label>\n\n        <div class="col-xs-7">\n          <label class="checkbox">\n            <input name="skipIoMappings"\n                   type="checkbox"\n                   ng-model="options.skipIoMappings">\n          </label>\n        </div>\n\n      </div>\n    </form>\n\n    <p>{{ \'PLUGIN_CANCEL_PROCESS_DELETE_CONFIRM\' | translate }}</p>\n  </div>\n\n  <div ng-show="status === \'cancellationSuccess\'">\n    <p>{{ \'PLUGIN_CANCEL_PROCESS_DELETE_SUCCESS_1\' | translate }}</p>\n    <p>{{ \'PLUGIN_CANCEL_PROCESS_DELETE_SUCCESS_2\' | translate }}</p>\n  </div>\n\n  <div ng-show="status === \'cancellationFailed\'">\n    <p>{{ \'PLUGIN_CANCEL_PROCESS_DELETE_FAILED_1\' | translate }}</p>\n    <p>{{ \'PLUGIN_CANCEL_PROCESS_DELETE_FAILED_2\' | translate }}</p>\n  </div>\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-default"\n          ng-click="close(status)"\n          ng-disabled="status === \'performCancellation\'"\n          ng-hide="status === \'cancellationSuccess\' || status === \'cancellationFailed\' || status === \'loadingFailed\'">\n    {{ \'PLUGIN_CANCEL_PROCESS_CLOSE\' | translate }}\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="close(status)"\n          ng-show="status === \'cancellationSuccess\' || status === \'cancellationFailed\' || status === \'loadingFailed\'">\n    {{ \'PLUGIN_CANCEL_PROCESS_OK\' | translate }}\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="cancelProcessInstance()"\n          ng-disabled="status !== \'beforeCancellation\'"\n          ng-hide="status === \'cancellationSuccess\' || status === \'cancellationFailed\' || status === \'loadingFailed\'">\n    {{ \'PLUGIN_CANCEL_PROCESS_DELETE_PROCESS_INSTANCE\' | translate }}\n  </button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/cancel-process-instance-dialog.html -->\n',e='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/cancel-process-instance-action.html -->\n<a class="btn btn-default btn-toolbar"\n   href\n   ng-click="openDialog()"\n   tooltip="{{ \'PLUGIN_CANCEL_PROCESS_RUNNING_PROCESS_INSTANCE\' | translate }}"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-remove"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/cancel-process-instance-action.html -->\n';
b.exports=function(a){a.controller("CancelProcessInstanceActionController",["$scope","$http","search","Uri","$modal",function(a,b,c,e,f){a.openDialog=function(){f.open({resolve:{processData:function(){return a.processData},processInstance:function(){return a.processInstance}},controller:"CancelProcessInstanceController",template:d})}}]);var b=function(a){a.registerDefaultView("cockpit.processInstance.runtime.action",{id:"cancel-process-instance-action",label:"PLUGIN_CANCEL_PROCESS_DELETE_ACTION",template:e,controller:"CancelProcessInstanceActionController",priority:20})};b.$inject=["ViewsProvider"],a.config(b)}},{}],34:[function(a,b,c){"use strict";b.exports=["$scope","$location","Notifications","ProcessInstanceResource","$modalInstance","processInstance","processData","Views","$translate","configuration",function(a,b,c,d,e,f,g,h,i,j){var k="beforeCancellation",l="performCancellation",m="cancellationSuccess",n="cancellationFailed",o=j.getSkipCustomListeners();a.processInstance=f;var p=g.newChild(a);a.options={skipCustomListeners:o["default"],skipIoMappings:!0},a.hideSkipCustomListeners=o.hidden,a.$on("$routeChangeStart",function(){e.close(a.status)}),p.provide("subProcessInstances",function(){return d.query({firstResult:0,maxResults:5},{superProcessInstance:f.id}).$promise}),p.provide("subProcessInstancesCount",function(){return d.count({superProcessInstance:f.id}).$promise}),p.observe(["subProcessInstancesCount","subProcessInstances"],function(b,c){a.subProcessInstancesCount=b.count,a.subProcessInstances=c,a.status=k}),a.cancelProcessInstance=function(){a.status=l,a.processInstance.$delete(a.options,function(){a.status=m,c.addMessage({status:i.instant("PLUGIN_CANCEL_PROCESS_STATUS_DELETED"),message:i.instant("PLUGIN_CANCEL_PROCESS_MESSAGE_1")})},function(b){a.status=n,c.addError({status:i.instant("PLUGIN_CANCEL_PROCESS_STATUS_FAILED"),message:i.instant("PLUGIN_CANCEL_PROCESS_MESSAGE_2",{message:b.data.message}),exclusive:["type"]})})},a.close=function(a){if(e.close(a),a===m){var c,d,g=h.getProvider({id:"history",component:"cockpit.processInstance.view"});g?(d=b.search(),c="/process-instance/"+f.id+"/history"):c="/process-definition/"+f.definitionId,b.path(c),b.search(d||{}),b.replace()}}}]},{}],35:[function(a,b,c){"use strict";var d=a("../../../../../../client/scripts/components/callActivityOverlay")("runtime");b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.processInstance.diagram.plugin",{id:"activity-instance-call-activity-overlay",overlay:d})}]},{"../../../../../../client/scripts/components/callActivityOverlay":5}],36:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e="undefined"!=typeof window?window["cam-common"]:"undefined"!=typeof c?c["cam-common"]:null,f=a("./instanceCount"),g=a("./callActivity"),h=d.module("cockpit.plugin.base.views.instance.diagram-plugins",[e.name]);h.config(f),h.config(g),b.exports=h}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./callActivity":35,"./instanceCount":37}],37:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("../../common/diagramPlugins/instanceCount");b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.processInstance.diagram.plugin",{id:"activity-instance-statistics-overlay",overlay:["$scope","control","processData","processDiagram","Loaders","$filter","$rootScope","$translate",function(a,b,c,f,g,h,i,j){function k(a){return a.instanceCount>0||a.incidents}function l(a){c.observe(["activityIdToInstancesMap","activityIdToIncidentsMap"],function(b,c){a([b,c])})}function m(a,b,c){var e=a.id,f=d.copy(b[e]||[]),g=d.copy(c[e]||[]),h=b[e+"#multiInstanceBody"]||[],i=c[e+"#multiInstanceBody"]||[],j=b[e+"#multiInstanceBody"];return{instanceCount:n({instances:f,instancesMI:h}),incidents:g.length||i.length,multiInstance:j}}function n(a){var b=0;return a.instances&&(b+=a.instances.length||0),a.instancesMI&&(b+=a.instancesMI.filter(function(a){return a.isTransitionInstance}).length||0),b}function o(a,b){a.instancesNode.text(h("abbreviateNumber")(b.instanceCount)),a.incidentsNode.text(h("abbreviateNumber")(b.incidents)),b.instanceCount<=0?a.instancesNode.hide():(a.instancesNode.show(),a.instancesNode.tooltip({container:"body",title:j.instant("PLUGIN_ACTIVITY_INSTANCE_RUNNING_ACTIVITY_INSTANCES"),placement:"top",animation:!1})),b.incidents?(a.incidentsNode.show(),a.incidentsNode.tooltip({container:"body",title:j.instant("PLUGIN_ACTIVITY_INSTANCE_OPEN_INCIDENTS"),placement:"top",animation:!1})):a.incidentsNode.hide()}var p={observe:l,getData:m,updateOverlayNodes:o,isActive:k};e(a,b,c,f,g,i,p)}]})}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../../common/diagramPlugins/instanceCount":16}],38:[function(a,b,c){"use strict";b.exports=["$scope","$location","Notifications","camAPI","$modalInstance","incident","$translate",function(a,b,c,d,e,f,g){var h="finished",i="performing",j="failed",k=d.resource("external-task");a.$on("$routeChangeStart",function(){e.close(a.status)}),a.incrementRetry=function(){a.status=i,k.retries({id:f.configuration,retries:1},function(b){b?(a.status=j,c.addError({status:g.instant("PLUGIN_EXTERNAL_TASK_STATUS_FINISHED"),message:g.instant("PLUGIN_EXTERNAL_TASK_MESSAGE_2",{message:b.message}),exclusive:!0})):(a.status=h,c.addMessage({status:g.instant("PLUGIN_EXTERNAL_TASK_STATUS_FINISHED"),message:g.instant("PLUGIN_EXTERNAL_TASK_MESSAGE_1"),exclusive:!0}))})},a.close=function(a){e.close(a)}}]},{}],39:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/incident-external-task-retry-action.html -->\n<a class="btn btn-default action-button"\n   ng-click="openExternalTaskRetryDialog(incident)"\n   ng-show="incident.incidentType === \'failedExternalTask\' && incident.configuration"\n   tooltip="{{ \'PLUGIN_INC_EXTERNAL_TOOLTIP_RETRIES\' | translate }}"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-repeat"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/incident-external-task-retry-action.html -->',e="<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-dialog.html -->\n<div class=\"modal-header\">\n  <h3>{{ 'PLUGIN_JOB_RETRY_LEGEND_1' | translate }}</h3>\n</div>\n\n<div class=\"job-retry modal-body\">\n  <div notifications-panel></div>\n\n  <div ng-hide=\"status === 'finished' || status === 'failed'\">\n    <p>{{ 'PLUGIN_JOB_RETRY_LEGEND_2' | translate }}</p>\n    <p>{{ 'PLUGIN_JOB_RETRY_LEGEND_3' | translate }}</p>\n  </div>\n\n  <div ng-show=\"status === 'finished'\">\n    {{ 'PLUGIN_JOB_RETRY_LEGEND_4' | translate }}\n  </div>\n\n  <div ng-show=\"status === 'failed'\">\n    {{ 'PLUGIN_JOB_RETRY_LEGEND_5' | translate }}\n  </div>\n\n</div>\n\n<div class=\"modal-footer\">\n  <button class=\"btn btn-default\"\n          ng-click=\"close(status)\"\n          ng-disabled=\"status === 'performing'\"\n          ng-hide=\"status === 'finished' || status === 'failed'\">\n    {{ 'PLUGIN_JOB_RETRY_BTN_CLOSE' | translate }}\n  </button>\n\n  <button type=\"submit\"\n          class=\"btn btn-primary\"\n          ng-click=\"incrementRetry()\"\n          ng-hide=\"status === 'finished' || status === 'failed'\"\n          ng-disabled=\"status === 'performing'\">\n    {{ 'PLUGIN_JOB_RETRY_BTN_RETRY' | translate }}\n  </button>\n\n  <button class=\"btn btn-primary\"\n          ng-click=\"close(status)\"\n          ng-show=\"status === 'finished' || status === 'failed'\">\n    {{ 'PLUGIN_JOB_RETRY_BTN_OK' | translate }}\n  </button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-dialog.html -->\n",f=function(a){a.registerDefaultView("cockpit.incident.action",{id:"increase-incident-external-task-retry",template:d,controller:["$scope","$rootScope","search","$modal",function(a,b,d,f){a.openExternalTaskRetryDialog=function(b){var d=f.open({resolve:{incident:function(){return b}},controller:"ExternalTaskRetryController",template:e});d.result.then(function(b){"finished"===b&&a.processData.set("filter",c.extend({},a.filter))})}}],priority:50})};f.$inject=["ViewsProvider"],b.exports=f}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],40:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/incident-job-retry-action.html -->\n<a class="btn btn-default action-button"\n   ng-click="openJobRetryDialog(incident)"\n   ng-show="incident.incidentType === \'failedJob\' && incident.configuration"\n   tooltip="{{ \'PLUGIN_INC_JOB_RETRY_TOOLTIP_RETRIES\' | translate }}"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-repeat"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/incident-job-retry-action.html -->',e="<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-dialog.html -->\n<div class=\"modal-header\">\n  <h3>{{ 'PLUGIN_JOB_RETRY_LEGEND_1' | translate }}</h3>\n</div>\n\n<div class=\"job-retry modal-body\">\n  <div notifications-panel></div>\n\n  <div ng-hide=\"status === 'finished' || status === 'failed'\">\n    <p>{{ 'PLUGIN_JOB_RETRY_LEGEND_2' | translate }}</p>\n    <p>{{ 'PLUGIN_JOB_RETRY_LEGEND_3' | translate }}</p>\n  </div>\n\n  <div ng-show=\"status === 'finished'\">\n    {{ 'PLUGIN_JOB_RETRY_LEGEND_4' | translate }}\n  </div>\n\n  <div ng-show=\"status === 'failed'\">\n    {{ 'PLUGIN_JOB_RETRY_LEGEND_5' | translate }}\n  </div>\n\n</div>\n\n<div class=\"modal-footer\">\n  <button class=\"btn btn-default\"\n          ng-click=\"close(status)\"\n          ng-disabled=\"status === 'performing'\"\n          ng-hide=\"status === 'finished' || status === 'failed'\">\n    {{ 'PLUGIN_JOB_RETRY_BTN_CLOSE' | translate }}\n  </button>\n\n  <button type=\"submit\"\n          class=\"btn btn-primary\"\n          ng-click=\"incrementRetry()\"\n          ng-hide=\"status === 'finished' || status === 'failed'\"\n          ng-disabled=\"status === 'performing'\">\n    {{ 'PLUGIN_JOB_RETRY_BTN_RETRY' | translate }}\n  </button>\n\n  <button class=\"btn btn-primary\"\n          ng-click=\"close(status)\"\n          ng-show=\"status === 'finished' || status === 'failed'\">\n    {{ 'PLUGIN_JOB_RETRY_BTN_OK' | translate }}\n  </button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-dialog.html -->\n",f=function(a){a.registerDefaultView("cockpit.incident.action",{id:"increase-incident-job-retry",template:d,controller:["$scope","$rootScope","search","$modal",function(a,b,d,f){a.openJobRetryDialog=function(b){var d=f.open({resolve:{incident:function(){return b}},controller:"JobRetryController",template:e});d.result.then(function(b){"finished"===b&&a.processData.set("filter",c.extend({},a.filter))})}}],priority:50})};f.$inject=["ViewsProvider"],b.exports=f}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],41:[function(a,b,c){"use strict";var d='<incidents-tab\n  process-data="processData"\n  process-instance="processInstance" />\n',e=function(a){a.registerDefaultView("cockpit.processInstance.runtime.tab",{id:"incidents-tab",label:"PLUGIN_INCIDENTS_LABEL",template:d,priority:15})};e.$inject=["ViewsProvider"],b.exports=e},{}],42:[function(a,b,c){"use strict";var d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-bulk-dialog.html -->\n<div class="modal-header">\n  <h3>{{ \'PLUGIN_JOB_RETRY_BULK_INCREMENT_RETRIES\' | translate }}</h3>\n</div>\n\n<div class="job-retry-bulk modal-body">\n  <div notifications-panel></div>\n\n  <form name="selectFailedJobsForm"\n        ng-hide="status === \'finished\' || status === \'performing\'">\n    <fieldset>\n      <p>{{ \'PLUGIN_JOB_RETRY_BULK_SELECT_FAILED_JOB\' | translate }}</p>\n      <div cam-widget-loader\n           loading-state="{{ loadingState }}"\n           text-empty="{{ \'PLUGIN_JOB_RETRY_BULK_THERE_ARE_NO_FAILED_JOBS\' | translate }}">\n        <table class="cam-table">\n          <thead>\n            <tr>\n              <th class="row-select">\n                <input type="checkbox"\n                       title="Select all"\n                       ng-model="allJobsSelected"\n                       ng-change="selectAllJobs(allJobsSelected)">\n              </th>\n              <th class="job-id uuid">{{ \'PLUGIN_JOB_RETRY_BULK_ID\' | translate }}</th>\n              <th class="scope">{{ \'PLUGIN_JOB_RETRY_BULK_SCOPE\' | translate }}</th>\n              <th class="exception">{{ \'PLUGIN_JOB_RETRY_BULK_EXCEPTION\' | translate }}</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr ng-repeat="job in failedJobs">\n              <td class="row-select">\n                <input type="checkbox"\n                       ng-model="job.selected"\n                       ng-change="selectFailedJob(job)">\n              </td>\n\n              <td class="job-id uuid">{{ job.id }}</td>\n\n              <td class="scope">{{ job.instance.name }}</td>\n\n              <td class="exception">{{ job.exceptionMessage }}</td>\n            </tr>\n          </tbody>\n        </table>\n\n\n        <pagination ng-if="jobPages.total > jobPages.size"\n                    class="pagination-sm"\n\n                    page="jobPages.current"\n                    ng-model="jobPages.current"\n\n                    total-items="jobPages.total"\n                    items-per-page="jobPages.size"\n\n                    max-size="7"\n                    boundary-links="true"></pagination>\n      </div>\n    </fieldset>\n  </form>\n\n  <div ng-show="status === \'finished\' || status === \'performing\'">\n\n    <table class="cam-table">\n      <thead>\n        <tr>\n          <th class="job-id uuid">{{ \'PLUGIN_JOB_RETRY_BULK_ID\' | translate }}</th>\n          <th class="scope">{{ \'PLUGIN_JOB_RETRY_BULK_SCOPE\' | translate }}</th>\n          <th class="status">{{ \'PLUGIN_JOB_RETRY_BULK_STATUS\' | translate }}</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr ng-repeat="job in showJobsRetried">\n          <td class="job-id uuid">{{ job.id }}</td>\n\n          <td class="scope">{{ job.instance.name }}</td>\n\n          <td class="status">\n            <span ng-show="job.status && job.status === \'performing\'">\n              <span class="glyphicon glyphicon-loading"></span>\n            </span>\n            <span ng-show="job.status && job.status === \'successful\'">\n              <span class="glyphicon glyphicon-ok"></span>&nbsp;{{ \'PLUGIN_JOB_RETRY_BULK_SUCCESSFUL\' | translate }}\n            </span>\n            <span ng-show="job.status && job.status === \'failed\'">\n              <span class="glyphicon glyphicon-remove"></span>&nbsp;{{ \'PLUGIN_JOB_RETRY_BULK_FAILED\' | translate }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n\n    <pagination ng-if="summarizePages.total > summarizePages.size"\n                class="pagination-sm"\n\n                page="summarizePages.current"\n                ng-model="summarizePages.current"\n\n                total-items="summarizePages.total"\n                items-per-page="summarizePages.size"\n\n                max-size="7"\n                boundary-links="true"></pagination>\n  </div>\n\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-default"\n          ng-click="close()"\n          ng-hide="status === \'finished\' || status === \'performing\'">\n    {{ \'PLUGIN_JOB_RETRY_BULK_CLOSE\' | translate }}\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="retryFailedJobs(selectedFailedJobIds)"\n          ng-disabled="!failedJobs || !failedJobs.length || !selectedFailedJobIds.length"\n          ng-hide="status === \'finished\' || status === \'performing\'">\n    {{ \'PLUGIN_JOB_RETRY_BULK_RETRY\' | translate }} <span ng-if="selectedFailedJobIds.length > 1">{{ \'PLUGIN_JOB_RETRY_BULK_JOBS\' | translate:\'{count: selectedFailedJobIds.length}\' }}</span>\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="close()"\n          ng-disabled="status === \'performing\'"\n          ng-show="status === \'performing\' || status === \'finished\'">\n    {{ \'PLUGIN_JOB_RETRY_BULK_OK\' | translate }}\n  </button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-bulk-dialog.html -->\n',e='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-bulk-action.html -->\n<a class="btn btn-default btn-toolbar"\n   href\n   ng-click="openDialog()"\n   tooltip="{{ \'PLUGIN_JOB_RETRY_BULK_RETRIES_FAILED_JOB\' | translate }}"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-repeat"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-bulk-action.html -->\n';b.exports=function(a){a.controller("JobRetryActionController",["$scope","$modal",function(a,b){a.openDialog=function(){b.open({resolve:{processData:function(){return a.processData},processInstance:function(){return a.processInstance}},size:"lg",controller:"JobRetriesController",template:d})}}]);var b=function(a){a.registerDefaultView("cockpit.processInstance.runtime.action",{id:"job-retry-action",label:"Job Retry Action",template:e,controller:"JobRetryActionController",priority:15})};b.$inject=["ViewsProvider"],a.config(b)}},{}],43:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null;b.exports=["$scope","$q","Notifications","JobResource","$modalInstance","processData","processInstance","$translate",function(a,b,d,e,f,g,h,i){function j(b){a.failedJobs=null,a.allJobsSelected=!1,a.loadingState="LOADING";var c=n.size,d=(b-1)*c;e.count({processInstanceId:h.id,withException:!0,noRetriesLeft:!0}).$promise.then(function(b){return n.total=b.count,n.total?void e.query({firstResult:d,maxResults:c},{processInstanceId:h.id,withException:!0,noRetriesLeft:!0}).$promise.then(function(b){for(var d,e=0;d=b[e];e++){p[d.id]=d;var f=w[d.executionId];d.instance=f,d.selected=q.indexOf(d.id)>-1}a.failedJobs=b,a.loadingState="LOADED",n.total<=c&&(a.allJobsSelected=!0,a.selectAllJobs(!0))}):void(a.loadingState="EMPTY")})}function k(b){for(var c=o.size,d=(b-1)*c,e=a.showJobsRetried=[],f=0;f<c;f++){var g=q[f+d],h=p[g];h&&e.push(h)}}function l(a){function c(a){a.status=t,e.setRetries({id:a.id},{retries:1},function(){a.status=u,g-=1,0===g&&f.resolve()},function(b){r=!0,a.status=v,a.retryError=b,g-=1,0===g&&f.resolve()})}for(var d,f=b.defer(),g=a.length,h=0;d=a[h];h++){var i=p[d];c(i)}return f.promise}var m=g.newChild(a),n=a.jobPages={size:5,total:0},o=a.summarizePages={size:5,total:0},p={},q=a.selectedFailedJobIds=[],r=!1;a.allJobsSelected=!1;var s="finished",t="performing",u="successful",v="failed",w=m.observe("executionIdToInstanceMap",function(a){w=a});a.$on("$routeChangeStart",function(){f.close(a.status)}),a.$watch("jobPages.current",function(a,b){return a?void(a!==b&&(n.current=a,j(a))):void(n.current=1)}),a.$watch("summarizePages.current",function(a){a&&k(a)}),a.selectAllJobs=function(b){c.forEach(a.failedJobs,function(a){a.selected=b,x(a)})};var x=a.selectFailedJob=function(b){var c=q.indexOf(b.id);return b.selected===!0?void(c===-1&&q.push(b.id)):b.selected===!1?(q.splice(c,1),void(a.allJobsSelected===!0&&(a.allJobsSelected=!1))):void 0};a.retryFailedJobs=function(b){a.status=t,o.total=b.length,o.current=1,l(b).then(function(){r?d.addError({status:i.instant("PLUGIN_JOB_RETRY_STATUS_FINISHED"),message:i.instant("PLUGIN_JOB_RETRY_ERROR_2"),exclusive:!0}):d.addMessage({status:i.instant("PLUGIN_JOB_RETRY_STATUS_FINISHED"),message:i.instant("PLUGIN_JOB_RETRY_MESSAGE_2"),exclusive:!0}),a.status=s})},a.close=function(a){f.close(a)}}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],44:[function(a,b,c){"use strict";b.exports=["$scope","$location","Notifications","JobResource","$modalInstance","incident","$translate",function(a,b,c,d,e,f,g){var h="finished",i="performing",j="failed";a.$on("$routeChangeStart",function(){e.close(a.status)}),a.incrementRetry=function(){a.status=i,d.setRetries({id:f.configuration},{retries:1},function(){a.status=h,c.addMessage({status:g.instant("PLUGIN_JOB_RETRY_STATUS_FINISHED"),message:g.instant("PLUGIN_JOB_RETRY_MESSAGE_1"),exclusive:!0})},function(b){a.status=j,c.addError({status:g.instant("PLUGIN_JOB_RETRY_STATUS_FINISHED"),message:g.instant("PLUGIN_JOB_RETRY_ERROR_1",{message:b.data.message}),exclusive:!0})})},a.close=function(a){e.close(a)}}]},{}],45:[function(a,b,c){(function(a){"use strict";var c='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/update-suspension-state-action.html -->\n<a class="btn btn-default btn-toolbar btn-suspend-action"\n   href\n   ng-click="openDialog()"\n   tooltip="{{ \'PLUGIN_UPDATE_ACTION_TOOLTIP_1\' | translate }}"\n   tooltip-placement="left"\n   ng-show="!processInstance.suspended">\n  <span class="glyphicon glyphicon-pause"></span>\n</a>\n<a class="btn btn-default btn-toolbar"\n   href\n   ng-click="openDialog()"\n   tooltip="{{ \'PLUGIN_UPDATE_ACTION_TOOLTIP_2\' | translate }}"\n   tooltip-placement="left"\n   ng-hide="!processInstance.suspended">\n  <span class="glyphicon glyphicon-play"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/update-suspension-state-action.html -->\n',d="<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/update-suspension-state-dialog.html -->\n<div class=\"modal-header\">\n  <h3>{{ (processInstance.suspended ? 'PLUGIN_UPDATE_DIALOG_ACTIVATE' : 'PLUGIN_UPDATE_DIALOG_SUSPEND' | translate) }}</h3>\n</div>\n\n<div class=\"process-instance update-suspension-state modal-body\">\n  <div notifications-panel></div>\n\n  <div ng-hide=\"status === 'SUCCESS' || status === 'FAIL'\">\n\n    <div ng-show=\"processInstance.suspended\">\n      <!-- activation -->\n      <p>\n        {{ 'PLUGIN_UPDATE_DIALOG_LEGEND_1' | translate}} <i>{{ 'PLUGIN_UPDATE_DIALOG_LEGEND_2' | translate }}</i> {{ 'PLUGIN_UPDATE_DIALOG_LEGEND_3' | translate }}\n      </p>\n\n      <p>\n        {{ 'PLUGIN_UPDATE_DIALOG_LEGEND_4' | translate}}\n      </p>\n\n      <p>\n        {{ 'PLUGIN_UPDATE_DIALOG_LEGEND_5' | translate}}\n      </p>\n\n      <p>\n        {{ 'PLUGIN_UPDATE_DIALOG_LEGEND_6' | translate}}\n      </p>\n\n      <p>{{ 'PLUGIN_UPDATE_DIALOG_LEGEND_7' | translate}}</p>\n    </div>\n\n    <div ng-hide=\"processInstance.suspended\">\n      <!-- suspension -->\n      <p>\n        {{ 'PLUGIN_UPDATE_DIALOG_LEGEND_8' | translate }} <i>{{ 'PLUGIN_UPDATE_DIALOG_LEGEND_9' | translate }}</i> {{ 'PLUGIN_UPDATE_DIALOG_LEGEND_10' | translate }}\n      </p>\n\n      <p>\n        {{ 'PLUGIN_UPDATE_DIALOG_LEGEND_11' | translate }}\n        <ul>\n          <li>{{ 'PLUGIN_UPDATE_DIALOG_CLAIMING' | translate }}</li>\n          <li>{{ 'PLUGIN_UPDATE_DIALOG_COMPLETING' | translate }}</li>\n          <li>{{ 'PLUGIN_UPDATE_DIALOG_DELEGATION' | translate }}</li>\n          <li>{{ 'PLUGIN_UPDATE_DIALOG_CHANGES_IN' | translate }}</li>\n        </ul>\n        {{ 'PLUGIN_UPDATE_DIALOG_LEGEND_12' | translate }}\n      </p>\n\n      <p>\n        {{ 'PLUGIN_UPDATE_DIALOG_LEGEND_13' | translate }}\n      </p>\n\n      <p>\n        {{ 'PLUGIN_UPDATE_DIALOG_LEGEND_14' | translate }}\n      </p>\n\n      <p>{{ 'PLUGIN_UPDATE_DIALOG_LEGEND_15' | translate }}</p>\n    </div>\n\n  </div>\n\n  <div ng-show=\"status === 'SUCCESS'\">\n    <p ng-show=\"processInstance.suspended\">\n      {{ 'PLUGIN_UPDATE_DIALOG_LEGEND_16' | translate }}\n    </p>\n    <p ng-hide=\"processInstance.suspended\">\n      {{ 'PLUGIN_UPDATE_DIALOG_LEGEND_17' | translate }}\n    </p>\n  </div>\n\n  <div ng-show=\"status === 'FAIL'\">\n    <p ng-show=\"processInstance.suspended\">\n      {{ 'PLUGIN_UPDATE_DIALOG_LEGEND_18' | translate }}\n    </p>\n    <p ng-hide=\"processInstance.suspended\">\n      {{ 'PLUGIN_UPDATE_DIALOG_LEGEND_19' | translate }}\n    </p>\n  </div>\n\n</div>\n<div class=\"modal-footer\">\n  <button class=\"btn btn-default\"\n          ng-click=\"close(status)\"\n          ng-disabled=\"status === 'PERFORM_UDPATE'\"\n          ng-hide=\"status === 'SUCCESS' || status === 'FAIL'\">{{ 'PLUGIN_UPDATE_DIALOG_BTN_CLOSE' | translate }}</button>\n\n  <button type=\"submit\"\n          class=\"btn btn-primary\"\n          ng-click=\"updateSuspensionState()\"\n          ng-hide=\"status === 'SUCCESS' || status === 'FAIL'\"\n          ng-disabled=\"status === 'PERFORM_UDPATE'\">\n    {{ (processInstance.suspended ? 'PLUGIN_UPDATE_DIALOG_BTN_ACTIVATE' : 'PLUGIN_UPDATE_DIALOG_BTN_SUSPEND' | translate) }}\n  </button>\n\n  <button class=\"btn btn-primary\"\n          ng-click=\"close(status)\"\n          ng-show=\"status === 'SUCCESS' || status === 'FAIL'\">{{ 'PLUGIN_UPDATE_DIALOG_BTN_OK' | translate }}</button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/update-suspension-state-dialog.html -->\n",e="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,f=function(a){a.registerDefaultView("cockpit.processInstance.runtime.action",{id:"update-suspension-state-action",label:"PLUGIN_UPDATE_SUSPENSION_STATE",template:c,controller:["$scope","$rootScope","$modal",function(a,b,c){a.openDialog=function(){var f=c.open({resolve:{processData:function(){return a.processData},processInstance:function(){return a.processInstance}},controller:"UpdateProcessInstanceSuspensionStateController",template:d});f.result.then(function(c){"SUCCESS"===c.status&&(a.processInstance.suspended=c.suspended,b.$broadcast("$processInstance.suspensionState.changed",a.processInstance),a.processData.set("filter",e.extend({},a.filter)))})}}],priority:5})};f.$inject=["ViewsProvider"],b.exports=f}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],46:[function(a,b,c){"use strict";b.exports=["$scope","$http","$filter","Uri","Notifications","$modalInstance","processInstance","$translate",function(a,b,c,d,e,f,g,h){var i="BEFORE_UPDATE",j="PERFORM_UDPATE",k="SUCCESS",l="FAIL";a.processInstance=g,a.status=i,a.$on("$routeChangeStart",function(){f.close(a.status)}),a.updateSuspensionState=function(){a.status=j;var c={};c.suspended=!g.suspended,b.put(d.appUri("engine://engine/:engine/process-instance/"+g.id+"/suspended/"),c).success(function(){a.status=k,e.addMessage({status:h.instant("PLUGIN_UPDATE_DIALOG_STATUS_FINISHED"),message:h.instant("PLUGIN_UPDATE_DIALOG_MESSAGES_1"),exclusive:!0})}).error(function(b){a.status=l,e.addError({status:h.instant("PLUGIN_UPDATE_DIALOG_STATUS_FINISHED"),message:h.instant("PLUGIN_UPDATE_DIALOG_ERROR_1",{message:b.message}),exclusive:!0})})},a.close=function(a){var b={};b.status=a,b.suspended=!g.suspended,f.close(b)}}]},{}],47:[function(a,b,c){(function(c){"use strict";var d=a("../../../../../../common/scripts/util/search-widget-utils"),e="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,f='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/identity-links-modal.html -->\n<div class="modal-header">\n  <h3 class="modal-title">{{ title | translate }}</h3>\n</div>\n\n<div class="identity-links modal-body">\n  <div notifications-panel></div>\n\n  <form name="editForm"\n        ng-submit="!invalid() && addItem()">\n    <fieldset ng-show="identityLinks.length">\n      <legend>{{ decorator.table.label }}</legend>\n\n      <table class="table cam-table">\n        <thead>\n          <tr>\n            <th class="id">{{ decorator.table.id }}</th>\n            <th class="action text-right">{{ \'PLUGIN_IDENTITY_LINKS_ACTION\' | translate }}</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr ng-repeat="(delta, identityLink) in identityLinks">\n            <td class="id">{{ identityLink[key] }}</td>\n            <td class="action text-right">\n              <span class="btn btn-default action-button"\n                    ng-click="removeItem()">\n                <span class="glyphicon glyphicon-ban-circle"></span>\n              </span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </fieldset>\n\n    <fieldset>\n      <legend>{{ decorator.add.label }}</legend>\n\n      <div class="input-group">\n        <input class="form-control"\n               type="text"\n               ng-model="newItem"\n               name="newItem"\n               required />\n        <span class="btn btn-primary input-group-addon"\n              ng-click="addItem()"\n              ng-disabled="invalid()">\n          <span class="glyphicon glyphicon-plus"></span>\n        </span>\n      </div>\n    </fieldset>\n  </form>\n</div>\n\n<div class="modal-footer">\n  <button ng-click="$dismiss()"\n          class="btn btn-default">\n    {{ \'PLUGIN_IDENTITY_LINKS_CLOSE\' | translate }}\n  </button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/identity-links-modal.html -->\n',g='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/user-tasks-table.html -->\n<div cam-widget-loader\n     loading-state="{{ loadingState }}"\n     text-empty="{{ \'PLUGIN_USER_TASKS_NO_USER_TASKS\' | translate }}">\n  <table class="process-instance user-tasks cam-table">\n    <thead sortable-table-head\n           head-columns="headColumns"\n           on-sort-change="onSortChange(sortObj)"\n           default-sort="sorting">\n    </thead>\n\n    <tbody>\n      <tr ng-repeat="userTask in userTasks">\n        <td class="activity">\n          <a ng-href="{{ getHref(userTask) }}">{{ userTask.instance.name || userTask.instance.id }}</a>\n        </td>\n\n        <td class="assignee">\n          <cam-in-place-text-field\n            submit="submitAssigneeChange"\n            context="userTask"\n            property="assignee" />\n        </td>\n\n        <td class="owner">\n          {{ userTask.owner }}\n        </td>\n\n        <td class="created">\n          {{ userTask.created | camDate }}\n        </td>\n        <td class="due">\n          {{ userTask.due | camDate }}\n        </td>\n        <td class="follow-up">\n          {{ userTask.followUp | camDate }}\n        </td>\n        <td class="priority">\n          {{ userTask.priority }}\n        </td>\n        <td class="delegation-state">\n          {{ userTask.delegationState }}\n        </td>\n        <td class="task-id uuid"\n            cam-widget-clipboard="userTask.id">\n          <a ng-href="{{ getTasklistHref(userTask) }}"\n             tooltip="{{ \'PLUGIN_USER_TASKS_LINK_TO_TASKLIST\' | translate }}">{{ userTask.id }}</a>\n        </td>\n\n        <td class="action">\n          <a ng-click="changeGroupIdentityLinks()"\n             ng-model="userTask"\n             class="btn btn-default action-button change-group-identity-links"\n             tooltip-placement="left"\n             tooltip="{{ \'PLUGIN_USER_TASKS_MANAGE_GROUP_TOOLTIP\' | translate:\'{ value: userTask.name || userTask.id }\' }}">\n            <span class="glyphicon glyphicon-th"></span>\n          </a>\n          <a ng-click="changeUserIdentityLinks()"\n             ng-model="userTask"\n             class="btn btn-default action-button change-user-identity-links"\n             tooltip-placement="left"\n             tooltip="{{ \'PLUGIN_USER_TASKS_MANAGE_USER_TOOLTIP\' | translate:\'{ value: userTask.name || userTask.id }\' }}">\n            <span class="glyphicon glyphicon-user"></span>\n          </a>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n\n\n  <pagination ng-if="pages.total > pages.size"\n              class="pagination-sm"\n\n              page="pages.current"\n              ng-model="pages.current"\n\n              total-items="pages.total"\n              items-per-page="pages.size"\n\n              max-size="7"\n              boundary-links="true"></pagination>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/user-tasks-table.html -->\n';
b.exports=function(a){function b(a,b){var c=[];return e.forEach(a,function(a,d){c[d]=b(a,d)}),c}function c(a){var b=[];return e.forEach(a,function(a){a&&b.push(a)}),b}function h(a){return e.isFunction(a)?a:e.noop}a.controller("UserTaskController",["$scope","search","camAPI","TaskResource","Notifications","$modal","$translate","localConf","Uri",function(a,g,i,j,k,l,m,n,o){function p(a){return n.get("sortPIUserTaskTab",a)}function q(a){n.set("sortPIUserTaskTab",a)}function r(b,c,d){y=e.copy(b),delete y.page,delete y.activityIds,delete y.scrollToBpmnElement;var f=x.current,g=x.size,h=(f-1)*g,i={processInstanceId:v.id,processDefinitionId:v.definitionId,sorting:[{sortBy:d.sortBy,sortOrder:d.sortOrder}]},k={firstResult:h,maxResults:g},l=e.extend({},y,i);l.activityInstanceIdIn=l.activityInstanceIds,delete l.activityInstanceIds,a.userTasks=null,a.loadingState="LOADING",s={},t={},j.count(l).$promise.then(function(a){x.total=a.count}),j.query(k,l).$promise.then(function(b){for(var d,f=0;d=b[f];f++)d.instance=c[d.executionId],t[d.id]=e.copy(d);a.userTasks=b,a.loadingState=b.length?"LOADED":"EMPTY"})}var s,t,u=a.processData.newChild(a),v=a.processInstance,w={size:50,total:0,current:1},x=a.pages=e.copy(w),y=null,z=null,A=i.resource("task"),B=a.sorting=p({sortBy:"created",sortOrder:"desc"});a.getSearchQueryForSearchType=d.getSearchQueryForSearchType.bind(null,"activityInstanceIdIn"),a.headColumns=[{"class":"activity uuid",request:"nameCaseInsensitive",sortable:!0,content:m.instant("PLUGIN_USER_TASKS_ACTIVITY")},{"class":"assignee",request:"assignee",sortable:!0,content:m.instant("PLUGIN_USER_TASKS_ASSIGNEE")},{"class":"owner",request:"",sortable:!1,content:m.instant("PLUGIN_USER_TASKS_OWNER")},{"class":"created",request:"created",sortable:!0,content:m.instant("PLUGIN_USER_TASKS_CREATED_DATE")},{"class":"due",request:"dueDate",sortable:!0,content:m.instant("PLUGIN_USER_TASKS_DUE_DATE")},{"class":"follow-up",request:"followUpDate",sortable:!0,content:m.instant("PLUGIN_USER_TASKS_FOLLOW_UP_DATE")},{"class":"priority",request:"priority",sortable:!0,content:m.instant("PLUGIN_USER_TASKS_PRIORITY")},{"class":"delegation-state",request:"",sortable:!1,content:m.instant("PLUGIN_USER_TASKS_DELEGATION_STATE")},{"class":"task-id uuid",request:"id",sortable:!0,content:m.instant("PLUGIN_USER_TASKS_TASK_ID")},{"class":"action",request:"",sortable:!1,content:m.instant("PLUGIN_USER_TASKS_ACTION")}],a.$watch("pages.current",function(a,b){a!=b&&g("page",a&&1!=a?a:null)}),u.observe(["filter","executionIdToInstanceMap"],function(a,b){x.current=a.page||1,z=b,r(a,b,B)}),a.onSortChange=function(a){B=a,q(B),r(y,z,B)},a.getHref=function(b){return b.instance?"#/process-instance/"+v.id+"/runtime?tab=user-tasks-tab&"+a.getSearchQueryForSearchType(b.instance.id):""},a.getTasklistHref=function(a){return o.appUri("tasklistbase://:engine/#/?task="+a.id)},a.submitAssigneeChange=function(a,b){b=h(b);var c=a.context,d=t[c.id],e={id:c.id},f={userId:a.value||null};j.setAssignee(e,f).$promise.then(function(a){var e,f=d.assignee=c.assignee=a.userId;e=f?m.instant("PLUGIN_USER_TASKS_MESSAGE_1",{name:c.instance.name,assignee:d.assignee}):m.instant("PLUGIN_USER_TASKS_MESSAGE_2",{name:c.instance.name}),k.addMessage({status:m.instant("PLUGIN_USER_TASKS_STATUS_ASSIGNEE"),message:e,duration:5e3}),b()},function(a){var e;e=c.assignee?m.instant("PLUGIN_USER_TASKS_MESSAGE_3",{name:c.instance.name,assignee:c.assignee,error:a.data.message}):m.instant("PLUGIN_USER_TASKS_MESSAGE_4",{name:c.instance.name,error:a.data.message});var f={status:m.instant("PLUGIN_USER_TASKS_STATUS_ASSIGNEE"),message:e,exclusive:!0};c.assignee=d.assignee,k.addError(f),s[c.id]=a.data,b(f)})},a.openDialog=function(a,d){A.identityLinks(a.id,function(e,g){var h=c(b(g,function(a){var b=a[d.key]&&"assignee"!==a.type&&"owner"!==a.type;return b?a:null}));l.open({resolve:{userTask:function(){return a},identityLinks:function(){return h},decorator:function(){return d}},controller:"IdentityLinksController",template:f,windowClass:"identity-link-modal"})})},a.changeGroupIdentityLinks=function(){var b=this.userTask;a.openDialog(b,{title:m.instant("PLUGIN_USER_TASKS_MANAGE_GROUPS"),table:{label:m.instant("PLUGIN_USER_TASKS_CURRENT_GROUPS"),id:m.instant("PLUGIN_USER_TASKS_GROUP_ID")},add:{label:m.instant("PLUGIN_USER_TASKS_ADD_GROUP")},notifications:{remove:m.instant("PLUGIN_USER_TASKS_NOTIFICATION_REMOVE_GROUP"),add:m.instant("PLUGIN_USER_TASKS_NOTIFICATION_ADD_GROUP")},key:"groupId"})},a.changeUserIdentityLinks=function(){var b=this.userTask;a.openDialog(b,{title:m.instant("PLUGIN_USER_TASKS_MANAGE_USERS"),table:{label:m.instant("PLUGIN_USER_TASKS_CURRENT_USERS"),id:m.instant("PLUGIN_USER_TASKS_USER_ID")},add:{label:m.instant("PLUGIN_USER_TASKS_ADD_USER")},notifications:{remove:m.instant("PLUGIN_USER_TASKS_NOTIFICATION_REMOVE_USER"),add:m.instant("PLUGIN_USER_TASKS_NOTIFICATION_ADD_USER")},key:"userId"})},a.getExceptionForUserTask=function(a){return s[a.id]}}]),a.controller("IdentityLinksController",["$modalInstance","camAPI","$scope","Notifications","userTask","identityLinks","decorator",function(a,d,f,g,h,i,j){var k=d.resource("task");f.identityLinks=i,f.decorator=j,f.title=j.title;var l=f.key=j.key;f.$on("$routeChangeStart",function(){a.close()}),f.removeItem=function(){var a=this.delta;k.identityLinksDelete(h.id,this.identityLink,function(d){return d?g.addError({status:j.notifications.remove,message:d.message,exclusive:!0}):void(i=f.identityLinks=c(b(i,function(b,c){return a!==c&&b})))})},f.invalid=function(){var a=this.editForm;if(a.$invalid)return!0;var b,c=a.newItem.$modelValue;return e.forEach(i,function(a){b=b||a[l]===c}),b},f.addItem=function(){var a=this,b={type:"candidate"};b[l]=a.newItem,k.identityLinksAdd(h.id,b,function(c){return c?g.addError({status:j.notifications.add,message:c.message,exclusive:!0}):(i.push(b),void(a.newItem=""))})}}]);var i=function(a){a.registerDefaultView("cockpit.processInstance.runtime.tab",{id:"user-tasks-tab",label:"PLUGIN_USER_TASKS_LABEL",template:g,controller:"UserTaskController",priority:5})};i.$inject=["ViewsProvider"],a.config(i)}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../../../../../../common/scripts/util/search-widget-utils":86}],48:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("../../../../../../common/scripts/util/search-widget-utils"),f=JSON.parse('{\n  "types": [\n    {\n      "id": {\n        "key": "variableName",\n        "value": "PLUGIN_VIEW_VARIABLE_TYPE_VARIABLE_NAME"\n      },\n      "default": true,\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        },\n        {\n          "key": "Like",\n          "value": "PLUGIN_VIEW_VARIABLE_OPERATOR_LIKE"\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "activityInstanceIdIn",\n        "value": "PLUGIN_VIEW_VARIABLE_ACTIVITY_INSTANCE_ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "variableValues",\n        "value": "PLUGIN_VIEW_VARIABLE_VARIABLE_VALUE"\n      },\n      "extended": true,\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        },\n        {\n          "key": "neq",\n          "value": "!="\n        },\n        {\n          "key": "gt",\n          "value": ">"\n        },\n        {\n          "key": "gteq",\n          "value": ">="\n        },\n        {\n          "key": "lt",\n          "value": "<"\n        },\n        {\n          "key": "lteq",\n          "value": "<="\n        },\n        {\n          "key": "like",\n          "value": "PLUGIN_VIEW_VARIABLE_OPERATOR_LIKE"\n        }\n      ]\n    }\n  ],\n  "operators": {\n    "undefined":  [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      },\n      {\n        "key": "gt",\n        "value": ">"\n      },\n      {\n        "key": "gteq",\n        "value": ">="\n      },\n      {\n        "key": "lt",\n        "value": "<"\n      },\n      {\n        "key": "lteq",\n        "value": "<="\n      },\n      {\n        "key": "like",\n        "value": "PLUGIN_VIEW_VARIABLE_OPERATOR_LIKE"\n      }\n    ],\n    "string":     [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      },\n      {\n        "key": "gt",\n        "value": ">"\n      },\n      {\n        "key": "gteq",\n        "value": ">="\n      },\n      {\n        "key": "lt",\n        "value": "<"\n      },\n      {\n        "key": "lteq",\n        "value": "<="\n      },\n      {\n        "key": "like",\n        "value": "PLUGIN_VIEW_VARIABLE_OPERATOR_LIKE"\n      }\n    ],\n    "number":     [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      },\n      {\n        "key": "gt",\n        "value": ">"\n      },\n      {\n        "key": "gteq",\n        "value": ">="\n      },\n      {\n        "key": "lt",\n        "value": "<"\n      },\n      {\n        "key": "lteq",\n        "value": "<="\n      }\n    ],\n    "boolean":    [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      }\n    ],\n    "object":     [{\n      "key": "eq",\n      "value": "="\n    },\n      {\n        "key": "neq",\n        "value": "!="\n      }],\n    "date":     [{\n      "key": "lteq",\n      "value": "PLUGIN_VIEW_VARIABLE_OPERATOR_BEFORE"\n    },\n      {\n        "key": "gteq",\n        "value": "PLUGIN_VIEW_VARIABLE_OPERATOR_AFTER"\n      }]\n  },\n  "tooltips": {\n    "inputPlaceholder": "PLUGIN_VIEW_VARIABLE_ADD_CRITERIA",\n    "invalid": "PLUGIN_VIEW_VARIABLE_INVALID",\n    "deleteSearch": "PLUGIN_VIEW_VARIABLE_DELETE_SEARCH",\n    "type": "PLUGIN_VIEW_VARIABLE_TYPE",\n    "name": "PLUGIN_VIEW_VARIABLE_NAME",\n    "operator": "PLUGIN_VIEW_VARIABLE_OPERATOR",\n    "value": "PLUGIN_VIEW_VARIABLE_VALUE"\n  }\n}\n'),g='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/variable-instances-tab.html -->\n<div cam-searchable-area\n     config="searchConfig"\n     array-types="[\'activityInstanceIdIn\']"\n     variable-types="[\'variableValues\']"\n     on-search-change="onSearchChange(query, pages,sortObj)"\n     loading-state="loadingState"\n     text-empty="{{ \'PLUGIN_VARIABLE_NO_PROCESS_VARIABLES\' | translate }}"\n     blocked="!instanceIdToInstanceMap"\n     storage-group="\'VI\'">\n\n      <div cam-widget-variables-table\n           on-save="saveVariable"\n           on-edit="editVariable"\n           on-upload="uploadVariable"\n           on-delete="deleteVariable"\n           on-download="downloadVariable"\n           on-sort-change="onSortChange(query, pages,sortObj)"\n           default-sort = "sortObj"\n           cam-variables="variables"\n           cam-editable="[\'type\', \'value\']"\n           cam-headers="headColumns">\n      </div>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/variable-instances-tab.html -->\n',h=a("../../../../../client/scripts/components/variables/variable-inspect-dialog"),i=a("../../../../../client/scripts/components/variables/variable-upload-dialog");b.exports=function(a){a.controller("VariableInstancesController",["$scope","$sce","$http","search","Uri","LocalExecutionVariableResource","Notifications","$modal","$q","camAPI","fixDate","unfixDate","$translate","localConf",function(a,b,c,g,j,k,l,m,n,o,p,q,r,s){function t(a){return"engine://engine/:engine/execution/"+a.executionId+"/localVariables/"+a.name}function u(b,c,e,f){a.pagesObj=e||a.pagesObj,f=f||a.sortObj;var g=a.pagesObj.current,h=a.pagesObj.size,i=(g-1)*h,j={processInstanceIdIn:[A.id]};f&&(j.sorting=[f],v(f));var k={firstResult:i,maxResults:h,deserializeValues:!1},l=d.extend({},j,c),m=d.extend({},k,j,c);return a.variables=null,a.loadingState="LOADING",x={},y={},m=d.extend({},m,k),D.count(l).then(function(c){return a.total=c.count,D.instances(m).then(function(c){var e=c;return a.variables=e.map(function(c){var e=b[c.activityInstanceId];c.instance=e,y[c.id]=d.copy(c),"Date"===c.type&&(c.value=q(c.value));var f="";return e&&(f='<a ng-href="#/process-instance/'+A.id+"/runtime?detailsTab=variables-tab&"+a.getSearchQueryForSearchType(e.id)+'" title="'+e.id+'">'+e.name+"</a>"),{variable:{id:c.id,name:c.name,type:c.type,value:c.value,valueInfo:c.valueInfo,executionId:c.executionId},original:c,additions:{scope:{html:f,scopeVariables:{processData:a.processData}}}}}),a.loadingState=e.length?"LOADED":"EMPTY",a.total})})}function v(a){s.set("sortHistVarInstTab",a)}function w(a){return s.get("sortHistVarInstTab",a)}var x,y,z=a.processData.newChild(a),A=a.processInstance,B=o.resource("execution"),C=o.resource("task"),D=o.resource("variable");a.headColumns=[{"class":"name",request:"variableName",sortable:!0,content:r.instant("PLUGIN_VARIABLE_NAME")},{"class":"type",request:"variableType",sortable:!0,content:r.instant("PLUGIN_VARIABLE_TYPE")},{"class":"value",request:"",sortable:!1,content:r.instant("PLUGIN_VARIABLE_VALUE")},{"class":"scope",request:"",sortable:!1,content:r.instant("PLUGIN_VARIABLE_SCOPE")}];var E={sortBy:"variableName",sortOrder:"asc"};a.sortObj=w(E),a.searchConfig=d.copy(f),d.forEach(f.tooltips,function(b,c){a.searchConfig.tooltips[c]=r.instant(b)}),a.searchConfig.types.map(function(a){return a.id.value=r.instant(a.id.value),a.operators&&(a.operators=a.operators.map(function(a){return a.value=r.instant(a.value),a})),a}),z.observe("instanceIdToInstanceMap",function(b){a.instanceIdToInstanceMap=b}),a.onSearchChange=function(b,c,d){return a.query=b||a.query,a.pages=c||a.pages,a.instanceIdToInstanceMap?u(a.instanceIdToInstanceMap,a.query,a.pages,d):n.when(a.total)},a.onSortChange=a.onSearchChange,a.getSearchQueryForSearchType=e.getSearchQueryForSearchType.bind(null,"activityInstanceIdIn"),a.uploadVariable=function(b){var c=n.defer();return m.open({resolve:{basePath:function(){return t(b.variable)},variable:function(){return b.variable}},controller:i.controller,template:i.template}).result.then(function(){c.reject(),z.set("filter",d.copy(a.filter))},function(){c.reject()}),c.promise},a.downloadVariable=function(a){return j.appUri("engine://engine/:engine/variable-instance/"+a.variable.id+"/data")},a.deleteVariable=function(a){var b=n.defer(),c=function(c){if(c){var d={text:"",payload:{}};c.response.body&&"AuthorizationException"===c.response.body.type?(d.text="PLUGIN_VARIABLE_INSTANCES_MESSAGES_ERROR_3",d.payload={message:c.message}):(d.text="PLUGIN_VARIABLE_INSTANCES_MESSAGES_ERROR_0",d.payload={name:a.variable.name}),l.addError({status:r.instant("PLUGIN_VARIABLE_INSTANCES_STATUS_VARIABLE"),message:r.instant(d.text,d.payload),exclusive:!0,duration:5e3}),b.reject()}else l.addMessage({status:r.instant("PLUGIN_VARIABLE_INSTANCES_STATUS_VARIABLE"),message:r.instant("PLUGIN_VARIABLE_INSTANCES_MESSAGES_ADD_0",{name:a.variable.name}),duration:5e3}),b.resolve(a.variable)};return a.original.taskId?C.deleteVariable({id:a.original.taskId,varId:a.variable.name},c):B.deleteVariable({id:a.variable.executionId,varId:a.variable.name},c),b.promise},a.editVariable=function(b){var c=n.defer();return m.open({template:h.template,controller:h.controller,windowClass:"cam-widget-variable-dialog",resolve:{basePath:function(){return t(b.variable)},history:function(){return!1},readonly:function(){return!1},variable:function(){return b.variable}}}).result.then(function(){c.reject(),z.set("filter",d.copy(a.filter))},function(){c.reject()}),c.promise},a.saveVariable=function(a){var b=n.defer(),c=a.variable,e={},f=c.value,g=c.type;"Date"===g&&(f=p(f));var h={value:f,type:g};e[c.name]=h;var i=function(e){if(e){var f={text:"",payload:{}};e.response.body&&"AuthorizationException"===e.response.body.type?(f.text="PLUGIN_VARIABLE_INSTANCES_MESSAGES_ERROR_2",f.payload={message:e.message}):(f.text="PLUGIN_VARIABLE_INSTANCES_MESSAGES_ERROR_1",f.payload={name:c.name}),l.addError({status:r.instant("PLUGIN_VARIABLE_INSTANCES_STATUS_VARIABLE"),message:r.instant(f.text,f.payload),exclusive:!0,duration:5e3}),x[c.id]=e.data,b.reject()}else l.addMessage({status:r.instant("PLUGIN_VARIABLE_INSTANCES_STATUS_VARIABLE"),message:r.instant("PLUGIN_VARIABLE_INSTANCES_MESSAGES_ADD_1",{name:c.name}),duration:5e3}),"Date"===h.type&&(h.value=q(h.value)),d.extend(c,h),b.resolve(a.variable)};return a.original.taskId?C.modifyVariables({id:a.original.taskId,modifications:e},i):B.modifyVariables({id:c.executionId,modifications:e},i),b.promise}}]);var b=function(a){a.registerDefaultView("cockpit.processInstance.runtime.tab",{id:"variables-tab",label:"PLUGIN_VARIABLE_INSTANCES_LABEL",template:g,controller:"VariableInstancesController",priority:20})};b.$inject=["ViewsProvider"],a.config(b)}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../../../../../../common/scripts/util/search-widget-utils":86,"../../../../../client/scripts/components/variables/variable-inspect-dialog":7,"../../../../../client/scripts/components/variables/variable-upload-dialog":8}],49:[function(a,b,c){"use strict";var d='<!-- # CE - ui/cockpit/plugins/base/app/views/processesDashboard/process-definitions.html -->\n<section  class="processes-dashboard"\n          ng-class="{\'section-collapsed\': !activeSection}">\n  <div class="inner">\n    <button tooltip="Toggle this section"\n            class="section-toggle btn btn-link btn-sm"\n            ng-click="toggleSection()">\n      <span class="glyphicon"\n            ng-class="{\'glyphicon-menu-down\': !activeSection, \'glyphicon-menu-up\': activeSection}"></span>\n    </button>\n    <header ng-if="processDefinitionsCount">\n      <div class="row">\n        <h1 class="col-xs-6 section-title">{{ processDefinitionsCount }} {{ (processDefinitionsCount > 1 ? \'PLUGIN_PROCESS_DEF_PROCESS_DEFINITIONS_DEPLOYED\' : \'PLUGIN_PROCESS_DEF_PROCESS_DEFINITION_DEPLOYED\' | translate) }}</h1>\n\n        <div class="col-xs-6 text-right" ng-if="activeSection">\n          <ul class="nav nav-tabs">\n            <li ng-class="{active: activeTab === \'list\'}">\n              <a ng-click="selectTab(\'list\')">{{\'PLUGIN_PROCESS_DEF_LIST\' | translate}}</a>\n            </li>\n            <li ng-class="{active: activeTab === \'previews\'}">\n              <a ng-click="selectTab(\'previews\')">{{\'PLUGIN_PROCESS_DEF_PREVIEWS\' | translate}}</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </header>\n\n    <header class="header-empty" ng-if="!processDefinitionsCount && loadingState !== \'LOADING\'">\n        <h1 class="section-title">{{\'PLUGIN_PROCESS_DEF_NO_PROCESS_DEF\' | translate}}</h1>\n    </header>\n\n\n\n    <div cam-widget-loader\n         loading-state="{{loadingState}}"\n         class="deployed-processes"\n         ng-if="activeSection">\n\n\n      <table ng-if="processDefinitionsCount && activeTab === \'list\'"\n             class="process-definitions-list cam-table">\n        <thead sortable-table-head\n               head-columns="headColumns"\n               on-sort-change="onSortChange(sortObj)"\n               default-sort="sortObj">\n        </thead>\n        <tbody>\n          <tr ng-repeat="pd in processDefinitionData | orderBy:sortObj.sortBy:sortObj.sortReverse">\n            <td class="state">\n              <div ng-if="!!pd.incidents" state-circle incidents="pd.incidents">\n                <a ng-if="pd.incidentCount && hasSearchPlugin"\n                   ng-href="{{ incidentsLink.replace(\'PD_KEY\', pd.key) }}"\n                   class="incidents-link"></a>\n              </div>\n              <div ng-if="!pd.incidents">\n                <span class="glyphicon glyphicon-refresh animate-spin"></span>\n              </div>\n            </td>\n\n            <td class="incidents">\n              <a ng-if="pd.incidentCount && hasSearchPlugin"\n                 ng-href="{{ incidentsLink.replace(\'PD_KEY\', pd.key) }}">\n                {{ pd.incidentCount }}\n              </a>\n              <span ng-if="!pd.incidentCount || !hasSearchPlugin">{{ pd.incidentCount }}</span>\n            </td>\n\n            <td ng-if="pd.instances >= 0" class="instances">\n              {{ pd.instances }}\n            </td>\n            <td ng-if="pd.instances == undefined">\n              <span class="glyphicon glyphicon-refresh animate-spin"></span>\n            </td>\n\n            <td class="name">\n              <a href="#/process-definition/{{ pd.id }}">\n                {{ pd.label }}\n              </a>\n            </td>\n\n            <td class="tenant-id">\n              {{ pd.tenantId }}\n            </td>\n\n            <td ng-if="hasHistoryPlugin"\n                class="history-link">\n              <a href="#/process-definition/{{ pd.id }}/history">\n                {{\'PLUGIN_PROCESS_DEF_HISTORY_VIEW\' | translate}}\n              </a>\n            </td>\n\n            <td ng-if="hasReportPlugin"\n                class="report-link">\n              <a href="#/reports/reporting-duration-report?processDefinitionKey={{ pd.key }}">\n                <span class="glyphicon glyphicon-signal"></span>\n              </a>\n            </td>\n\n            <td ng-if="hasActionPlugin">\n              <view ng-repeat="processesAction in processesActions"\n                    data-plugin-id="{{ processAction.id }}"\n                    vars="definitionVars"\n                    provider="processesAction"></view>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div ng-if="processDefinitionsCount && activeTab === \'previews\'"\n           class="tile-grid">\n        <div ng-repeat="pd in processDefinitionData | orderBy:orderByPredicate:orderByReverse"\n             class="tile col-xs-12 col-sm-6 col-md-4 col-lg-3">\n          <a href="#/process-definition/{{ pd.id }}">\n            <h4 class="tile-header">\n              {{ pd.name || pd.key }}\n            </h4>\n\n            <span class="tile-body">\n              <span ng-if="activeTab === \'previews\'"\n                    process-diagram-preview\n                    process-definition-id="pd.id"></span>\n            </span>\n\n            <span class="tile-footer">\n              <span ng-if="pd.instances >= 0" class="instances">\n                {{ pd.instances === 1 ? \'PLUGIN_PROCESS_DEF_PREV_RUNNING_INSTANCE\' : \'PLUGIN_PROCESS_DEF_PREV_RUNNING_INSTANCES\'\n                | translate:\'{ instances: (pd.instances === 0 ? "No" : pd.instances) }\' }}\n              </span>\n              <span ng-if="pd.instances == undefined" class="instances">\n                <span class="glyphicon glyphicon-refresh animate-spin"></span>\n              </span>\n\n              <span ng-if="pd.incidents.length > -1" state-circle\n                    incidents="pd.incidents"\n                    class="circle-tiles"></span>\n              <span ng-if="pd.incidents == undefined" class="circle-tiles"></span>\n            </span>\n          </a>\n        </div>\n      </div>\n\n\n    </div>\n\n\n  </div>\n</section>\n\n<!-- / CE - ui/cockpit/plugins/base/app/views/processesDashboard/process-definitions.html -->\n';b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.processes.dashboard",{id:"process-definition",label:"Deployed Process Definitions",template:d,controller:["$scope","Views","camAPI","localConf","$translate",function(a,b,c,d,e){function f(a){d.set("sortProcessDefTab",a)}function g(a){return d.get("sortProcessDefTab",a)}var h=c.resource("process-definition");a.processesActions=b.getProviders({component:"cockpit.processes.action"}),a.hasActionPlugin=a.processesActions.length>0;var i=b.getProviders({component:"cockpit.processInstance.view"});a.hasHistoryPlugin=i.filter(function(a){return"history"===a.id}).length>0,a.hasReportPlugin=b.getProviders({component:"cockpit.report"}).length>0,a.hasSearchPlugin=b.getProviders({component:"cockpit.processes.dashboard",id:"search-process-instances"}).length>0,a.headColumns=[{"class":"state",request:"",sortable:!1,content:e.instant("PLUGIN_PROCESS_DEF_STATE")},{"class":"incidents",request:"incidentCount",sortable:!0,content:e.instant("PLUGIN_PROCESS_DEF_INCIDENTS")},{"class":"instances",request:"instances",sortable:!0,content:e.instant("PLUGIN_PROCESS_DEF_RUNNING_INSTANCES")},{"class":"name",request:"label",sortable:!0,content:e.instant("PLUGIN_PROCESS_DEF_NAME")},{"class":"tenantID",request:"tenantId",sortable:!0,content:e.instant("PLUGIN_PROCESS_DEF_TENANT_ID")},{"class":"history",request:"",sortable:!1,content:e.instant("PLUGIN_PROCESS_DEF_HISTORY_VIEW"),condition:a.hasReportPlugin},{"class":"report",request:"",sortable:!1,content:e.instant("PLUGIN_PROCESS_DEF_REPORT"),condition:a.hasReportPlugin},{"class":"action",request:"",sortable:!1,content:e.instant("PLUGIN_PROCESS_DEF_ACTION"),condition:a.hasActionPlugin}];var j={sortBy:"label",sortOrder:"asc",sortReverse:!1};a.sortObj=g(j),a.onSortChange=function(b){b=b||a.sortObj,b.sortReverse="asc"!==b.sortOrder,f(b),a.sortObj=b};var k=a.processData.newChild(a),l=function(a){return a?a.reduce(function(a,b){return a+b.incidentCount},0):0};a.loadingState="LOADING";var m=function(){h.count({latest:!0},function(b,c){b&&(a.loadingState="ERROR"),a.processDefinitionsCount=c})},n=function(){h.list({latest:!0},function(b,c){c.items.forEach(function(a){a.label=a.name||a.key}),a.processDefinitionData=c.items,a.processDefinitionsCount=c.count,a.loadingState=b?"ERROR":"LOADED",k.observe("processDefinitionStatistics",function(b){a.statistics=b,a.statistics.forEach(function(b){var c=b.definition.id,d=a.processDefinitionData.filter(function(a){return a.id===c}),e=d[0];e&&(e.incidents=b.incidents,e.incidentCount=l(e.incidents),e.instances=b.instances)})})})};a.definitionVars={read:["pd"]};var o=a.$on("processes.action.delete",function(b,c){for(var d=a.processDefinitionData,e=0;e<d.length;e++)if(d[e].id===c){d.splice(e,1);break}a.processDefinitionsCount=d.length});a.$on("$destroy",function(){o()}),a.incidentsLink="#/processes?searchQuery=%5B%7B%22type%22:%22PIincidentStatus%22,%22operator%22:%22eq%22,%22value%22:%22open%22,%22name%22:%22%22%7D,%7B%22type%22:%22PIprocessDefinitionKey%22,%22operator%22:%22eq%22,%22value%22:%22PD_KEY%22,%22name%22:%22%22%7D%5D#search-section",a.activeTab="list",a.selectTab=function(b){a.activeTab=b},a.activeSection=d.get("processesDashboardActive",!0),a.activeSection?n():m(),a.toggleSection=function(){(a.activeSection=!a.activeSection)?n():m(),d.set("processesDashboardActive",a.activeSection)}}],priority:0})}]},{}],50:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./base/app/plugin"),f=a("./decisionList/app/plugin"),g=a("./jobDefinition/app/plugin"),h=a("./tasks/app/plugin"),i=a("./external-tasks-process-instance-runtime-tab");b.exports=d.module("cockpit.plugin.cockpitPlugins",[e.name,f.name,g.name,h.name,i.name])}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./base/app/plugin":12,"./decisionList/app/plugin":51,"./external-tasks-process-instance-runtime-tab":65,"./jobDefinition/app/plugin":75,"./tasks/app/plugin":82}],51:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./views/main");b.exports=d.module("cockpit.plugin.decisionList",[e.name])}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./views/main":63}],52:[function(a,b,c){"use strict";var d='<section>\n  <div class="inner">\n    <header ng-if="decisionCount">\n      <h1 class="section-title">{{ (decisionCount > 1 ? \'PLUGIN_DECISION_TABLE_TITLE_DEFINITIONS\' : \'PLUGIN_DECISION_TABLE_TITLE_DEFINITION\' | translate:\'{count: decisionCount}\') }}</h1>\n    </header>\n\n    <header class=\'header-empty\' ng-if="!decisionCount">\n      <h1 class="section-title">{{ \'PLUGIN_DECISION_TABLE_NO_DECISION_TABLES_DEPLOYED\' | translate }}</h1>\n    </header>\n\n    <table class="decision-definitions-list cam-table"\n           ng-if="decisionCount">\n\n      <thead sortable-table-head\n             head-columns="headColumns"\n             on-sort-change="onSortChange(sortObj)"\n             default-sort="sortObj">\n      </thead>\n\n      <tbody>\n      <tr ng-repeat="decision in decisions | orderBy:sortObj.sortBy:sortObj.sortReverse">\n        <td class="name">\n          <a href="#/decision-definition/{{ decision.id }}">\n            {{ decision.name || decision.key }}\n          </a>\n        </td>\n        <td class="tenant-id">\n          {{ decision.tenantId }}\n        </td>\n        <td class="drd" ng-if="isDrdAvailable">\n          <a href="#/decision-requirement/{{ decision.drd.id }}">\n            {{ decision.drd.name || decision.drd.key }}\n          </a>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n\n  </div>\n</section>\n';b.exports=function(){return{restrict:"A",template:d,scope:{decisionCount:"=",decisions:"=",isDrdAvailable:"="},controller:["$scope","localConf","$translate",function(a,b,c){function d(a){b.set("sortDecDefTab",a)}function e(a){return b.get("sortDecDefTab",a)}a.headColumns=[{"class":"name",request:"name",sortable:!0,content:c.instant("PLUGIN_DECISION_TABLE_NAME")},{"class":"tenant-id",request:"tenantId",sortable:!0,content:c.instant("PLUGIN_DECISION_TABLE_TENANT_ID")},{"class":"drd",request:"drd.name",sortable:!0,content:c.instant("PLUGIN_DECISION_TABLE_DECISION_REQUIREMENTS"),condition:a.isDrdAvailable}];var f={sortBy:"name",sortOrder:"asc",sortReverse:!1};a.sortObj=e(f),a.onSortChange=function(b){b=b||a.sortObj,b.sortReverse="asc"!==b.sortOrder,d(b),a.sortObj=b}}]}}},{}],53:[function(a,b,c){"use strict";b.exports=["$scope","decisionList","Views",function(a,b,c){a.loadingState="LOADING",a.drdDashboard=c.getProvider({component:"cockpit.plugin.drd.dashboard"}),a.isDrdDashboardAvailable=!!a.drdDashboard,b.getDecisionsLists().then(function(b){a.loadingState="LOADED",a.decisionCount=b.decisions.length,a.decisions=b.decisions,a.drdsCount=b.drds.length,a.drds=b.drds})["catch"](function(b){throw a.loadingError=b.message,a.loadingState="ERROR",b}),a.drdDashboardVars={read:["drdsCount","drds"]}}]},{}],54:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e="undefined"!=typeof window?window["cam-common"]:"undefined"!=typeof c?c["cam-common"]:null,f=a("./views/decision-list"),g=a("./controllers/decision-list"),h=a("./services/decision-list"),i=a("./components/decisions-table"),j=d.module("cockpit.plugin.decisionList.views.dashboard",[e.name]);j.config(f),j.factory("decisionList",h),j.controller("DecisionListController",g),j.directive("decisionsTable",i),b.exports=j}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./components/decisions-table":52,"./controllers/decision-list":53,"./services/decision-list":55,"./views/decision-list":56}],55:[function(a,b,c){"use strict";b.exports=["$q","camAPI",function(a,b){function c(){var b=f.list({latestVersion:!0,sortBy:"name",sortOrder:"asc"}),c=g.list({latestVersion:!0,sortBy:"name",sortOrder:"asc"});return a.all({decisions:b,drds:c}).then(function(a){return a.decisions=d(a.drds,a.decisions),a})}function d(a,b){return b.map(function(b){return b.decisionRequirementsDefinitionId&&(b.drd=e(a,b.decisionRequirementsDefinitionId)),b})}function e(a,b){return a.filter(function(a){return a.id===b})[0]}var f=b.resource("decision-definition"),g=b.resource("drd");return{getDecisionsLists:c}}]},{}],56:[function(a,b,c){"use strict";var d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/dashboard/decision-list.html -->\n<div class="deployed-decisions"\n     cam-widget-loader\n     loading-state="{{ loadingState }}"\n     text-error="{{ loadingError }}">\n\n  <div decisions-table\n       decisions="decisions"\n       decision-count="decisionCount"\n       is-drd-available="isDrdDashboardAvailable">\n  </div>\n\n  <view provider="drdDashboard"\n        vars="drdDashboardVars" />\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/dashboard/decision-list.html -->\n';
b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.decisions.dashboard",{id:"decision-list",label:"Deployed Decision Tables",template:d,controller:"DecisionListController",priority:-5})}]},{}],57:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/decisionDefinition/decision-instance-table.html -->\n<div cam-searchable-area\n     config="searchConfig"\n     array-types="[\'activityIdIn\', \'activityInstanceIdIn\']"\n     variable-types="[\'variableValues\']"\n     on-search-change="onSearchChange(query, pages)"\n     loading-state="loadingState"\n     text-empty="{{ \'PLUGIN_DECISION_TABLE_NOT_FOUND\' | translate }}"\n     storage-group="\'DI\'">\n\n  <table class="decision-instances cam-table cam-fixed-layout">\n\n    <thead sortable-table-head\n           head-columns="headColumns"\n           on-sort-change="onSortChange(searchQuery, pages, sortObj)"\n           default-sort="sortObj">\n    </thead>\n\n    <tbody>\n      <tr ng-repeat="decisionInstance in decisionInstances">\n        <td class="instance-id"\n            cam-widget-clipboard="decisionInstance.id">\n          <a ng-href="#/decision-instance/{{ decisionInstance.id }}" title="{{ decisionInstance.id }}">\n            {{ decisionInstance.id }}\n          </a>\n        </td>\n\n        <td class="start-time"\n            cam-widget-clipboard="decisionInstance.evaluationTime">\n          {{ decisionInstance.evaluationTime | camDate }}\n        </td>\n\n        <td class="definition-key"\n            ng-if="decisionInstance.processDefinitionKey"\n            cam-widget-clipboard="decisionInstance.processDefinitionKey">\n          <a ng-href="{{ getProcessDefinitionLink(decisionInstance) }}">\n            {{ decisionInstance.processDefinitionKey }}\n          </a>\n        </td>\n        <td class="definition-key"\n            ng-if="decisionInstance.caseDefinitionKey"\n            cam-widget-clipboard="decisionInstance.caseDefinitionKey">\n          <a ng-if="hasCasePlugin"\n             ng-href="#/case-definition/{{ decisionInstance.caseDefinitionId }}?searchQuery={{ getActivitySearch(decisionInstance) }}">\n            {{ decisionInstance.caseDefinitionKey }}\n          </a>\n          <span ng-if="!hasCasePlugin">\n            {{ decisionInstance.caseDefinitionKey }}\n          </span>\n        </td>\n        <td class="definition-key"\n            ng-if="!decisionInstance.processDefinitionKey && !decisionInstance.caseDefinitionKey">\n        </td>\n\n        <td class="instance-id"\n            ng-if="decisionInstance.processInstanceId"\n            cam-widget-clipboard="decisionInstance.processInstanceId">\n          <a ng-href="{{ getProcessInstanceLink(decisionInstance) }}">\n            {{ decisionInstance.processInstanceId }}\n          </a>\n        </td>\n        <td class="instance-id"\n            ng-if="decisionInstance.caseInstanceId"\n            cam-widget-clipboard="decisionInstance.caseInstanceId">\n          <a ng-if="hasCasePlugin"\n             ng-href="#/case-instance/{{ decisionInstance.caseInstanceId }}?searchQuery={{ getActivitySearch(decisionInstance) }}">\n            {{ decisionInstance.caseInstanceId }}\n          </a>\n          <span ng-if="!hasCasePlugin">\n            {{ decisionInstance.caseInstanceId }}\n          </span>\n        </td>\n        <td class="instance-id"\n            ng-if="!decisionInstance.processInstanceId && !decisionInstance.caseInstanceId">\n        </td>\n\n        <td class="activity-id"\n            ng-if="decisionInstance.activityId"\n            cam-widget-clipboard="decisionInstance.activityId">\n          {{ decisionInstance.activityId }}\n        </td>\n        <td class="activity-id"\n            ng-if="!decisionInstance.activityId">\n        </td>\n\n      </tr>\n    </tbody>\n  </table>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/decisionDefinition/decision-instance-table.html -->\n',e=JSON.parse('{\n  "types": [\n    {\n      "id": {\n        "key": "decisionInstanceId",\n        "value": "PLUGIN_DECISION_DEFINITION_VALUE_TYPE_ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ],\n      "default": true\n    },\n    {\n      "id": {\n        "key": "processDefinitionId",\n        "value": "PLUGIN_DECISION_DEFINITION_VALUE_PROCESS_DEFINITION_ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "processDefinitionKey",\n        "value": "PLUGIN_DECISION_DEFINITION_VALUE_PROCESS_DEFINITION_KEY"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "processInstanceId",\n        "value": "PLUGIN_DECISION_DEFINITION_VALUE_PROCESS_INSTANCE_ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "caseDefinitionId",\n        "value": "PLUGIN_DECISION_DEFINITION_VALUE_CASE_DEFINITION_ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "caseDefinitionKey",\n        "value": "PLUGIN_DECISION_DEFINITION_VALUE_CASE_DEFINITION_KEY"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "caseInstanceId",\n        "value": "PLUGIN_DECISION_DEFINITION_VALUE_CASE_INSTANCE_ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "activityIdIn",\n        "value": "PLUGIN_DECISION_DEFINITION_VALUE_ACTIVITY_ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "activityInstanceIdIn",\n        "value": "PLUGIN_DECISION_DEFINITION_VALUE_ACTIVITY_INSTANCE_ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "evaluatedDate",\n        "value": "PLUGIN_DECISION_DEFINITION_VALUE_EVALUATED_DATE"\n      },\n      "operators": [\n        {\n          "key": "Before",\n          "value": "PLUGIN_DECISION_DEFINITION_VALUE_OPERATOR_BEFORE"\n        },\n        {\n          "key": "After",\n          "value": "PLUGIN_DECISION_DEFINITION_VALUE_OPERATOR_AFTER"\n        }\n      ],\n      "allowDates": true,\n      "enforceDates": true\n    },\n    {\n      "id": {\n        "key": "userId",\n        "value": "PLUGIN_DECISION_DEFINITION_VALUE_USER_ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    }\n  ],\n  "operators": {\n    "undefined":  [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      },\n      {\n        "key": "gt",\n        "value": ">"\n      },\n      {\n        "key": "gteq",\n        "value": ">="\n      },\n      {\n        "key": "lt",\n        "value": "<"\n      },\n      {\n        "key": "lteq",\n        "value": "<="\n      },\n      {\n        "key": "like",\n        "value": "PLUGIN_DECISION_DEFINITION_OPERATOR_LIKE"\n      }\n    ],\n    "string":     [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      },\n      {\n        "key": "gt",\n        "value": ">"\n      },\n      {\n        "key": "gteq",\n        "value": ">="\n      },\n      {\n        "key": "lt",\n        "value": "<"\n      },\n      {\n        "key": "lteq",\n        "value": "<="\n      },\n      {\n        "key": "like",\n        "value": "PLUGIN_DECISION_DEFINITION_OPERATOR_LIKE"\n      }\n    ],\n    "number":     [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      },\n      {\n        "key": "gt",\n        "value": ">"\n      },\n      {\n        "key": "gteq",\n        "value": ">="\n      },\n      {\n        "key": "lt",\n        "value": "<"\n      },\n      {\n        "key": "lteq",\n        "value": "<="\n      }\n    ],\n    "boolean":    [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      }\n    ],\n    "object":     [{\n      "key": "eq",\n      "value": "="\n    },\n      {\n        "key": "neq",\n        "value": "!="\n      }],\n    "date":     [{\n      "key": "lteq",\n      "value": "PLUGIN_DECISION_DEFINITION_VALUE_OPERATOR_BEFORE"\n    },\n      {\n        "key": "gteq",\n        "value": "PLUGIN_DECISION_DEFINITION_VALUE_OPERATOR_AFTER"\n      }]\n  },\n  "tooltips": {\n    "inputPlaceholder": "PLUGIN_DECISION_DEFINITION_ADD_CRITERIA",\n    "invalid": "PLUGIN_DECISION_DEFINITION_INVALID",\n    "deleteSearch": "PLUGIN_DECISION_DEFINITION_DELETE_SEARCH",\n    "type": "PLUGIN_DECISION_DEFINITION_TYPE",\n    "name": "PLUGIN_DECISION_DEFINITION_NAME",\n    "operator": "PLUGIN_DECISION_DEFINITION_OPERATOR",\n    "value": "PLUGIN_DECISION_DEFINITION_VALUE"\n  }\n}\n');b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.decisionDefinition.tab",{id:"decision-instances-table",label:"DECISION_DEFINITION_LABEL",template:d,controller:["$scope","$location","search","routeUtil","camAPI","Views","$translate","localConf",function(a,b,d,f,g,h,i,j){function k(b,d,e){a.pagesObj=d||a.pagesObj,a.sortObj=e||a.sortObj,e&&l(e);var f=a.pagesObj.current,g=a.pagesObj.size,h=(f-1)*g;a.decisionInstances=null,a.loadingState="LOADING";var i=c.extend({decisionDefinitionId:a.decisionDefinition.id,firstResult:h,maxResults:g,sortBy:a.sortObj.sortBy,sortOrder:a.sortObj.sortOrder},b),j=c.extend({decisionDefinitionId:a.decisionDefinition.id},b);return r.decisionInstanceCount(j).then(function(b){var c=b.count;return r.decisionInstance(i).then(function(b){return a.decisionInstances=b,a.loadingState=b.length?"LOADED":"EMPTY",c})})}function l(a){j.set("sortDecInstTab",a)}function m(a){return j.get("sortDecInstTab",a)}a.headColumns=[{"class":"instance-id",request:"",sortable:!1,content:i.instant("PLUGIN_DECISION_ID")},{"class":"start-time",request:"evaluationTime",sortable:!0,content:i.instant("PLUGIN_DECISION_EVALUATION_TIME")},{"class":"definition-key",request:"",sortable:!1,content:i.instant("PLUGIN_DECISION_CALLING_PROCESS_CASE")},{"class":"instance-id",request:"",sortable:!1,content:i.instant("PLUGIN_DECISION_CALLING_INSTANCE_ID")},{"class":"activity-id",request:"",sortable:!1,content:i.instant("PLUGIN_DECISION_ACTIVITY_ID")}];var n={sortBy:"evaluationTime",sortOrder:"desc"};a.sortObj=m(n);var o=h.getProviders({component:"cockpit.processInstance.view"}),p=o.filter(function(a){return"history"===a.id}).length>0;a.hasCasePlugin=!1;try{a.hasCasePlugin=!!c.module("cockpit.plugin.case")}catch(q){}a.getProcessDefinitionLink=function(a){return p?"#/process-definition/"+a.processDefinitionId+"/history":"#/process-definition/"+a.processDefinitionId},a.getProcessInstanceLink=function(a){return p?"#/process-instance/"+a.processInstanceId+"/history?activityInstanceIds="+a.activityInstanceId+"&activityIds="+a.activityId:"#/process-instance/"+a.processInstanceId},a.getActivitySearch=function(a){return JSON.stringify([{type:"caseActivityIdIn",operator:"eq",value:a.activityId}])},a.searchConfig=c.copy(e),c.forEach(e.tooltips,function(b,c){a.searchConfig.tooltips[c]=i.instant(b)}),a.searchConfig.types.map(function(a){return a.id.value=i.instant(a.id.value),a.operators&&(a.operators=a.operators.map(function(a){return a.value=i.instant(a.value),a})),a});var r=g.resource("history");a.onSearchChange=k,a.onSortChange=k}],priority:10})}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],58:[function(a,b,c){"use strict";b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.decisionInstance.table",{id:"highlightRules",initialize:function(a){a.decisionInstance.outputs.forEach(function(b){b.ruleId&&a.tableControl.highlightRow(b.ruleId,"highlight")})}})}]},{}],59:[function(a,b,c){"use strict";var d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/decisionInstance/input-variable-table.html -->\n<!-- <div ng-repeat="variable in variables"\n     cam-widget-variable\n     cam-variable="variable"\n     display="true">\n</div> -->\n\n<div cam-widget-loader loading-state="{{loadingState}}" text-empty="{{ \'PLUGIN_DECISION_LIS_NO_INPUT_TEXT\' | translate }}">\n  <div cam-widget-variables-table\n       cam-editable="[]"\n       cam-variables="variables"\n       default-sort = "sortObj"\n       on-sort-change="onSortChange(sortObj)"\n       cam-headers="headColumns"></div>\n</div>\n\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/decisionInstance/input-variable-table.html -->\n';b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.decisionInstance.tab",{id:"decision-input-table",label:"PLUGIN_INPUT_TABLE_LABEL",template:d,controller:["$scope","$translate","localConf","orderByFilter",function(a,b,c,d){function e(a){c.set("sortDecisionInputTab",a)}function f(a){return c.get("sortDecisionInputTab",a)}a.loadingState=a.decisionInstance.inputs.length>0?"LOADED":"EMPTY",a.variables=a.decisionInstance.inputs.map(function(a){return{variable:{type:a.type,value:a.value,name:a.clauseName||a.clauseId,valueInfo:a.valueInfo}}}),a.headColumns=[{"class":"name",request:"variable.name",sortable:!0,content:b.instant("PLUGIN_VARIABLE_NAME")},{"class":"type",request:"variable.type",sortable:!0,content:b.instant("PLUGIN_VARIABLE_TYPE")},{"class":"value",request:"",sortable:!1,content:b.instant("PLUGIN_VARIABLE_VALUE")}],a.sortObj=f({sortBy:"variable.name",sortOrder:"asc",sortReverse:!1}),a.onSortChange=function(b){b=b||a.sortObj,b.sortReverse="asc"!==b.sortOrder,e(b),a.variables=d(a.variables,b.sortBy,b.sortReverse)}}],priority:20})}]},{}],60:[function(a,b,c){"use strict";var d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/decisionInstance/output-variable-table.html -->\n<!-- <div ng-repeat="variable in variables"\n     cam-widget-variable\n     cam-variable="variable"\n     display="true">\n</div> -->\n\n<div cam-widget-variables-table\n     cam-editable="[]"\n     cam-variables="variables"\n     default-sort = "sortObj"\n     on-sort-change="onSortChange(sortObj)"\n     cam-headers="headColumns"></div>\n</div>\n\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/decisionInstance/output-variable-table.html -->\n';b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.decisionInstance.tab",{id:"decision-input-table",label:"PLUGIN_OUTPUT_TABLE_LABEL",template:d,controller:["$scope","$translate","localConf","orderByFilter",function(a,b,c,d){function e(a){c.set("sortDecisionInputTab",a)}function f(a){return c.get("sortDecisionInputTab",a)}a.variables=a.decisionInstance.outputs.map(function(a){return{variable:{type:a.type,value:a.value,name:a.clauseName||a.clauseId||a.variableName,valueInfo:a.valueInfo}}}),a.headColumns=[{"class":"name",request:"variable.name",sortable:!0,content:b.instant("PLUGIN_VARIABLE_NAME")},{"class":"type",request:"variable.type",sortable:!0,content:b.instant("PLUGIN_VARIABLE_TYPE")},{"class":"value",request:"",sortable:!1,content:b.instant("PLUGIN_VARIABLE_VALUE")}],a.sortObj=f({sortBy:"variable.name",sortOrder:"asc",sortReverse:!1}),a.onSortChange=function(b){b=b||a.sortObj,b.sortReverse="asc"!==b.sortOrder,e(b),a.variables=d(a.variables,b.sortBy,b.sortReverse)}}],priority:10})}]},{}],61:[function(a,b,c){"use strict";var d=a("camunda-commons-ui/vendor/angular");b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.decisionInstance.table",{id:"realInput",initialize:function(a){var b,c,e=d.element("th[data-col-id]");e&&e.each(function(d,e){c=a.decisionInstance.inputs.filter(function(a){return a.clauseId===e.getAttribute("data-col-id")})[0],c&&(b=document.createElement("span"),"Object"!==c.type&&"Bytes"!==c.type&&"File"!==c.type?(b.className="dmn-input",b.textContent=" = "+c.value):(b.className="dmn-input-object",b.setAttribute("title","Variable value of type "+c.type+" is not shown"),b.textContent=" = ["+c.type+"]"),e.firstChild.appendChild(b))})}})}]},{"camunda-commons-ui/vendor/angular":3}],62:[function(a,b,c){"use strict";var d=a("camunda-commons-ui/vendor/angular");b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.decisionInstance.table",{id:"realOutput",initialize:function(a){var b,c,e;a.decisionInstance.outputs.map(function(a){c=".output-cell[data-col-id="+a.clauseId+"][data-row-id="+a.ruleId+"]",b=d.element(c)[0],e=document.createElement("span"),"Object"!==a.type&&"Bytes"!==a.type&&"File"!==a.type?(e.className="dmn-output",e.textContent=" = "+a.value):(e.className="dmn-output-object",e.setAttribute("title","Variable value of type "+a.type+" is not shown"),e.textContent=" = ["+a.type+"]"),b.appendChild(e)})}})}]},{"camunda-commons-ui/vendor/angular":3}],63:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./dashboard"),f=a("./decisionDefinition/decisionInstanceTable"),g=a("./decisionInstance/inputTable"),h=a("./decisionInstance/outputTable"),i=a("./decisionInstance/highlightRules"),j=a("./decisionInstance/realInput"),k=a("./decisionInstance/realOutput"),l=d.module("cockpit.plugin.decisionList.views",[e.name]);l.config(f),l.config(g),l.config(h),l.config(i),l.config(j),l.config(k),b.exports=l}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./dashboard":54,"./decisionDefinition/decisionInstanceTable":57,"./decisionInstance/highlightRules":58,"./decisionInstance/inputTable":59,"./decisionInstance/outputTable":60,"./decisionInstance/realInput":61,"./decisionInstance/realOutput":62}],64:[function(a,b,c){"use strict";function d(a,b,c,d,e,f){b(a,this,["processInstance","processData"]),d(a,this),this.translate=e,this.localConf=f,this.externalTasks=c,this.query=null,this.pages=null,this.activityIds=null,this.sorting=this._loadLocal({sortBy:"taskPriority",sortOrder:"asc"}),this.headColumns=[{"class":"state",request:"",sortable:!1,content:this.translate.instant("PLUGIN_EXT_EXTERNAL_TASK_ID")},{"class":"activity",request:"",sortable:!1,content:this.translate.instant("PLUGIN_EXT_ACTIVITY")},{"class":"retries",request:"",sortable:!1,content:this.translate.instant("PLUGIN_EXT_RETRIES")},{"class":"worker-id",request:"",sortable:!1,content:this.translate.instant("PLUGIN_EXT_WORKER_ID")},{"class":"expiration",request:"",sortable:!1,content:this.translate.instant("PLUGIN_EXT_LOCK_EXPIRATION_TIME")},{"class":"topic",request:"",sortable:!1,content:this.translate.instant("PLUGIN_EXT_TOPIC")},{"class":"priority",request:"taskPriority",sortable:!0,content:this.translate.instant("PLUGIN_EXT_PRIORITY")}]}b.exports=["$scope","exposeScopeProperties","externalTasks","observeBpmnElements","$translate","localConf",d],d.prototype._loadLocal=function(a){return this.localConf.get("sortExternalTaskRuntimeTab",a)},d.prototype._saveLocal=function(a){return this.localConf.set("sortExternalTaskRuntimeTab",a)},d.prototype.onSortChange=function(a){this.sorting=a,this._saveLocal(this.sorting),this.onLoad()},d.prototype.onLoad=function(a,b){return this.pages=a||this.pages,this.activityIds=b||this.activityIds,this.externalTasks.getActiveExternalTasksForProcess(this.processInstance.id,this.pages,this.sorting,this.getActivityParams(this.activityIds)).then(function(a){return this.tasks=a.list,a}.bind(this))},d.prototype.getActivityParams=function(a){return a&&a.length?{activityIdIn:a}:{}}},{}],65:[function(a,b,c){(function(c){"use strict";var d=a("camunda-commons-ui/vendor/angular"),e="undefined"!=typeof window?window["cam-common"]:"undefined"!=typeof c?c["cam-common"]:null,f=a("./services/external-tasks"),g=a("./controllers/process-instance-runtime-external-tasks-controller"),h=a("./view-provider.config"),i=d.module("cockpit.plugin.process-instance-runtime-tab",[e.name]);i.factory("externalTasks",f),i.controller("ProcessInstanceRuntimeTabController",g),i.config(h),b.exports=i}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./controllers/process-instance-runtime-external-tasks-controller":64,"./services/external-tasks":66,"./view-provider.config":67,"camunda-commons-ui/vendor/angular":3}],66:[function(a,b,c){"use strict";var d=a("camunda-commons-ui/vendor/angular");b.exports=["camAPI","createListQueryFunction",function(a,b){function c(a,b,c,e){var g={processInstanceId:a},h={sorting:[c]};return f(d.extend(g,e),b,h)}var e=a.resource("external-task"),f=b(e.count.bind(e),e.list.bind(e));return{getActiveExternalTasksForProcess:c}}]},{"camunda-commons-ui/vendor/angular":3}],67:[function(a,b,c){"use strict";var d='<!-- # CE - ui/cockpit/plugins/external-tasks-process-instance-runtime-tab/process-instance-runtime-external-tasks.html -->\n<div external-tasks-tab="RuntimeTab.onLoad(pages, activityIds)"\n     process-data="RuntimeTab.processData">\n  <table class="history-job-log cam-table">\n\n    <thead sortable-table-head\n           head-columns="RuntimeTab.headColumns"\n           on-sort-change="RuntimeTab.onSortChange(RuntimeTab.sorting)"\n           default-sort="RuntimeTab.sorting">\n    </thead>\n    <tbody>\n      <tr ng-repeat="task in RuntimeTab.tasks track by task.id">\n        <td class="state"\n            cam-widget-clipboard="task.id">{{task.id}}</td>\n        <td class="activity">\n          <span external-task-activity-link="task.activityId"\n                bpmn-elements="RuntimeTab.bpmnElements">\n          </span>\n        </td>\n        <td class="retries">{{task.retries}}</td>\n        <td class="worker-id">{{task.workerId}}</td>\n        <td class="expiration">{{task.lockExpirationTime}}</td>\n        <td class="topic">{{task.topicName}}</td>\n        <td class="priority">{{task.priority}}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<!-- / CE - ui/cockpit/plugins/external-tasks-process-instance-runtime-tab/process-instance-runtime-external-tasks.html -->\n';b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.processInstance.runtime.tab",{id:"external-tasks-process-instance-runtime",label:"PLUGIN_EXTERNAL_TASKS_LABEL",template:d,controller:"ProcessInstanceRuntimeTabController as RuntimeTab"})}]},{}],68:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-action.html -->\n<a class="btn btn-default action-button"\n   ng-click="openDialog()"\n   tooltip="{{ \'BULK_OVERRIDE_TOOLTIP_CHANGE_OVRR\' | translate }}"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-cog"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-action.html -->\n',e='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-dialog.html -->\n<div class="modal-header">\n  <h3>{{ \'BULK_OVERRIDE_CHANGE_JOB_TEXT\' | translate }}</h3>\n</div>\n\n<div class="job-definition-override-job-priority modal-body">\n  <div notifications-panel></div>\n\n  <div ng-hide="status === \'FINISHED\' || hasNoJobDefinitions">\n\n    <p>{{ \'BULK_OVERRIDE_CHANGE_JOB_LEGEND\' | translate }}</p>\n\n    <form class="form-horizontal"\n          name="overrideJobPriorityForm"\n          novalidate\n          request-aware\n          ng-submit="isValid() && submit()">\n\n      <fieldset>\n\n        <div class="form-group">\n          <label class="col-xs-4 control-label"\n                 for="execute">\n            {{ \'BULK_OVERRIDE_EXECUTE\' | translate }}\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="{{ \'BULK_OVERRIDE_EXECUTE_TOOLTIP\' | translate }}"\n                  tooltip-placement="right">\n            </span>\n          </label>\n\n          <div class="col-xs-8">\n            <div class="radio">\n              <label>\n                <input ng-model="setJobPriority"\n                       ng-value="false"\n                       type="radio"\n                       name="execute" />\n                {{ \'BULK_OVERRIDE_CLEAR_OVRR\' | translate }}\n              </label>\n            </div>\n\n            <div class="radio">\n              <label>\n                <input ng-model="setJobPriority"\n                       ng-value="true"\n                       type="radio"\n                       name="execute" />\n                {{ \'BULK_OVERRIDE_SET_OVRR\' | translate }}\n              </label>\n            </div>\n          </div>\n        </div>\n\n        <div class="form-group" ng-show="setJobPriority">\n          <label class="col-xs-4 control-label"\n                 for="priority">\n            {{ \'BULK_OVERRIDE_PRIORITY\' | translate }}\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="{{ \'BULK_OVERRIDE_PRIORITY_TOOLTIP\' | translate }}"\n                  tooltip-placement="right">\n            </span>\n          </label>\n\n          <div class="col-xs-8">\n            <input name="priority"\n                   ng-model="data.priority"\n                   class="form-control"\n                   numeric integer="true"\n                   required />\n            <p class="invalid"\n               ng-show="this.overrideJobPriorityForm.priority.$error.numeric">\n              {{ \'BULK_OVERRIDE_INVALID_VALUE\' | translate }}\n            </p>\n          </div>\n        </div>\n\n        <div class="form-group" ng-show="setJobPriority">\n          <label class="col-xs-4 control-label"\n                 for="includeJobsPriority">\n            {{ \'BULK_OVERRIDE_INCLUDE_EXISTING_JOB\' | translate }}\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="{{ \'BULK_OVERRIDE_INCLUDE_EXISTING_JOB_TOOLTIP\' | translate }}"\n                  tooltip-placement="right">\n            </span>\n          </label>\n\n          <div class="col-xs-8 checkbox">\n            <label>\n              <input name="includeJobsPriority"\n                     type="checkbox"\n                     ng-model="data.includeJobs" />\n            </label>\n          </div>\n        </div>\n\n      </fieldset>\n    </form>\n\n    <p>\n      {{ \'BULK_OVERRIDE_DO_YOU_REALLY\' | translate }}\n    </p>\n\n  </div>\n\n  <div ng-show="status === \'FINISHED\' || status === \'PERFORMING\'">\n\n    <table class="cam-table">\n      <thead>\n        <tr>\n          <th class="job-id uuid">{{ \'BULK_OVERRIDE_ACTIVITY\' | translate }}</th>\n          <th class="scope">{{ \'BULK_OVERRIDE_TYPE\' | translate }}</th>\n          <th class="status">{{ \'BULK_OVERRIDE_STATUS\' | translate }}</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr ng-repeat="jobDefinition in showJobDefinitions">\n          <td class="activity">\n            {{ jobDefinition.activityName }}\n          </td>\n          <td class="type">\n            {{ jobDefinition.jobType }}\n          </td>\n          <td class="status">\n            <span ng-show="jobDefinition.status && jobDefinition.status === \'PERFORMING\'">\n              <span class="glyphicon glyphicon-loading"></span>\n            </span>\n            <span ng-show="jobDefinition.status && jobDefinition.status === \'SUCCESS\'">\n              <span class="glyphicon glyphicon-ok"></span>&nbsp;{{ \'BULK_OVERRIDE_SUCCESSFUL\' | translate }}\n            </span>\n            <span ng-show="jobDefinition.status && jobDefinition.status === \'FAILED\'">\n              <span class="glyphicon glyphicon-remove"></span>&nbsp;{{ \'BULK_OVERRIDE_FAILED\' | translate }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <pagination ng-if="summarizePages.total > summarizePages.size"\n                class="pagination-sm"\n\n                page="summarizePages.current"\n                ng-model="summarizePages.current"\n\n                total-items="summarizePages.total"\n                items-per-page="summarizePages.size"\n\n                max-size="7"\n                boundary-links="true"></pagination>\n  </div>\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-link"\n          ng-click="close(status)"\n          ng-disabled="status === \'PERFORMING\'"\n          ng-hide="status === \'FINISHED\' || hasNoJobDefinitions">\n    {{ \'BULK_OVERRIDE_CLOSE\' | translate }}\n  </button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="submit()"\n          ng-hide="setJobPriority || status === \'FINISHED\'"\n          ng-disabled="!isValid() || status === \'PEFORMING\'">\n    {{ \'BULK_OVERRIDE_CLEAR\' | translate }}\n  </button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="submit()"\n          ng-hide="!setJobPriority || status === \'FINISHED\' || hasNoJobDefinitions"\n          ng-disabled="!isValid() || status === \'PERFORMING\'">\n    {{ \'BULK_OVERRIDE_OVERRIDE\' | translate }}\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="close(status)"\n          ng-show="status === \'FINISHED\' || hasNoJobDefinitions">\n    {{ \'BULK_OVERRIDE_OK\' | translate }}\n  </button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-dialog.html -->\n',f=function(a){a.registerDefaultView("cockpit.processDefinition.runtime.action",{id:"bulk-job-definition-override-job-priority-action",template:d,controller:["$scope","$rootScope","$modal",function(a,b,d){var f,g=a.processData.newChild(a);g.observe("jobDefinitions",function(a){f=a}),a.openDialog=function(){var b=d.open({resolve:{jobDefinitions:function(){return f}},controller:"BulkJobDefinitionOverrideJobPriorityController",template:e});b.result.then(function(b){"FINISHED"===b.status&&(g.changed("jobDefinitions"),g.set("filter",c.extend({},a.filter)))})}}],priority:10})};f.$inject=["ViewsProvider"],b.exports=f}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],69:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null;b.exports=["$scope","$q","Notifications","JobDefinitionResource","$modalInstance","jobDefinitions","$timeout","$translate",function(a,b,d,e,f,g,h,i){function j(b){for(var c=r.size,d=(b-1)*c,e=a.showJobDefinitions=[],f=0;f<c;f++){var h=g[f+d];h&&e.push(h)}}function k(b){a.status=n,l(b).then(function(){q?a.setJobPriority?d.addError({status:i.instant("BULK_OVERRIDE_STATUS_FINISHED"),message:i.instant("BULK_OVERRIDE_ERROR_1"),exclusive:!0}):d.addError({status:i.instant("BULK_OVERRIDE_STATUS_FINISHED"),message:i.instant("BULK_OVERRIDE_ERROR_2"),exclusive:!0}):a.setJobPriority?d.addMessage({status:i.instant("BULK_OVERRIDE_STATUS_FINISHED"),message:i.instant("BULK_OVERRIDE_MESSAGE"),exclusive:!0}):d.addMessage({status:i.instant("BULK_OVERRIDE_STATUS_FINISHED"),message:i.instant("BULK_OVERRIDE_CLEARING_MESSAGE"),exclusive:!0}),a.status=m;
})}function l(a){function c(a){a.status=n,e.setJobPriority({id:a.id},s,function(){a.status=o,g-=1,0===g&&f.resolve()},function(b){q=!0,a.status=p,a.error=b,g-=1,0===g&&f.resolve()})}for(var d,f=b.defer(),g=a.length,h=0;d=a[h];h++)c(d);return f.promise}a.hasNoJobDefinitions=0===g.length,a.hasNoJobDefinitions&&f.opened.then(h(function(){d.addError({status:"Error",message:"This process definition has no job definitions associated with. The job priority cannot be overridden.",exclusive:!0})},0)),a.status;var m="FINISHED",n="PERFORMING",o="SUCCESS",p="FAILED",q=!1,r=a.summarizePages={size:5,total:g.length,current:1},s=a.data={priority:null,includeJobs:!1};a.setJobPriority=!0,a.$on("$routeChangeStart",function(){var b={};b.status=a.status,f.close(b)}),a.$watch("summarizePages.current",function(a){a&&j(a)}),a.submit=function(){var b=a.setJobPriority;b||(s={}),k(g)},a.isValid=function(){var b=c.element('[name="overrideJobPriorityForm"]').scope();return!a.setJobPriority||!(!b||!b.overrideJobPriorityForm)&&b.overrideJobPriorityForm.$valid},a.close=function(a){var b={};b.status=a,f.close(b)}}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],70:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./override-job-priority/override-job-priority-action"),f=a("./override-job-priority/override-job-priority-dialog"),g=a("./bulk-override-job-priority/bulk-override-job-priority-action"),h=a("./bulk-override-job-priority/bulk-override-job-priority-dialog"),i=d.module("cockpit.plugin.jobDefinition.actions",[]);i.config(e),i.controller("JobDefinitionOverrideJobPriorityController",f),i.config(g),i.controller("BulkJobDefinitionOverrideJobPriorityController",h),b.exports=i}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./bulk-override-job-priority/bulk-override-job-priority-action":68,"./bulk-override-job-priority/bulk-override-job-priority-dialog":69,"./override-job-priority/override-job-priority-action":71,"./override-job-priority/override-job-priority-dialog":72}],71:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/override-job-priority/override-job-priority-action.html -->\n<a class="btn btn-default action-button"\n   ng-click="openDialog(jobDefinition)"\n   tooltip="{{ \'PLUGIN_JOBDEFINITION_ACTION_OVERRIDE_TOOLTIP_CHANGE\' | translate }}"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-cog"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/override-job-priority/override-job-priority-action.html -->\n',e='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/override-job-priority/override-job-priority-dialog.html -->\n<div class="modal-header">\n  <h3>{{ \'PLUGIN_JOBDEFINITION_ACTION_OVERRIDE_JP\' | translate }}</h3>\n</div>\n\n<div class="job-definition-override-job-priority modal-body">\n  <div notifications-panel></div>\n\n  <div ng-hide="status === \'SUCCESS\' || status === \'FAIL\'">\n\n    <p>{{ \'PLUGIN_JOBDEFINITION_ACTION_OVERRIDE_TEXT\' | translate }}</p>\n\n    <form class="form-horizontal"\n          name="overrideJobPriorityForm"\n          novalidate\n          request-aware\n          ng-submit="isValid() && submit()">\n\n      <fieldset>\n\n        <div class="form-group" ng-show="hasOverridingJobPriority()">\n          <label class="col-xs-4 control-label"\n                 for="execute">\n            {{ \'PLUGIN_JOBDEFINITION_ACTION_EXECUTE\' | translate }}\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="{{ \'PLUGIN_JOBDEFINITION_ACTION_EXECUTE_TOOLTIP\' | translate }}"\n                  tooltip-placement="right">\n            </span>\n          </label>\n\n          <div class="col-xs-8">\n            <div class="radio">\n              <label>\n                <input ng-model="setJobPriority"\n                       ng-value="false"\n                       type="radio"\n                       name="execute" />\n                {{ \'PLUGIN_JOBDEFINITION_ACTION_CLEAR_OVERR\' | translate }}\n              </label>\n            </div>\n\n            <div class="radio">\n              <label>\n                <input ng-model="setJobPriority"\n                       ng-value="true"\n                       type="radio"\n                       name="execute" />\n                {{ \'PLUGIN_JOBDEFINITION_ACTION_SET_OVERR\' | translate }}\n              </label>\n            </div>\n          </div>\n        </div>\n\n        <div class="form-group" ng-show="setJobPriority">\n          <label class="col-xs-4 control-label"\n                 for="priority">\n            {{ \'PLUGIN_JOBDEFINITION_ACTION_PRIORITY\' | translate }}\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="{{ \'PLUGIN_JOBDEFINITION_ACTION_PRIORITY_TOOLTIP\' | translate }}"\n                  tooltip-placement="right">\n            </span>\n          </label>\n\n          <div class="col-xs-8">\n            <input name="priority"\n                   ng-model="data.priority"\n                   class="form-control"\n                   numeric integer="true"\n                   required />\n            <p class="invalid"\n               ng-show="this.overrideJobPriorityForm.priority.$error.numeric">\n              {{ \'PLUGIN_JOBDEFINITION_ACTION_INVALID_VALUE\' | translate }}\n            </p>\n          </div>\n        </div>\n\n        <div class="form-group" ng-show="setJobPriority">\n          <label class="col-xs-4 control-label"\n                 for="includeJobsPriority">\n            {{ \'PLUGIN_JOBDEFINITION_ACTION_INCLUDE_EXISTING_JOB\' | translate }}\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="{{ \'PLUGIN_JOBDEFINITION_ACTION_INCLUDE_EXISTING_JOB_TOOLTIP\' | translate }}"\n                  tooltip-placement="right">\n            </span>\n          </label>\n\n          <div class="col-xs-8 checkbox">\n            <label>\n              <input name="includeJobsPriority"\n                     type="checkbox"\n                     ng-model="data.includeJobs" />\n            </label>\n          </div>\n        </div>\n\n      </fieldset>\n    </form>\n\n    <p>\n      {{ \'PLUGIN_JOBDEFINITION_ACTION_TEXT_1\' | translate }}\n    </p>\n\n  </div>\n\n  <div ng-show="status === \'SUCCESS\'">\n    <p ng-show="setJobPriority">\n      {{ \'PLUGIN_JOBDEFINITION_ACTION_TEXT_2\' | translate: \' {data: data.priority}\' }}\n    </p>\n    <p ng-hide="setJobPriority">\n      {{ \'PLUGIN_JOBDEFINITION_ACTION_TEXT_3\' | translate }}\n    </p>\n  </div>\n\n  <div ng-show="status === \'FAIL\'">\n    <p ng-show="setJobPriority">\n      {{ \'PLUGIN_JOBDEFINITION_ACTION_TEXT_4\' | translate: \' {data: data.priority}\' }}\n    </p>\n    <p ng-hide="setJobPriority">\n      {{ \'PLUGIN_JOBDEFINITION_ACTION_TEXT_5\' | translate }}\n    </p>\n  </div>\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-link"\n          ng-click="close(status)"\n          ng-disabled="status === \'PERFORM_UDPATE\'"\n          ng-hide="status === \'SUCCESS\' || status === \'FAIL\'">\n    {{ \'PLUGIN_JOBDEFINITION_ACTION_CLOSE\' | translate }}\n  </button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="submit()"\n          ng-hide="setJobPriority || status === \'SUCCESS\' || status === \'FAIL\'"\n          ng-disabled="!isValid() || status === \'PERFORM_UDPATE\'">\n    {{ \'PLUGIN_JOBDEFINITION_ACTION_CLEAR\' | translate }}\n  </button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="submit()"\n          ng-hide="!setJobPriority || status === \'SUCCESS\' || status === \'FAIL\'"\n          ng-disabled="!isValid() || status === \'PERFORM_UDPATE\'">\n    {{ \'PLUGIN_JOBDEFINITION_ACTION_OVERRIDE\' | translate }}\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="close(status)"\n          ng-show="status === \'SUCCESS\' || status === \'FAIL\'">\n    {{ \'PLUGIN_JOBDEFINITION_ACTION_OK\' | translate }}\n  </button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/override-job-priority/override-job-priority-dialog.html -->\n',f=function(a){a.registerDefaultView("cockpit.jobDefinition.action",{id:"job-definition-override-job-priority-action",template:d,controller:["$scope","$rootScope","$modal",function(a,b,d){a.openDialog=function(b){var f=d.open({resolve:{jobDefinition:function(){return b}},controller:"JobDefinitionOverrideJobPriorityController",template:e});f.result.then(function(b){"SUCCESS"===b.status&&(a.processData.changed("jobDefinitions"),a.processData.set("filter",c.extend({},a.filter)))})}}],priority:10})};f.$inject=["ViewsProvider"],b.exports=f}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],72:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null;b.exports=["$scope","$q","Notifications","JobDefinitionResource","$modalInstance","jobDefinition","$translate",function(a,b,d,e,f,g,h){var i="SUCCESS",j="FAIL";a.status,a.setJobPriority=!0;var k=a.data={priority:g.overridingJobPriority,includeJobs:!1};a.$on("$routeChangeStart",function(){var b={};b.status=a.status,f.close(b)}),a.hasOverridingJobPriority=function(){return null!==g.overridingJobPriority&&void 0!==g.overridingJobPriority},a.submit=function(){var b=a.setJobPriority;b||(k={}),e.setJobPriority({id:g.id},k,function(){a.status=i,b?d.addMessage({status:h.instant("PLUGIN_JOBDEFINITION_ACTION_STATUS_FINISHED"),message:h.instant("PLUGIN_JOBDEFINITION_ACTION_DIALOG_MSN_1"),exclusive:!0}):d.addMessage({status:h.instant("PLUGIN_JOBDEFINITION_ACTION_STATUS_FINISHED"),message:h.instant("PLUGIN_JOBDEFINITION_ACTION_DIALOG_MSN_2"),exclusive:!0})},function(c){a.status=j,b?d.addError({status:h.instant("PLUGIN_JOBDEFINITION_ACTION_STATUS_FINISHED"),message:h.instant("PLUGIN_JOBDEFINITION_ACTION_DIALOG_ERR_1",{message:c.data.message}),exclusive:!0}):d.addError({status:h.instant("PLUGIN_JOBDEFINITION_ACTION_STATUS_FINISHED"),message:h.instant("PLUGIN_JOBDEFINITION_ACTION_DIALOG_ERR_2",{message:c.data.message}),exclusive:!0})})},a.isValid=function(){var b=c.element('[name="overrideJobPriorityForm"]').scope();return!a.setJobPriority||!(!b||!b.overrideJobPriorityForm)&&b.overrideJobPriorityForm.$valid},a.close=function(a){var b={};b.status=a,f.close(b)}}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],73:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./processDefinition/jobDefinitionData"),f=d.module("cockpit.plugin.jobDefinition.data",[]);f.config(e),b.exports=f}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./processDefinition/jobDefinitionData":74}],74:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d=["$scope","processData","JobDefinitionResource",function(a,b,d){a.$on("$processDefinition.suspensionState.changed",function(){b.changed("jobDefinitions")}),b.provide("jobDefinitions",["processDefinition",function(a){return d.query({processDefinitionId:a.id}).$promise}]),b.observe(["jobDefinitions","bpmnElements"],function(a,b){c.forEach(a,function(a){var c=a.activityId,d=b[c];a.activityName=d&&(d.name||d.id)||c})})}],e=function(a){a.registerData("cockpit.processDefinition.data",{id:"job-definitions-data",controller:d})};e.$inject=["DataProvider"],b.exports=e}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],75:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./views/main"),f=a("./data/main"),g=a("./actions/main");b.exports=d.module("cockpit.plugin.jobDefinition",[e.name,f.name,g.name])}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./actions/main":70,"./data/main":73,"./views/main":76}],76:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./processDefinition/jobDefinitionTable"),f=a("./processDefinition/jobDefinitionSuspensionState"),g=a("./processDefinition/suspensionStateAction"),h=a("./processDefinition/diagramPlugins"),i=d.module("cockpit.plugin.jobDefinition.views",[h.name]);i.config(e),i.controller("JobDefinitionSuspensionStateController",f),i.config(g),b.exports=i}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./processDefinition/diagramPlugins":77,"./processDefinition/jobDefinitionSuspensionState":79,"./processDefinition/jobDefinitionTable":80,"./processDefinition/suspensionStateAction":81}],77:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./jobSuspension"),f=d.module("cockpit.plugin.jobDefinition.views.diagramPlugins",[]);f.config(e),b.exports=f}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./jobSuspension":78}],78:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d='<span class="badge badge-warning activity-top-right-position"\n      tooltip="Suspended Job Definition"\n      tooltip-placement="top">\n  <span class="glyphicon glyphicon-pause"></span>\n</span>\n';b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.processDefinition.diagram.plugin",{id:"activity-instance-statistics-overlay",overlay:["$scope","control","processData","processDiagram",function(a,b,e,f){function g(a,b){return b.filter(function(b){return b.activityId===a.id})}var h=b.getViewer(),i=h.get("overlays"),j=h.get("elementRegistry"),k={};e.observe(["jobDefinitions"],function(b){j.forEach(function(e){function h(){return l.some(function(a){return a.suspended})}var j=f.bpmnElements[e.businessObject.id],l=g(j,b);l.length>0&&(j.isSelectable=!0),a.$watch(h,function(a){var b=k[j.id];!b&&a&&(b=c.element(d),i.add(j.id,{position:{top:0,right:0},show:{minZoom:-(1/0),maxZoom:+(1/0)},html:b[0]}),k[j.id]=b),b&&(a?(b.show(),b.tooltip({container:"body",title:"Suspended Job Definition",placement:"top"})):b.hide())})})})}]})}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],79:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null;b.exports=["$scope","$http","$filter","Uri","Notifications","$modalInstance","jobDefinition","$translate","fixDate",function(a,b,d,e,f,g,h,i,j){var k="BEFORE_UPDATE",l="PERFORM_UDPATE",m="SUCCESS",n="FAIL",o=d("date"),p="yyyy-MM-dd'T'HH:mm:ss";a.jobDefinition=h,a.status=k,a.data={includeJobs:!0,executeImmediately:!0,executionDate:o(Date.now(),p)},a.$on("$routeChangeStart",function(){g.close(a.status)}),a.updateSuspensionState=function(){a.status=l;var c={};c.suspended=!h.suspended,c.includeJobs=a.data.includeJobs,c.executionDate=a.data.executeImmediately?null:j(a.data.executionDate),b.put(e.appUri("engine://engine/:engine/job-definition/"+h.id+"/suspended/"),c).success(function(){a.status=m,a.data.executeImmediately?f.addMessage({status:i.instant("PLUGIN_JOBDEFINITION_STATE_STATUS"),message:i.instant("PLUGIN_JOBDEFINITION_STATE_MESSAGES_1"),exclusive:!0}):f.addMessage({status:i.instant("PLUGIN_JOBDEFINITION_STATE_STATUS"),message:i.instant("PLUGIN_JOBDEFINITION_STATE_MESSAGES_2"),exclusive:!0})}).error(function(b){a.status=n,a.data.executeImmediately?f.addError({status:i.instant("PLUGIN_JOBDEFINITION_STATE_STATUS"),message:i.instant("PLUGIN_JOBDEFINITION_STATE_ERR_1",{message:b.message}),exclusive:!0}):f.addError({status:i.instant("PLUGIN_JOBDEFINITION_STATE_STATUS"),message:i.instant("PLUGIN_JOBDEFINITION_STATE_ERR_2",{message:b.message}),exclusive:!0})})},a.isValid=function(){var a=c.element('[name="updateSuspensionStateForm"]').scope();return!(!a||!a.updateSuspensionStateForm)&&a.updateSuspensionStateForm.$valid},a.close=function(b){var c={};c.status=b,c.suspended=!h.suspended,c.executeImmediately=a.data.executeImmediately,c.executionDate=a.data.executionDate,g.close(c)}}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],80:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("../../../../../../common/scripts/util/search-widget-utils"),f='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-table.html -->\n<table class="job-definition cam-table">\n\n  <thead sortable-table-head\n         head-columns="headColumns"\n         on-sort-change="onSortChange(sortObj)"\n         default-sort="sortObj">\n  </thead>\n  <tbody>\n    <tr ng-repeat="jobDefinition in jobDefinitions | orderBy:sortObj.sortBy:sortObj.sortReverse">\n      <td class="state">\n        <span ng-show="jobDefinition.suspended">\n          {{ \'PLUGIN_JOBDEFINITION_SUSPENDED\' | translate }}\n        </span>\n        <span ng-hide="jobDefinition.suspended">\n          {{ \'PLUGIN_JOBDEFINITION_ACTIVE\' | translate }}\n        </span>\n      </td>\n      <td class="activity"\n          cam-widget-clipboard="jobDefinition.activityId">\n        <a ng-href="#/process-definition/{{ processDefinition.id }}/runtime?{{ getSearchQueryForSearchType(jobDefinition.activityId) }}&amp;detailsTab=job-definition-table">\n          {{ jobDefinition.activityName }}\n        </a>\n      </td>\n      <td class="type"\n          cam-widget-clipboard="jobDefinition.jobType">\n        {{ jobDefinition.jobType }}\n      </td>\n      <td class="configuration">\n        {{ jobDefinition.jobConfiguration }}\n      </td>\n      <td class="overriding-job-priority">\n        {{ jobDefinition.overridingJobPriority }}\n      </td>\n      <td class="action">\n        <span ng-repeat="actionProvider in jobDefinitionActions">\n          <view provider="actionProvider" vars="jobDefinitionVars"/>\n        </span>\n      </td>\n    </tr>\n\n    <tr ng-if="!jobDefinitions">\n      <td colspan="6">\n        <span class="glyphicon glyphicon-loading"></span>\n        {{ \'PLUGIN_JOBDEFINITION_LOADING_JOB\' | translate }}\n      </td>\n    </tr>\n\n    <tr ng-if="jobDefinitions && !jobDefinitions.length">\n      <td colspan="6">\n        {{ \'PLUGIN_JOBDEFINITION_NO_JOB_DEFINITION\' | translate }}\n      </td>\n    </tr>\n\n  </tbody>\n</table>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-table.html -->\n',g=["$scope","Views","$translate","localConf",function(a,b,c,f){function g(a){f.set("sortJobDefTab",a)}function h(a){return f.get("sortJobDefTab",a)}function i(b,c){a.jobDefinitions=null;var e=b.activityIds;if(!e||!e.length)return void(a.jobDefinitions=c);var f=[];d.forEach(c,function(a){var b=a.activityId;e.indexOf(b)!=-1&&f.push(a)}),a.jobDefinitions=f}a.headColumns=[{"class":"state",request:"suspended",sortable:!0,content:c.instant("PLUGIN_JOBDEFINITION_STATE")},{"class":"activity",request:"activityName",sortable:!0,content:c.instant("PLUGIN_JOBDEFINITION_ACTIVITY")},{"class":"type",request:"jobType",sortable:!0,content:c.instant("PLUGIN_JOBDEFINITION_TYPE")},{"class":"configuration",request:"jobConfiguration",sortable:!0,content:c.instant("PLUGIN_JOBDEFINITION_CONFIGURATION")},{"class":"overriding-job-priority",request:"overridingJobPriority",sortable:!0,content:c.instant("PLUGIN_JOBDEFINITION_JOB_PRIORITY")},{"class":"action",request:"action",sortable:!1,content:c.instant("PLUGIN_JOBDEFINITION_ACTION")}],a.sortObj=h({sortBy:"suspended",sortOrder:"asc",sortReverse:!1}),a.onSortChange=function(b){b=b||a.sortObj,b.sortReverse="asc"!==b.sortOrder,g(b),a.sortObj=b};var j=a.processData.newChild(a);j.observe(["filter","jobDefinitions","bpmnElements"],function(a,b){i(a,b)}),a.jobDefinitionVars={read:["jobDefinition","processData","filter"]},a.jobDefinitionActions=b.getProviders({component:"cockpit.jobDefinition.action"}),a.getSearchQueryForSearchType=e.getSearchQueryForSearchType.bind(null,"activityIdIn")}],h=function(a){a.registerDefaultView("cockpit.processDefinition.runtime.tab",{id:"job-definition-table",label:"PLUGIN_JOB_DEFINITION_LABEL",template:f,controller:g,priority:2})};h.$inject=["ViewsProvider"],b.exports=h}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../../../../../../common/scripts/util/search-widget-utils":86}],81:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/suspension-state-action.html -->\n<a class="btn btn-default action-button"\n   ng-click="openSuspensionStateDialog(jobDefinition)"\n   ng-show="jobDefinition.suspended"\n   tooltip="{{ \'PLUGIN_JOBDEFINITION_STATE_ACTION_TOOLTIP_1\' | translate }}"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-play"></span>\n</a>\n<a class="btn btn-default action-button"\n   ng-click="openSuspensionStateDialog(jobDefinition)"\n   ng-hide="jobDefinition.suspended"\n   tooltip="{{ \'PLUGIN_JOBDEFINITION_STATE_ACTION_TOOLTIP_2\' | translate }}"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-pause"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/suspension-state-action.html -->\n',e='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-suspension-state-dialog.html -->\n<div class="modal-header">\n  <h3>{{ (jobDefinition.suspended ? \'PLUGIN_JOBDEFINITION_ACTIVE_JOB_DEFINITION\' : \'PLUGIN_JOBDEFINITION_SUSPEND_JOB_DEFINITION\' | translate) }}</h3>\n</div>\n\n<div class="job-definition-suspension-state modal-body">\n  <div notifications-panel></div>\n\n  <div ng-hide="status === \'SUCCESS\' || status === \'FAIL\'">\n\n    <p ng-show="jobDefinition.suspended">\n      <!-- activation -->\n      {{ \'PLUGIN_JOBDEFINITION_LEGEND_ACTIVE\' | translate }}\n    </p>\n\n    <p ng-hide="jobDefinition.suspended">\n      <!-- suspension -->\n      {{ \'PLUGIN_JOBDEFINITION_LEGEND_SUSPEND\' | translate }}\n    </p>\n\n    <form class="form-horizontal"\n          name="updateSuspensionStateForm"\n          novalidate\n          request-aware\n          ng-submit="updateSuspensionState()">\n\n      <fieldset>\n        <div class="form-group">\n          <label class="col-xs-4 control-label"\n                 for="includeJobsValue">\n            {{ \'PLUGIN_JOBDEFINITION_INCLUDE_EXISTING_JOB\' | translate }}\n            <!-- activation -->\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="{{ \'PLUGIN_JOBDEFINITION_INCLUDE_EXISTING_JOB_TOOLTIP_1\' | translate }}"\n                  tooltip-placement="right"\n                  ng-show="jobDefinition.suspended">\n            </span>\n\n            <!-- suspension -->\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="{{ \'PLUGIN_JOBDEFINITION_INCLUDE_EXISTING_JOB_TOOLTIP_2\' | translate }}"\n                  tooltip-placement="right"\n                  ng-hide="jobDefinition.suspended">\n            </span>\n          </label>\n\n\n          <div class="col-xs-8 checkbox">\n            <label>\n              <input id="includeJobsValueId"\n                     name="includeJobsValue"\n                     type="checkbox"\n                     ng-model="data.includeJobs" />\n            </label>\n          </div>\n        </div>\n\n        <div class="form-group">\n          <label class="col-xs-4 control-label"\n                 for="executeImmediately">\n            {{ \'PLUGIN_JOBDEFINITION_EXECUTE\' | translate }}\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="{{ \'PLUGIN_JOBDEFINITION_EXECUTE_TOOLTIP_1\' | translate }}"\n                  tooltip-placement="right"\n                  ng-show="jobDefinition.suspended">\n            </span>\n\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="{{ \'PLUGIN_JOBDEFINITION_EXECUTE_TOOLTIP_2\' | translate }}"\n                  tooltip-placement="right"\n                  ng-hide="jobDefinition.suspended">\n            </span>\n          </label>\n\n          <div class="col-xs-8">\n            <div class="radio">\n              <label>\n                <input ng-model="data.executeImmediately"\n                       ng-value="true"\n                       type="radio"\n                       name="execute" />\n                {{ \'PLUGIN_JOBDEFINITION_IMMEDIATELY\' | translate }}\n              </label>\n            </div>\n\n            <div class="radio">\n              <label>\n                <input ng-model="data.executeImmediately"\n                       ng-value="false"\n                       type="radio"\n                       name="execute" />\n                {{ \'PLUGIN_JOBDEFINITION_DELAYED\' | translate }}\n              </label>\n            </div>\n          </div>\n        </div>\n\n        <div class="form-group"\n             ng-show="!data.executeImmediately">\n          <label class="col-xs-4 control-label"\n                 for="executionDateValue">\n            {{ \'PLUGIN_JOBDEFINITION_SCHEDULE_AT\' | translate }}\n          </label>\n\n          <div class="col-xs-8">\n            <input name="executionDateValue"\n                   ng-model="data.executionDate"\n                   class="form-control"\n                   type="text"\n                   date\n                   required />\n\n            <p class="invalid"\n               ng-show="this.updateSuspensionStateForm.executionDateValue.$error.datePattern">\n              {{ \'PLUGIN_JOBDEFINITION_SUPPORTED_PATTERN\' | translate }}\n            </p>\n\n            <p class="invalid"\n               ng-show="this.updateSuspensionStateForm.executionDateValue.$error.dateValue">\n              {{ \'PLUGIN_JOBDEFINITION_INVALID_DATE_VALUE\' | translate }}\n            </p>\n\n          </div>\n        </div>\n\n      </fieldset>\n    </form>\n\n    <p>\n      {{ (jobDefinition.suspended ? \'PLUGIN_JOBDEFINITION_DO_ACTIVATE\' : \'PLUGIN_JOBDEFINITION_DO_SUSPEND\' | translate ) }}\n    </p>\n\n  </div>\n\n  <div ng-show="status === \'SUCCESS\'">\n    <p ng-show="jobDefinition.suspended && data.executeImmediately">\n      {{ \'PLUGIN_JOBDEFINITION_LEGEND_1\' | translate }}\n    </p>\n    <p ng-show="jobDefinition.suspended && !data.executeImmediately">\n      {{ \'PLUGIN_JOBDEFINITION_LEGEND_2\' | translate:\' { data: (data.executionDate | camDate) }\' }}\n    </p>\n    <p ng-show="!jobDefinition.suspended && data.executeImmediately">\n      {{ \'PLUGIN_JOBDEFINITION_LEGEND_3\' | translate }}\n    </p>\n    <p ng-show="!jobDefinition.suspended && !data.executeImmediately">\n      {{ \'PLUGIN_JOBDEFINITION_LEGEND_4\' | translate:\' { data: (data.executionDate | camDate) }\' }}\n    </p>\n  </div>\n\n  <div ng-show="status === \'FAIL\'">\n    <p ng-show="jobDefinition.suspended && data.executeImmediately">\n      {{ \'PLUGIN_JOBDEFINITION_LEGEND_5\' | translate }}\n    </p>\n    <p ng-show="jobDefinition.suspended && !data.executeImmediately">\n      {{ \'PLUGIN_JOBDEFINITION_LEGEND_6\' | translate:\' { data: (data.executionDate | camDate) }\' }}\n    </p>\n    <p ng-show="!jobDefinition.suspended && data.executeImmediately">\n      {{ \'PLUGIN_JOBDEFINITION_LEGEND_7\' | translate }}\n    </p>\n    <p ng-show="!jobDefinition.suspended && !data.executeImmediately">\n      {{ \'PLUGIN_JOBDEFINITION_LEGEND_8\' | translate:\' { data: (data.executionDate | camDate) }\' }}\n    </p>\n  </div>\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-link"\n          ng-click="close(status)"\n          ng-disabled="status === \'PERFORM_UDPATE\'"\n          ng-hide="status === \'SUCCESS\' || status === \'FAIL\'">\n    {{ \'PLUGIN_JOBDEFINITION_CLOSE\' | translate }}\n  </button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="updateSuspensionState()"\n          ng-hide="status === \'SUCCESS\' || status === \'FAIL\'"\n          ng-disabled="!isValid() || status === \'PERFORM_UDPATE\'">\n    {{ (jobDefinition.suspended ? \'PLUGIN_JOBDEFINITION_ACTIVATE\' : \'PLUGIN_JOBDEFINITION_SUSPEND\' | translate) }}\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="close(status)"\n          ng-show="status === \'SUCCESS\' || status === \'FAIL\'">\n    {{ \'PLUGIN_JOBDEFINITION_OK\' | translate }}\n  </button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-suspension-state-dialog.html -->\n',f=function(a){a.registerDefaultView("cockpit.jobDefinition.action",{id:"update-suspension-state",template:d,controller:["$scope","$rootScope","search","$modal",function(a,b,d,f){a.openSuspensionStateDialog=function(d){var g=f.open({resolve:{jobDefinition:function(){return d}},controller:"JobDefinitionSuspensionStateController",template:e});g.result.then(function(e){"SUCCESS"===e.status&&(e.executeImmediately&&(d.suspended=e.suspended,b.$broadcast("$jobDefinition.suspensionState.changed",a.jobDefinition)),a.processData.set("filter",c.extend({},a.filter)))})}}],priority:50})};f.$inject=["ViewsProvider"],b.exports=f}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],82:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./views/main");b.exports=d.module("cockpit.plugin.tasks",[e.name])}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./views/main":84}],83:[function(a,b,c){"use strict";var d='<!-- # CE - ui/cockpit/plugins/tasks/app/views/dashboard/task-dashboard.html -->\n<div class="dashboard-row">\n  <section class="col-xs-12 col-md-6">\n    <div class="inner">\n      <header>\n        <h1 class="section-title">{{ \'PLUGIN_TASK_ASSIGNMENT_BY_TYPE\' | translate }}</h1>\n      </header>\n      <table class="cam-table values-left" id="open-task-statistics">\n        <thead>\n          <tr>\n            <th>{{ \'PLUGIN_TASK_TASKS\' | translate }}</th>\n            <th>{{ \'PLUGIN_TASK_TYPES\' | translate }}</th>\n          </tr>\n        </thead>\n\n        <tfoot>\n          <tr>\n            <th>\n              <span ng-if="!openTasksState.$loaded" class="glyphicon glyphicon-refresh animate-spin"></span>\n              <span ng-if="openTasksState.$loaded && !hasSearchPlugin">{{ openTasksCount }}</span>\n              <span ng-if="openTasksState.$loaded && hasSearchPlugin">\n                <a class="search-link" ng-click="createSearch(\'allOpenTasks\', \'statistics\')">{{ openTasksCount }}</a>\n              </span>\n            </th>\n            <th>{{ \'PLUGIN_TASK_TOTAL\' | translate }}</th>\n          </tr>\n        </tfoot>\n\n        <tbody>\n          <tr ng-repeat="taskStatistic in taskStatistics">\n            <th>\n              <span ng-if="!taskStatistic.state.$loaded" class="glyphicon glyphicon-refresh animate-spin"></span>\n              <span ng-if="taskStatistic.state.$loaded && !hasSearchPlugin">{{ taskStatistic.count }}</span>\n              <span ng-if="taskStatistic.state.$loaded && hasSearchPlugin">\n                <a class="search-link" ng-click="createSearch(taskStatistic.search, \'statistics\')"> {{ taskStatistic.count }}</a>\n              </span>\n            </th>\n            <td>{{ taskStatistic.label }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </section>\n\n  <section class="col-xs-12 col-md-6">\n    <div class="inner">\n      <header>\n        <h1 class="section-title">{{ \'PLUGIN_TASK_ASSIGNMENT_BY_GROUP\' | translate }}</h1>\n      </header>\n      <table class="cam-table values-left" id="task-group-counts">\n        <thead>\n          <tr>\n            <th>{{ \'PLUGIN_TASK_TASKS\' | translate }}</th>\n            <th>{{ \'PLUGIN_TASK_GROUP\' | translate }}</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr ng-if="!taskGroupState.$loaded && !taskGroupState.$error">\n            <td colspan="2"><span class="glyphicon glyphicon-refresh animate-spin"></span></td>\n          </tr>\n          <tr ng-if="taskGroupState.$loaded" ng-repeat="taskGroup in taskGroups">\n            <td ng-if="!hasSearchPlugin">{{ taskGroup.taskCount }}</td>\n            <td ng-if="hasSearchPlugin">\n              <a class="search-link" ng-click="createSearch(taskGroup.groupName, \'group\')">{{ taskGroup.taskCount }}</a>\n            </td>\n            <td>{{ formatGroupName(taskGroup.groupName) }}</td>\n          </tr>\n        </tbody>\n      </table>\n      <p id="multiple-groups-info" ng-if="taskGroupState.$loaded">\n        <span class="glyphicon glyphicon-info-sign"></span>\n        {{ \'PLUGIN_TASK_LEGEND_FOOTER\' | translate }}\n      </p>\n    </div>\n  </section>\n</div>\n<!-- / CE - ui/cockpit/plugins/tasks/app/views/dashboard/task-dashboard.html -->\n';
b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.tasks.dashboard",{id:"task-dashboard",label:"PLUGIN_TASK_DASHBOARD_TITLE",template:d,controller:["$scope","$q","Views","camAPI","dataDepend","search","Notifications","$translate",function(a,b,c,d,e,f,g,h){var i=e.create(a),j=d.resource("history"),k=d.resource("task-report");a.taskStatistics=[{state:void 0,label:h.instant("PLUGIN_TASK_ASSIGNED_TO_USER"),count:0,search:"openAssignedTasks"},{state:void 0,label:h.instant("PLUGIN_TASK_ASSIGNED_TO_ONE"),count:0,search:"openGroupTasks"},{state:void 0,label:h.instant("PLUGIN_TASK_ASSIGNED_UNASSIGNED"),count:0,search:"openUnassignedTasks"}];var l=function(a,c,d,e){var f=b.defer(),i=function(){return"countByCandidateGroup"===d?h.instant("PLUGIN_TASK_ERROR_COUNT"):h.instant("PLUGIN_TASK_ERROR_FETCH",{res:a})},j=function(a,b){a?(g.addError({status:h.instant("PLUGIN_TASK_ASSIGNED_ERR_COULD_NOT",{err:i}),message:a.toString()}),f.reject(a)):f.resolve(b)};return void 0==e||null==e?c[d](j):c[d](e,j),f.promise},m=function(){return{unfinished:!0}};i.provide("openTaskCount",function(){return l(h.instant("PLUGIN_TASK_ERROR_OPEN_TASKS"),j,"taskCount",m())}),i.provide("assignedToUserCount",function(){var a=m();return a.assigned=!0,l(h.instant("PLUGIN_TASK_ERROR_ASSIGNED_TO_USERS"),j,"taskCount",a)}),i.provide("assignedToGroupCount",function(){var a=m();return a.unassigned=!0,a.withCandidateGroups=!0,l(h.instant("PLUGIN_TASK_ERROR_ASSIGNED_TO_GROUPS"),j,"taskCount",a)}),i.provide("notAssignedCount",function(){var a=m();return a.unassigned=!0,a.withoutCandidateGroups=!0,l(h.instant("PLUGIN_TASK_ERROR_UNASSIGNED"),j,"taskCount",a)}),i.provide("countByCandidateGroup",function(){return l(h.instant("PLUGIN_TASK_ERROR_PER_GROUP"),k,"countByCandidateGroup")}),a.openTasksState=i.observe(["openTaskCount"],function(b){a.openTasksCount=b.count||0}),a.taskStatistics[0].state=i.observe(["assignedToUserCount"],function(b){a.taskStatistics[0].count=b.count||0}),a.taskStatistics[1].state=i.observe(["assignedToGroupCount"],function(b){a.taskStatistics[1].count=b.count||0}),a.taskStatistics[2].state=i.observe(["notAssignedCount"],function(b){a.taskStatistics[2].count=b.count||0}),a.taskGroupState=i.observe(["countByCandidateGroup"],function(b){a.taskGroups=b}),a.formatGroupName=function(a){return null==a?h.instant("PLUGIN_TASK_ASSIGNED_WITHOUT_GROUP"):a};var n=c.getProviders({component:"cockpit.tasks.dashboard"}),o=a.hasSearchPlugin=n.filter(function(a){return"search-tasks"===a.id}).length>0;if(o){var p=function(a,b,c){return arguments.length<3&&(b="eq",c=""),{type:a,operator:b,value:c,name:""}},q=function(){return[p("unfinished")]},r=q();a.createSearch=function(a,b){if("statistics"===b)switch(a){case"openAssignedTasks":r.push(p("assigned"));break;case"openGroupTasks":r.push(p("withCandidateGroups")),r.push(p("unassigned"));break;case"openUnassignedTasks":r.push(p("withoutCandidateGroups")),r.push(p("unassigned"))}else null!=a?r.push(p("taskHadCandidateGroup","eq",a)):(r.push(p("withoutCandidateGroups")),r.push(p("unassigned")));f.updateSilently({searchQuery:JSON.stringify(r)},!0),r=q()}}}],priority:0})}]},{}],84:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./dashboard/task-dashboard"),f=d.module("cockpit.plugin.tasks.views",[]);f.config(e),b.exports=f}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./dashboard/task-dashboard":83}],85:[function(a,b,c){"use strict";function d(a,b){return a.indexOf(b)!==-1}b.exports=d},{}],86:[function(a,b,c){"use strict";function d(a,b){b=[].concat(b);var c=JSON.stringify(q(a,b));return e("searchQuery="+c)}function e(a){return encodeURI(a).replace(/#/g,"%23")}function f(a,b,c){return c=C.isArray(c)?c:[],!C.equals(g(a,c),g(b,c))}function g(a,b){return C.isObject(a)?i(h(a,b)):a}function h(a,b){return Object.keys(a).reduce(function(c,d){var e=a[d];return E(b,d)&&(c[d]=e),c},{})}function i(a){return Object.keys(a).reduce(function(b,c){var d=a[c];return null!=d&&(b[c]=d),b},{})}function j(a,b){var c=JSON.parse(b.searchQuery||"[]");return k(a,c)}function k(a,b){return b.filter(function(b){return b.type===a}).map(function(a){return a.value})}function l(a,b,c){var d=m(a,c,b),e=n(c,a,b);return d.concat(q(b,e))}function m(a,b,c){return a.filter(function(a){return a.type!==c||!E(b,a.value)})}function n(a,b,c){var d=b.filter(function(a){return a.type===c}).map(function(a){return a.value});return a.filter(function(a){return!E(d,a)})}function o(a,b,c){return p(b,a).concat(q(b,c))}function p(a,b){return b.filter(function(b){return b.type!==a})}function q(a,b){return b.map(r.bind(null,a))}function r(a,b){return{type:a,operator:"eq",value:b}}function s(a,b,c){return a=C.isArray(a)?a:[],b=C.isArray(b)?b:[],c=C.isArray(c)?c:["variables"],b=b.concat(c),a.reduce(t.bind(null,b,c),{})}function t(a,b,c,d){var e=u(d,b),f=x(d,e,b);return E(b,e)&&(f=A(d,f)),E(a,e)?c[e]=B(c,e,f):c[e]=f,c}function u(a,b){var c=a.type.value.key,d=a.operator.value.key;return v(c)&&(c=c.slice(0,-4)),w(d)&&!E(b,c)&&(c+=d),c}function v(a){return a.indexOf("Date")!==-1}function w(a){return E(["After","Before","Like"],a)}function x(a){return!!a.basic||y(a.value.value,a.operator.value.key,a)}function y(a,b,c){var d=/(\\%)|(\\_)/g,e=/(\%)|(\_)/;return"like"!==b.toLowerCase()||e.test(a.replace(d,""))?c.allowDates&&F.test(a)?D(a).format("YYYY-MM-DDTHH:mm:ss.SSSZZ"):a:"%"+a+"%"}function z(a){return isNaN(a)||""===a.trim()?"true"===a||"false"!==a&&("NULL"===a?null:0===a.indexOf("'")&&a.lastIndexOf("'")===a.length-1?a.substr(1,a.length-2):a):+a}function A(a,b){return{name:a.name.value,operator:a.operator.value.key,value:z(b)}}function B(a,b,c){return C.isArray(a[b])?a[b].concat([c]):[c]}var C=a("camunda-commons-ui/vendor/angular"),D=a("camunda-commons-ui/vendor/moment"),E=a("./includes");b.exports={getSearchQueryForSearchType:d,getActivityIdsFromUrlParams:j,replaceActivitiesInSearchQuery:o,createSearchQueryForSearchWidget:s,shouldUpdateFilter:f,createSearchesForActivityIds:q,encodeQuery:e,updateSearchValuesForTypeInCtrlMode:l};var F=/^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(|\.[0-9]{0,4})$/},{"./includes":85,"camunda-commons-ui/vendor/angular":3,"camunda-commons-ui/vendor/moment":4}]},{},[50])(50)});